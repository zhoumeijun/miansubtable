{"version":3,"sources":["webpack:///./components/Refers/mdDefaultClassEntityRef/index.js","webpack:///./pages/ZoneSetting/index.less?f86a","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/input-number/style/index.js","webpack:///./pages/ZoneSetting/components/DragArea/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_rmc-feedback@2.0.0@rmc-feedback/es/TouchFeedback.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_rc-input-number@4.0.13@rc-input-number/es/InputHandler.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_rc-input-number@4.0.13@rc-input-number/es/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/input-number/index.js","webpack:///./pages/ZoneSetting/index.less","webpack:///./assets/images/hiddenProperty.png","webpack:///./pages/ZoneSetting/header.js","webpack:///./pages/ZoneSetting/content.js","webpack:///./pages/ZoneSetting/areaItem.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/values.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_core-js@2.6.9@core-js/library/fn/object/values.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_core-js@2.6.9@core-js/library/modules/es7.object.values.js","webpack:///./pages/ZoneSetting/card.js","webpack:///./pages/ZoneSetting/createCard.js","webpack:///./pages/ZoneSetting/batchSettingModal.js","webpack:///./pages/ZoneSetting/batchTable.js","webpack:///./pages/ZoneSetting/editableCell.js","webpack:///./pages/ZoneSetting/addNotMetaDataModal.js","webpack:///./pages/ZoneSetting/components/FormGroupArea/index.js","webpack:///./pages/ZoneSetting/components/TableFoldArea/index.js","webpack:///./pages/ZoneSetting/components/TableDrawerArea/index.js","webpack:///./pages/ZoneSetting/components/GrandsonArea/index.js","webpack:///./pages/ZoneSetting/treeModal.js","webpack:///./assets/images/template-empty-content.png","webpack:///./pages/ZoneSetting/rightSider.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_is-negative-zero@2.0.0@is-negative-zero/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/input-number/style/index.less?2524","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/input-number/style/index.less","webpack:///./pages/ZoneSetting/moneyModal.js","webpack:///./pages/ZoneSetting/referModal.js","webpack:///./pages/ZoneSetting/customModal.js","webpack:///./components/Refers/DefdocListGridRef/index.js","webpack:///./pages/ZoneSetting/relateMetaModal.js","webpack:///./pages/ZoneSetting/defaultValueModal.js","webpack:///./pages/ZoneSetting/CusDocDefaultValueModal.js","webpack:///./components/Refers/DefdocGridRef/index.js","webpack:///./components/Refers/DefdocTreeRef/index.js","webpack:///./pages/ZoneSetting/SetTemplate/setTemplateRight.js","webpack:///./pages/ZoneSetting/leftSider.js","webpack:///./pages/ZoneSetting/components/AreaType/index.js","webpack:///./pages/ZoneSetting/components/AreaType/AreaTypeItem.js","webpack:///./pages/ZoneSetting/components/NotMetaData/index.js","webpack:///./pages/ZoneSetting/components/NotMetaData/NotMetaItem.js","webpack:///./pages/ZoneSetting/SetTemplate/setTemplateLeft.js","webpack:///./pages/ZoneSetting/SetTemplate/CreatForm.js","webpack:///./pages/ZoneSetting/index.js","webpack:///./components/PageLayout/index.js","webpack:///./components/PageLayout/index.less?a318","webpack:///./components/PageLayout/index.less","webpack:///./store/ZoneSetting/action.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/row/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/col/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/row/style/index.js","webpack:///F:/gerrit/jenkins/ncc1.0/lightapp/root/release/Workbench_Front/node_modules/_antd@3.9.2@antd/es/col/style/index.js","webpack:///./components/Appicon/index.js","webpack:///./components/CoverPosition/index.js","webpack:///./pub/js/withDragDropContext.js","webpack:///./assets/images/nodata.png","webpack:///./assets/images/idea.png","webpack:///./components/CoverPosition/index.less?74b8","webpack:///./components/CoverPosition/index.less","webpack:///./components/TempletPreview/index.js","webpack:///./components/TempletPreview/index.less?553f","webpack:///./components/TempletPreview/index.less","webpack:///./store/Zone/action.js"],"names":["props","conf","queryTreeUrl","refType","isTreelazyLoad","refName","langCheck","rootNode","refname","refpk","Refer","high","content","module","i","options","transform","undefined","locals","exports","DragArea","renderChildren","children","onDragItemClick","React","Children","map","child","cloneElement","bind","state","this","headerTitle","renderHeader","className","Component","_React$Component","TouchFeedback","_this","__proto__","Object","getPrototypeOf","apply","arguments","active","onTouchStart","e","triggerEvent","onTouchMove","onTouchEnd","onTouchCancel","onMouseDown","onMouseUp","onMouseLeave","key","value","disabled","setState","type","isActive","ev","eventType","_props","activeClassName","activeStyle","events","only","_child$props","style","defaultProps","_Component","InputHandler","prototype","render","prefixCls","otherProps","createElement","propTypes","string","bool","func","noop","preventDefault","MAX_SAFE_INTEGER","Number","Math","pow","InputNumber","call","defaultValue","toNumber","inputValue","toPrecisionAsStep","focused","autoFocus","componentDidMount","componentDidUpdate","componentWillReceiveProps","nextProps","getValidValue","min","max","inputting","nextValue","onChange","cursorStart","partRestoreByAfter","cursorAfter","currentValue","input","lastKeyCode","KeyCode","BACKSPACE","fixCaret","DELETE","pos","length","pressingUpOrDown","focusOnUpDown","document","activeElement","focus","componentWillUnmount","stop","getCurrentValidValue","val","isNotCompleteNumber","getRatio","ratio","metaKey","ctrlKey","shiftKey","getValueFromEvent","target","trim","replace","parseFloat","isNaN","setValue","v","callback","newValue","changed","getPrecision","precision","valueString","toString","indexOf","parseInt","slice","getMaxPrecision","step","ratioPrecision","stepPrecision","currentValuePrecision","getPrecisionFactor","start","end","currentStart","selectionStart","currentEnd","selectionEnd","setSelectionRange","recordCursorPosition","blur","formatWrapper","num","formatter","abs","toFixed","toNumberWhenUserInput","test","upStep","rat","_props2","precisionFactor","result","Infinity","downStep","_props3","_this2","recursive","persist","outOfRange","autoStepTimer","setTimeout","_classNames","readOnly","useTouch","classes","upDisabledClass","downDisabledClass","dataOrAriaAttributeProps","hasOwnProperty","substr","editable","inputDisplayValue","getInputDisplayValue","upEvents","downEvents","up","down","inputDisplayValueFormat","isUpDisabled","isDownDisabled","onMouseEnter","onMouseOver","onMouseOut","ref","saveUp","unselectable","role","upHandler","onClick","saveDown","downHandler","required","placeholder","tabIndex","autoComplete","onFocus","onBlur","onKeyDown","onKeyUp","maxLength","name","id","saveInput","pattern","oneOfType","number","node","parser","_this3","_len","args","Array","_key","keyCode","UP","DOWN","_ratio","concat","_len2","_key2","_props4","_len3","_key3","_props5","_state","cursorEnd","cursorBefore","substring","restoreByAfter","str","fullStr","index","lastIndexOf","some","_","partStr","clearTimeout","__rest","s","t","p","getOwnPropertySymbols","_a","size","others","inputNumberClass","upIcon","downIcon","c","inputNumberRef","escape","push","confirm","MyHeader","setModalVisibel","visibel","previewVisibel","validateEmptyArea","json","areaList","newAreaList","newList","cloneDeep","areaCodeLang","areaNameLang","emptyMsg","emptyArea","filter","area","code","simpleArea","r","forEach","msg","getEmptyMsg","msgObj","groups","sides","edit","browse","grandsons","stype","areaIndex","findIndex","item","pk_area","areaStr","sArr","suffix","areastatus","msgPrefix","validateEmptySpecialArea","status","TextArr","groupOperation","groupOperationMsg","setAreaListValidate","updateAreaList","updateAreaValidate","prefix","join","validateCode","list","repeatArea","findRepeatItemsByCode","isAreaEmpty","repeatNames","areas","validate","saveTemplate","refresh","resolve","saveZoneData","then","newAreaData","saveData","reject","zoneDatas","param","GetQuery","location","search","datas","fromData","zoneFormData","areatype","headcode","validateResult","newArea","formPropertyList","queryPropertyList","position","pk_page_templet","pagecode","pcode","pageid","pid","parentid","isdefault","appcode","clazz","mateid","url","data","info","action","success","templetid","queryAllArea","error","console","log","configRefer","al","idx","daty","kk","datatype","label","colvalue","colnum","maxlength","a","q","pk_query_property","newAreaId","find","areaid","ismobile","urlRequestObj","templettype","loading","res","localStorage","removeItem","queryTemplateProperty","updateSaveFlag","toggleBackModal","flag","backModalShow","handleBack","isSave","handleNotSaveBack","back","openPage","jumpUrl","n","b1","b2","b3","handleSaveBack","handleCancelBack","getPreviewData","j","window","hash","templetData","appCode","requestUrl","requestData","mask","closable","title","visible","centered","maskClosable","width","height","footer","connect","zoneSettingData","zoneRegisterData","setZoneData","setZoneDataFun","withRouter","areaTarget","drop","monitor","component","dragItem","getItem","areaType","addNewAreaItem","items","areaCode","isExpand","canDrop","MyContent","DropTarget","connectDropTarget","dropTarget","isOver","setModalVisible","modalVisible","addMetaInArea","metaid","targetAreaID","rows","metaTree","refcode","myUniqID","isLeaf","isleaf","canSelectTreeNodeList","m","targetAreaType","updateMetaTreeData","addCard","addCardList","targetAreaIndex","uniqBy","classid","deleteCard","cardIndex","areaItemIndex","splice","updateSelectCard","dragAreaItem","dragIndex","hoverIndex","moveUp","targetIndex","tempArr","findLastIndex","swapAreaItem","moveDown","moveArea","moveType","headCode","getFormHeadCode","relationcode","headIndex","moveFormGroup","moveAreaItem","currArea","formGroupList","getFormGroupList","itemIndex","insertAreaItem","sourceIndex","targetArea","moveFormGroupItem","prevGroupIndex","nextGroupIndex","moveChildrenItem","moveGrandsonItem","grandson","prevGrandsonIndex","isgrandson","nextGrandsonIndex","prevChildIndex","nextChildIndex","targetindex","deleteAreaItem","areaID","remove","expandArea","isShow","relationList","clearData","clearZoneData","backgroundColor","areaItem","areaListLength","onDragArea","onMoveArea","onMoveFormGroup","onMoveGrandson","onDeleteArea","onExpandArea","pageStatus","isImplement","src","emptycontentImg","targetAreaCardLength","updateSelectArea","areaSource","beginDrag","removeSelectCardCls","canDrag","AreaItem","DragSource","connectDragSource","dragSource","isDragging","openAddNotMetaInArea","shallow","currentNotMeta","realAreaIndex","from","moveCard","cards","dragCard","metaId","areaId","openBatchSetting","newIndex","updateBatchSource","batchSettingModalVisibel","setAddDataModalVisibel","addDataModalVisibel","getAreaIndexByPk","showOrHideAreaItem","oprWidth","oprColRef","clientWidth","toggleFormGroup","groupShowArr","clearSelectCard","selectAreaItem","stopPropagation","selectCard","selectedArea","isEmpty","checkAreaCodeRepeat","handleAddFormGroup","groupPosition","addArea","scrollIntoView","handleHideGray","shouldHideGray","checked","handleGroupHideGray","groupIndex","groupNotVisibleArr","getGroupContentVisible","getGrandsonContentVisible","grandsonIndex","grandsonShowArr","grandsonObj","handleSpecialAreaDrop","checkAreaIsBeginOrEnd","notNullArea","firstArea","lastArea","childType","childArea","handleDeleteArea","deleteCallback","handleToggleFoldForm","foldObj","foldArea","foldShow","isEqual","handleToggleSideForm","sideObj","sideArea","hasGrandsonArea","sideShow","handleToggleGrandson","handleFoldHideGray","foldNotVisible","handleGrandsonHideGray","grandsonNotVisibleArr","copyArea","copyItem","metaname","commonAreaItemsCopy","copyAreaProperty","newItem","newCopyItemArr","newCopyObj","handleCopyFoldArea","copyPosition","handleCopySideArea","handleAddGrandson","getAreaItemCls","areaClassName","renderHeaderBtns","params","implementHideBtns","btn","buttonCls","hasMeta","onHideGray","onAddMeta","onBatchSetting","onAddFormGroup","onCopySideArea","onCopyFoldArea","onMoveDown","onMoveUp","onAddGrandsonTable","onDelete","isFirstArea","isLastArea","placement","color","marginRight","onConfirm","getPopupContainer","getElementsByClassName","okText","cancelText","headerVisible","contentVisible","onToggleHeader","onDrawerToggle","btnContainerStyle","toggleBtn","renderFormGroupCard","group","renderCard","renderTableFoldCard","foldIndex","fold","renderGrandsonCard","cardInfo","renderSearchArea","display","renderGroupHeader","btns","renderAreaHeader","renderFormGroup","groupAreaIndex","groupHeaderBtns","groupHeader","emptyText","onDrop","renderFormArea","renderTableSide","side","sideIndex","onlyGrandson","sideAreaIndex","sideHeader","renderGrandsonArea","renderTableFold","foldAreaIndex","foldHeader","foldCls","grandsonAreaIndex","grandsonHeader","renderTableArea","drawerArea","hideTableOprCol","renderTableOperateCol","foldText","renderAreaContent","areaContent","fill","sideNotVisible","areaStyle","borderColor","propperty","__esModule","values","$export","$values","S","it","MyCard","hover","dropIndex","didDrop","thisCard","isfixedcondition","selectThisCard","updateThisCard","card","updateActiveCardCls","currentTarget","classList","add","getCardClassName","opacity","showName","myClassName","cardProps","hoverCls","tableColWidth","pk_form_property","minWidth","getItemTypeCom","radioSelectedValue","passwordValue","nextState","String","fromCharCode","multiLang","itemDisabled","itemOptions","showdataval","split","commonProps","NCInput","residtxt","password","NCFormControl","isViewMode","queryOperateType","NCBetweenNum","scale","NCNumber","formNumber","textarea","NCTextArea","resize","radio","radioItem","NCRadio","ops","RadioGroup","selectedValue","checkbox_switch","NCCheckbox","colors","checkbox","NCTZDatePickerStart","NCTZDatePickerRangeDay","format","NCTZDatePickClientHourTime","datetimepicker","NCTZDatePickClientTime","timepicker","NCTimepicker","NCTZDatePickerEnd","datePickerNoTimeZone","NCDatePickerNoTimeZone","select","NCSelect","multiple","isMultiSelectedEnabled","labelInValue","Option","datepicker","NCDatePicker","switch_browse","NCSwitch","switch","refer","BaseRefer","newItemType","includes","itemtype","base","platform","NCRadioGroup","NCOption","renderRefer","tmpRefDom","myRefDom","foolValue","defaultvalueObj","showHistory","createScript","renderFakeRefer","top","nccColor","class","cursor","finalRefer","PureComponent","BatchSettingModal","showModalHidden","currentPage","onOkDialog","batchSource","setCheckedByCheckAll","saveNewSource","newSource","newBatchSource","saveAllNewSource","property","loadNextPage","pageSize","handleScrollTable","$scrollTable","batchTableRef","querySelector","scrollTop","clientHeight","scrollHeight","totalPage","indeterminate","checkAllCheckedObj","ceil","firstBatchSource","margin","onOk","destroyOnClose","onCancel","bodyHeight","body","overlayClassName","onScrollCapture","forwardRef","Search","BatchTable","handleVisibleChange","hidePopover","onCellChange","onCheckedChange","onAllColCellChange","saveAllCellValue","publicIndeterminate","arr","region","bat","checkAll","columns","scrollTableWidth","batchData","isnotmetaArr","isuseArr","disabledArr","visibleArr","ismultiselectedenabledArr","isfixedconditionArr","requiredArr","isqueryconditionArr","containlowerArr","ischeckArr","isbeyondorgArr","usefuncArr","batchSearchData","vv","indx","isnotmeta","isuse","ismultiselectedenabled","isquerycondition","containlower","ischeck","isbeyondorg","usefunc","isreviseArr","isnextrowArr","batchFormData","isrevise","isnextrow","istotalArr","batchTableData","istotal","tmpColData","dataIndex","fixed","text","record","EditableCell","updateValue","EditableCheck","SelectCell","selectValue","selectObj","FormulaCell","onFormula","formula","handleFormula","toggleFormula","setCurrentBatchCell","bordered","dataSource","pagination","scroll","x","y","documentElement","locale","setFormulaInfo","handleChange","EditAllCell","handleClick","close","changeValue","getMulti","moduleId","domainName","Boolean","handleSelectChange","onSearch","AddNotMetaDataModal","notMetaDataName","notMetaDataCode","explainForName","explainForCode","checkDataCorrect","correct","cardObj","getItemtypeByDatatype","Date","getTime","metapath","opersign","opersignname","defaultvalue","showtype","returntype","define1","define2","define3","define4","define5","visibleposition","tablecode","querytablename","colorObj","hyperlinkflag","defaultvar","selectCardFromOther","isUniqueInQueryList","checkCode","checkedStr","errorMsg","checkNameAndCodeCorrect","onPressEnter","changeNotMetaDataName","changeNotMetaDataCode","componentWillUpdate","refs","addNotMetaDataInputDom","customHeader","wrapClassName","marginBottom","marginLeft","visibility","FormGroupArea","TableFoldArea","TableDrawerArea","getContainer","zIndex","padding","GrandsonArea","utilService","TreeNode","TreeModal","selectedKeys","checkedKeys","selectedNodes","checkedNodes","needToBeAllSelectNodeList","onOkMoveDialog","cardList","dataRef","modelname","notSearchAreaCode","proid","resid","readonly","getObjNameByDatatype","opersignObj","opersignNameObj","myrefpk","iscode","isdefined","dataval","ajaxDataForSelect","d","d2","setDatavalForCard","ajaxData","pk_refinfo","refpath","onSelect","onCheck","renderTreeNodes","switcherIcon","expanded","onLoadData","treeNode","tmpMetaTree","getContentDom","checkable","checkStrictly","loadData","showLine","selectAllTreeNode","isChecked","metaTreeNodeList","handleChangeSelectTreeNode","getModalTitleDom","maxTagCount","mode","searchValue","TabPane","FormulaEditor","inputStyle","MyRightSider","propertyKey","changeCheckboxValue","currentArea","getArea","queryFixedCondition","pk_template","araecode","propcode","isfixedconditionFlag","asyncUpdataCardAndAreaList","updateCardInArea","targetCardIndex","getCardListInAreaBySelectCard","getMyNumberInput","getMyCheckbox","getMySelect","mySelectObj","getMetaType","getAreaType","whichModalVisibel","getMySearch","searchVal","defaultValName","getPropertyDisabled","getMyFormulaSearch","renderCanEditFields","canEditFields","renderCustomDocRefer","docPk","isgrade","modalVisibel","customDocDefaultModalVisibel","renderMoneyModal","initVal","moneyModalVisibel","getDom1","meteDate","defaultActiveKey","tab","getMyInput","dataTypeObj","showDataTypeName","defaultValueModalVisibel","getItemtypeObjByDatatype","showType","returnType","getDom2","getDom3","isMetaData","isShowRelateMeta","areaCardList","validateDataParm","regionCode","isUndefined","defaultvarObj","referModalVisibel","iscodeVal","customModalVisibel","relatemeta","relateMetaModalVisibel","handleFormulaOkClick","formulaType","currentBatchCell","showformula","editformula","validateformula","notMeteData","result_div","isValidateOnOK","validateUrl","validateData","formulaUrl","treeParam","pk_billtype","bizmodelStyle","noShowAttr","show","onHide","attrConfig","MoneyModal","small","big","customScale","saveValue","isNull","initArray","ReferModal","checkboxChange","option","defdoc","Notice","true","mycode","filterOption","o","scode","showSearch","optionFilterProp","toLowerCase","optionObj","CustomModal","refCode","queryGridUrl","columnConfig","RelateMetaModal","myMetaPath","icon","xlinkHref","selectTreeNodes","cardClick","tmpDataRef","deleteMyMetaPath","getOpacity","cardDataType","selectTreeDataType","tmpArr1","tmpArr2","tmpArr","selectTreeNodeDatatype","fontSize","PageLayout","PageLayoutLeft","showIcon","PageLayoutRight","DefaultValueModal","tmpDefaultvalueList","functions","CusDocDefaultValueModal","renderDocRefer","referProps","queryCondition","pk_defdoclist","Group","formItemStyle","SetTemplateRight","changeTemplateValue","oldValue","currAreaIndex","ControlTip","setMetaData","getTemplateInput","curArea","getItemDisabled","getTemplateSelect","getTemplateRefer","initialValue","getTemplateRadio","event","isunfold","PropTypes","MyLeftSider","left","onToggleBtnClick","AreaType","areaTypeMap","areacode","areaTypeHeader","connectDragPreview","dragPreview","NotMetaData","notMetaData","nowrap","SetTemplateLeft","context","getFromData","form","getFieldsValue","validateFields","err","getFormItem","DOMDATA","newArray","table","lable","gutter","createForm","create","zoneArr","object","isRequired","FormItem","Item","createFormItem","propsData","md","lg","xl","itemInfo","nodeData","getFieldDecorator","check","formItemChange","formData","newFormData","rules","message","validator","Step","ZoneSetting","toggleLeftSider","leftSiderShow","isLang","multiZoneSettingLang","setJson","setZoneTempletid","NCDiv","isMouseDown","handleMouseUp","handleMouseMove","mouseLeft","clientX","layoutLeft","blockLeft","getBoundingClientRect","w","header","onMouseMove","PageScrollLayout","handleScroll","initScrollContainerTop","suck","containerWidthChange","getElementById","addEventListener","removeEventListener","onScroll","handleMouseDown","PageLayoutHeader","config","HEADER","any","zonesetting","ZONESETTING","UPDATESELECTCARD","init","UPDATEAREALIST","UPDATESELECTAREA","updatePreviewData","previewData","PREVIEWDATA","CLEARDATA","TOGGLEFORMULA","formulaInfo","SETFORMULAINFO","UPDATEBATCHSOURCE","cell","SETCURRENTBATCHCELL","SETZONEFORMFUN","UPDATESAVEFLAG","SETAREAVALIDATE","AppIconStore","getStore","iconName","AppIcons","DefaultAppIcon","background","backgroundSize","CoverPosition","switchImg","IDEA","NoData","DragDropContext","HTML5Backend","initTemplate","meta","setMeta","PreviewModal","createDom","editTable","createEditTable","NCCreateSearch","all_keys","myAreaType","reviewData","moduletype","formrelation","setFormStatus","addRow","sortBy","fieldid","createPage","ZoneRegister","SETZONEDATA","ZONETEMPLATID","setZoneState","ZONESTATE","setNewList","SETNEWLIST","ZONEDATAFUN","setTemplateDataFun","getTemplateFromData","SETTEMPLATEFUN","JSON"],"mappings":"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","file":"10.7cdb74f1.js","sourcesContent":["import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        queryTreeUrl: \"/nccloud/riart/ref/mdClassDefaultEntityRefTreeAction.do\",\r\n        refType: \"tree\",\r\n        isTreelazyLoad: false,\r\n        refName: langCheck('0000PUB-000046'),/* 国际化处理： 元数据*/\r\n        rootNode: { refname: langCheck('0000PUB-000046'), refpk: \"root\" }/* 国际化处理： 元数据*/\r\n    };\r\n\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","\nvar content = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import '../../style/index.less';\nimport './index.less';","/* \r\n    拖拽区域布局组件\r\n    created by: liyaoh 2019-04-30\r\n*/\r\nimport React, { Component } from 'react';\r\n\r\nclass DragArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    \r\n    //渲染children\r\n    renderChildren = () => {\r\n        const { children, onDragItemClick } = this.props;\r\n        return React.Children.map(children, (child) => {\r\n            //将父组件事件绑定到子组件上\r\n            return React.cloneElement(child, {\r\n                onDragItemClick: onDragItemClick && onDragItemClick.bind(this, child.props)\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { headerTitle, renderHeader } = this.props;\r\n        return (\r\n            <div className=\"side-panel\">\r\n                <div className=\"panel-header\">\r\n                {\r\n                    renderHeader ? renderHeader : \r\n                    <span className=\"title\">{headerTitle}</span>\r\n                }\r\n                </div>\r\n                <div className=\"panel-content clearfix\">\r\n                    {this.renderChildren()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DragArea;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport classNames from 'classnames';\n\nvar TouchFeedback = function (_React$Component) {\n    _inherits(TouchFeedback, _React$Component);\n\n    function TouchFeedback() {\n        _classCallCheck(this, TouchFeedback);\n\n        var _this = _possibleConstructorReturn(this, (TouchFeedback.__proto__ || Object.getPrototypeOf(TouchFeedback)).apply(this, arguments));\n\n        _this.state = {\n            active: false\n        };\n        _this.onTouchStart = function (e) {\n            _this.triggerEvent('TouchStart', true, e);\n        };\n        _this.onTouchMove = function (e) {\n            _this.triggerEvent('TouchMove', false, e);\n        };\n        _this.onTouchEnd = function (e) {\n            _this.triggerEvent('TouchEnd', false, e);\n        };\n        _this.onTouchCancel = function (e) {\n            _this.triggerEvent('TouchCancel', false, e);\n        };\n        _this.onMouseDown = function (e) {\n            // pc simulate mobile\n            _this.triggerEvent('MouseDown', true, e);\n        };\n        _this.onMouseUp = function (e) {\n            _this.triggerEvent('MouseUp', false, e);\n        };\n        _this.onMouseLeave = function (e) {\n            _this.triggerEvent('MouseLeave', false, e);\n        };\n        return _this;\n    }\n\n    _createClass(TouchFeedback, [{\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            if (this.props.disabled && this.state.active) {\n                this.setState({\n                    active: false\n                });\n            }\n        }\n    }, {\n        key: 'triggerEvent',\n        value: function triggerEvent(type, isActive, ev) {\n            var eventType = 'on' + type;\n            var children = this.props.children;\n\n            if (children.props[eventType]) {\n                children.props[eventType](ev);\n            }\n            if (isActive !== this.state.active) {\n                this.setState({\n                    active: isActive\n                });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                children = _props.children,\n                disabled = _props.disabled,\n                activeClassName = _props.activeClassName,\n                activeStyle = _props.activeStyle;\n\n            var events = disabled ? undefined : {\n                onTouchStart: this.onTouchStart,\n                onTouchMove: this.onTouchMove,\n                onTouchEnd: this.onTouchEnd,\n                onTouchCancel: this.onTouchCancel,\n                onMouseDown: this.onMouseDown,\n                onMouseUp: this.onMouseUp,\n                onMouseLeave: this.onMouseLeave\n            };\n            var child = React.Children.only(children);\n            if (!disabled && this.state.active) {\n                var _child$props = child.props,\n                    style = _child$props.style,\n                    className = _child$props.className;\n\n                if (activeStyle !== false) {\n                    if (activeStyle) {\n                        style = _extends({}, style, activeStyle);\n                    }\n                    className = classNames(className, activeClassName);\n                }\n                return React.cloneElement(child, _extends({ className: className,\n                    style: style }, events));\n            }\n            return React.cloneElement(child, events);\n        }\n    }]);\n\n    return TouchFeedback;\n}(React.Component);\n\nexport default TouchFeedback;\n\nTouchFeedback.defaultProps = {\n    disabled: false\n};","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touchable from 'rmc-feedback';\n\nvar InputHandler = function (_Component) {\n  _inherits(InputHandler, _Component);\n\n  function InputHandler() {\n    _classCallCheck(this, InputHandler);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  InputHandler.prototype.render = function render() {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        disabled = _props.disabled,\n        otherProps = _objectWithoutProperties(_props, ['prefixCls', 'disabled']);\n\n    return React.createElement(\n      Touchable,\n      {\n        disabled: disabled,\n        activeClassName: prefixCls + '-handler-active'\n      },\n      React.createElement('span', otherProps)\n    );\n  };\n\n  return InputHandler;\n}(Component);\n\nInputHandler.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  onTouchStart: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onMouseLeave: PropTypes.func\n};\n\nexport default InputHandler;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isNegativeZero from 'is-negative-zero';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport InputHandler from './InputHandler';\n\nfunction noop() {}\n\nfunction preventDefault(e) {\n  e.preventDefault();\n}\n\nfunction defaultParser(input) {\n  return input.replace(/[^\\w\\.-]+/g, '');\n}\n\n/**\n * When click and hold on a button - the speed of auto changin the value.\n */\nvar SPEED = 200;\n\n/**\n * When click and hold on a button - the delay before auto changin the value.\n */\nvar DELAY = 600;\n\n/**\n * Max Safe Integer -- on IE this is not available, so manually set the number in that case.\n * The reason this is used, instead of Infinity is because numbers above the MSI are unstable\n */\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar InputNumber = function (_React$Component) {\n  _inherits(InputNumber, _React$Component);\n\n  function InputNumber(props) {\n    _classCallCheck(this, InputNumber);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = void 0;\n    if ('value' in props) {\n      value = props.value;\n    } else {\n      value = props.defaultValue;\n    }\n    value = _this.toNumber(value);\n\n    _this.state = {\n      inputValue: _this.toPrecisionAsStep(value),\n      value: value,\n      focused: props.autoFocus\n    };\n    return _this;\n  }\n\n  InputNumber.prototype.componentDidMount = function componentDidMount() {\n    this.componentDidUpdate();\n  };\n\n  InputNumber.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps) {\n      var value = this.state.focused ? nextProps.value : this.getValidValue(nextProps.value, nextProps.min, nextProps.max);\n      this.setState({\n        value: value,\n        inputValue: this.inputting ? value : this.toPrecisionAsStep(value)\n      });\n    }\n\n    // Trigger onChange when max or min change\n    // https://github.com/ant-design/ant-design/issues/11574\n    var nextValue = 'value' in nextProps ? nextProps.value : this.state.value;\n    var _props = this.props,\n        onChange = _props.onChange,\n        max = _props.max,\n        min = _props.min;\n\n    if ('max' in nextProps && nextProps.max !== max && nextValue > nextProps.max && onChange) {\n      onChange(nextProps.max);\n    }\n    if ('min' in nextProps && nextProps.min !== min && nextValue < nextProps.min && onChange) {\n      onChange(nextProps.min);\n    }\n  };\n\n  InputNumber.prototype.componentDidUpdate = function componentDidUpdate() {\n    // Restore cursor\n    try {\n      // Firefox set the input cursor after it get focused.\n      // This caused that if an input didn't init with the selection,\n      // set will cause cursor not correct when first focus.\n      // Safari will focus input if set selection. We need skip this.\n      if (this.cursorStart !== undefined && this.state.focused) {\n        // In most cases, the string after cursor is stable.\n        // We can move the cursor before it\n\n        if (\n        // If not match full str, try to match part of str\n        !this.partRestoreByAfter(this.cursorAfter)) {\n          // If not match any of then, let's just keep the position\n          // TODO: Logic should not reach here, need check if happens\n          var pos = this.cursorStart + 1;\n\n          // If not have last string, just position to the end\n          if (!this.cursorAfter) {\n            pos = this.input.value.length;\n          } else if (this.lastKeyCode === KeyCode.BACKSPACE) {\n            pos = this.cursorStart - 1;\n          } else if (this.lastKeyCode === KeyCode.DELETE) {\n            pos = this.cursorStart;\n          }\n          this.fixCaret(pos, pos);\n        } else if (this.currentValue === this.input.value) {\n          // Handle some special key code\n          switch (this.lastKeyCode) {\n            case KeyCode.BACKSPACE:\n              this.fixCaret(this.cursorStart - 1, this.cursorStart - 1);\n              break;\n            case KeyCode.DELETE:\n              this.fixCaret(this.cursorStart + 1, this.cursorStart + 1);\n              break;\n            default:\n            // Do nothing\n          }\n        }\n      }\n    } catch (e) {}\n    // Do nothing\n\n\n    // Reset last key\n    this.lastKeyCode = null;\n\n    // pressingUpOrDown is true means that someone just click up or down button\n    if (!this.pressingUpOrDown) {\n      return;\n    }\n    if (this.props.focusOnUpDown && this.state.focused) {\n      if (document.activeElement !== this.input) {\n        this.focus();\n      }\n    }\n\n    this.pressingUpOrDown = false;\n  };\n\n  InputNumber.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.stop();\n  };\n\n  InputNumber.prototype.getCurrentValidValue = function getCurrentValidValue(value) {\n    var val = value;\n    if (val === '') {\n      val = '';\n    } else if (!this.isNotCompleteNumber(val)) {\n      val = this.getValidValue(val);\n    } else {\n      val = this.state.value;\n    }\n    return this.toNumber(val);\n  };\n\n  InputNumber.prototype.getRatio = function getRatio(e) {\n    var ratio = 1;\n    if (e.metaKey || e.ctrlKey) {\n      ratio = 0.1;\n    } else if (e.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n\n  InputNumber.prototype.getValueFromEvent = function getValueFromEvent(e) {\n    // optimize for chinese input expierence\n    // https://github.com/ant-design/ant-design/issues/8196\n    return e.target.value.trim().replace(/。/g, '.');\n  };\n\n  InputNumber.prototype.getValidValue = function getValidValue(value) {\n    var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.min;\n    var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.props.max;\n\n    var val = parseFloat(value, 10);\n    // https://github.com/ant-design/ant-design/issues/7358\n    if (isNaN(val)) {\n      return value;\n    }\n    if (val < min) {\n      val = min;\n    }\n    if (val > max) {\n      val = max;\n    }\n    return val;\n  };\n\n  InputNumber.prototype.setValue = function setValue(v, callback) {\n    // trigger onChange\n    var newValue = this.isNotCompleteNumber(parseFloat(v, 10)) ? undefined : parseFloat(v, 10);\n    var changed = newValue !== this.state.value || '' + newValue !== '' + this.state.inputValue; // https://github.com/ant-design/ant-design/issues/7363\n    if (!('value' in this.props)) {\n      this.setState({\n        value: newValue,\n        inputValue: this.toPrecisionAsStep(v)\n      }, callback);\n    } else {\n      // always set input value same as value\n      this.setState({\n        inputValue: this.toPrecisionAsStep(this.state.value)\n      }, callback);\n    }\n    if (changed) {\n      this.props.onChange(newValue);\n    }\n  };\n\n  InputNumber.prototype.getPrecision = function getPrecision(value) {\n    if ('precision' in this.props) {\n      return this.props.precision;\n    }\n    var valueString = value.toString();\n    if (valueString.indexOf('e-') >= 0) {\n      return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n    }\n    var precision = 0;\n    if (valueString.indexOf('.') >= 0) {\n      precision = valueString.length - valueString.indexOf('.') - 1;\n    }\n    return precision;\n  };\n\n  // step={1.0} value={1.51}\n  // press +\n  // then value should be 2.51, rather than 2.5\n  // if this.props.precision is undefined\n  // https://github.com/react-component/input-number/issues/39\n\n\n  InputNumber.prototype.getMaxPrecision = function getMaxPrecision(currentValue) {\n    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    if ('precision' in this.props) {\n      return this.props.precision;\n    }\n    var step = this.props.step;\n\n    var ratioPrecision = this.getPrecision(ratio);\n    var stepPrecision = this.getPrecision(step);\n    var currentValuePrecision = this.getPrecision(currentValue);\n    if (!currentValue) {\n      return ratioPrecision + stepPrecision;\n    }\n    return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n  };\n\n  InputNumber.prototype.getPrecisionFactor = function getPrecisionFactor(currentValue) {\n    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    var precision = this.getMaxPrecision(currentValue, ratio);\n    return Math.pow(10, precision);\n  };\n\n  InputNumber.prototype.fixCaret = function fixCaret(start, end) {\n    if (start === undefined || end === undefined || !this.input || !this.input.value) {\n      return;\n    }\n\n    try {\n      var currentStart = this.input.selectionStart;\n      var currentEnd = this.input.selectionEnd;\n\n      if (start !== currentStart || end !== currentEnd) {\n        this.input.setSelectionRange(start, end);\n      }\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  };\n\n  InputNumber.prototype.focus = function focus() {\n    this.input.focus();\n    this.recordCursorPosition();\n  };\n\n  InputNumber.prototype.blur = function blur() {\n    this.input.blur();\n  };\n\n  InputNumber.prototype.formatWrapper = function formatWrapper(num) {\n    // http://2ality.com/2012/03/signedzero.html\n    // https://github.com/ant-design/ant-design/issues/9439\n    if (isNegativeZero(num)) {\n      return '-0';\n    }\n    if (this.props.formatter) {\n      return this.props.formatter(num);\n    }\n    return num;\n  };\n\n  InputNumber.prototype.toPrecisionAsStep = function toPrecisionAsStep(num) {\n    if (this.isNotCompleteNumber(num) || num === '') {\n      return num;\n    }\n    var precision = Math.abs(this.getMaxPrecision(num));\n    if (precision === 0) {\n      return num.toString();\n    }\n    if (!isNaN(precision)) {\n      return Number(num).toFixed(precision);\n    }\n    return num.toString();\n  };\n\n  // '1.' '1x' 'xx' '' => are not complete numbers\n\n\n  InputNumber.prototype.isNotCompleteNumber = function isNotCompleteNumber(num) {\n    return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;\n  };\n\n  InputNumber.prototype.toNumber = function toNumber(num) {\n    if (this.isNotCompleteNumber(num)) {\n      return num;\n    }\n    if ('precision' in this.props) {\n      return Number(Number(num).toFixed(this.props.precision));\n    }\n    return Number(num);\n  };\n\n  // '1.0' '1.00'  => may be a inputing number\n\n\n  InputNumber.prototype.toNumberWhenUserInput = function toNumberWhenUserInput(num) {\n    // num.length > 16 => prevent input large number will became Infinity\n    if ((/\\.\\d*0$/.test(num) || num.length > 16) && this.state.focused) {\n      return num;\n    }\n    return this.toNumber(num);\n  };\n\n  InputNumber.prototype.upStep = function upStep(val, rat) {\n    var _props2 = this.props,\n        step = _props2.step,\n        min = _props2.min;\n\n    var precisionFactor = this.getPrecisionFactor(val, rat);\n    var precision = Math.abs(this.getMaxPrecision(val, rat));\n    var result = void 0;\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val + precisionFactor * step * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = min === -Infinity ? step : min;\n    }\n    return this.toNumber(result);\n  };\n\n  InputNumber.prototype.downStep = function downStep(val, rat) {\n    var _props3 = this.props,\n        step = _props3.step,\n        min = _props3.min;\n\n    var precisionFactor = this.getPrecisionFactor(val, rat);\n    var precision = Math.abs(this.getMaxPrecision(val, rat));\n    var result = void 0;\n    if (typeof val === 'number') {\n      result = ((precisionFactor * val - precisionFactor * step * rat) / precisionFactor).toFixed(precision);\n    } else {\n      result = min === -Infinity ? -step : min;\n    }\n    return this.toNumber(result);\n  };\n\n  InputNumber.prototype.step = function step(type, e) {\n    var _this2 = this;\n\n    var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var recursive = arguments[3];\n\n    this.stop();\n    if (e) {\n      e.persist();\n      e.preventDefault();\n    }\n    var props = this.props;\n    if (props.disabled) {\n      return;\n    }\n    var value = this.getCurrentValidValue(this.state.inputValue) || 0;\n    if (this.isNotCompleteNumber(value)) {\n      return;\n    }\n    var val = this[type + 'Step'](value, ratio);\n    var outOfRange = val > props.max || val < props.min;\n    if (val > props.max) {\n      val = props.max;\n    } else if (val < props.min) {\n      val = props.min;\n    }\n    this.setValue(val);\n    this.setState({\n      focused: true\n    });\n    if (outOfRange) {\n      return;\n    }\n    this.autoStepTimer = setTimeout(function () {\n      _this2[type](e, ratio, true);\n    }, recursive ? SPEED : DELAY);\n  };\n\n  InputNumber.prototype.render = function render() {\n    var _classNames;\n\n    var props = _extends({}, this.props);\n    var prefixCls = props.prefixCls,\n        disabled = props.disabled,\n        readOnly = props.readOnly,\n        useTouch = props.useTouch;\n\n    var classes = classNames((_classNames = {}, _classNames[prefixCls] = true, _classNames[props.className] = !!props.className, _classNames[prefixCls + '-disabled'] = disabled, _classNames[prefixCls + '-focused'] = this.state.focused, _classNames));\n    var upDisabledClass = '';\n    var downDisabledClass = '';\n    var value = this.state.value;\n\n    if (value || value === 0) {\n      if (!isNaN(value)) {\n        var val = Number(value);\n        if (val >= props.max) {\n          upDisabledClass = prefixCls + '-handler-up-disabled';\n        }\n        if (val <= props.min) {\n          downDisabledClass = prefixCls + '-handler-down-disabled';\n        }\n      } else {\n        upDisabledClass = prefixCls + '-handler-up-disabled';\n        downDisabledClass = prefixCls + '-handler-down-disabled';\n      }\n    }\n\n    var dataOrAriaAttributeProps = {};\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-' || key === 'role')) {\n        dataOrAriaAttributeProps[key] = props[key];\n      }\n    }\n\n    var editable = !props.readOnly && !props.disabled;\n\n    // focus state, show input value\n    // unfocus state, show valid value\n    var inputDisplayValue = this.getInputDisplayValue();\n\n    var upEvents = void 0;\n    var downEvents = void 0;\n    if (useTouch) {\n      upEvents = {\n        onTouchStart: editable && !upDisabledClass ? this.up : noop,\n        onTouchEnd: this.stop\n      };\n      downEvents = {\n        onTouchStart: editable && !downDisabledClass ? this.down : noop,\n        onTouchEnd: this.stop\n      };\n    } else {\n      upEvents = {\n        onMouseDown: editable && !upDisabledClass ? this.up : noop,\n        onMouseUp: this.stop,\n        onMouseLeave: this.stop\n      };\n      downEvents = {\n        onMouseDown: editable && !downDisabledClass ? this.down : noop,\n        onMouseUp: this.stop,\n        onMouseLeave: this.stop\n      };\n    }\n    var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);\n    var isUpDisabled = !!upDisabledClass || disabled || readOnly;\n    var isDownDisabled = !!downDisabledClass || disabled || readOnly;\n    // ref for test\n    return React.createElement(\n      'div',\n      {\n        className: classes,\n        style: props.style,\n        onMouseEnter: props.onMouseEnter,\n        onMouseLeave: props.onMouseLeave,\n        onMouseOver: props.onMouseOver,\n        onMouseOut: props.onMouseOut\n      },\n      React.createElement(\n        'div',\n        { className: prefixCls + '-handler-wrap' },\n        React.createElement(\n          InputHandler,\n          _extends({\n            ref: this.saveUp,\n            disabled: isUpDisabled,\n            prefixCls: prefixCls,\n            unselectable: 'unselectable'\n          }, upEvents, {\n            role: 'button',\n            'aria-label': 'Increase Value',\n            'aria-disabled': !!isUpDisabled,\n            className: prefixCls + '-handler ' + prefixCls + '-handler-up ' + upDisabledClass\n          }),\n          this.props.upHandler || React.createElement('span', {\n            unselectable: 'unselectable',\n            className: prefixCls + '-handler-up-inner',\n            onClick: preventDefault\n          })\n        ),\n        React.createElement(\n          InputHandler,\n          _extends({\n            ref: this.saveDown,\n            disabled: isDownDisabled,\n            prefixCls: prefixCls,\n            unselectable: 'unselectable'\n          }, downEvents, {\n            role: 'button',\n            'aria-label': 'Decrease Value',\n            'aria-disabled': !!isDownDisabled,\n            className: prefixCls + '-handler ' + prefixCls + '-handler-down ' + downDisabledClass\n          }),\n          this.props.downHandler || React.createElement('span', {\n            unselectable: 'unselectable',\n            className: prefixCls + '-handler-down-inner',\n            onClick: preventDefault\n          })\n        )\n      ),\n      React.createElement(\n        'div',\n        {\n          className: prefixCls + '-input-wrap',\n          role: 'spinbutton',\n          'aria-valuemin': props.min,\n          'aria-valuemax': props.max,\n          'aria-valuenow': value\n        },\n        React.createElement('input', _extends({\n          required: props.required,\n          type: props.type,\n          placeholder: props.placeholder,\n          onClick: props.onClick,\n          onMouseUp: this.onMouseUp,\n          className: prefixCls + '-input',\n          tabIndex: props.tabIndex,\n          autoComplete: 'off',\n          onFocus: this.onFocus,\n          onBlur: this.onBlur,\n          onKeyDown: editable ? this.onKeyDown : noop,\n          onKeyUp: editable ? this.onKeyUp : noop,\n          autoFocus: props.autoFocus,\n          maxLength: props.maxLength,\n          readOnly: props.readOnly,\n          disabled: props.disabled,\n          max: props.max,\n          min: props.min,\n          step: props.step,\n          name: props.name,\n          id: props.id,\n          onChange: this.onChange,\n          ref: this.saveInput,\n          value: inputDisplayValueFormat,\n          pattern: props.pattern\n        }, dataOrAriaAttributeProps))\n      )\n    );\n  };\n\n  return InputNumber;\n}(React.Component);\n\nInputNumber.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  focusOnUpDown: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  prefixCls: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  upHandler: PropTypes.node,\n  downHandler: PropTypes.node,\n  useTouch: PropTypes.bool,\n  formatter: PropTypes.func,\n  parser: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  precision: PropTypes.number,\n  required: PropTypes.bool,\n  pattern: PropTypes.string\n};\nInputNumber.defaultProps = {\n  focusOnUpDown: true,\n  useTouch: false,\n  prefixCls: 'rc-input-number',\n  min: -MAX_SAFE_INTEGER,\n  step: 1,\n  style: {},\n  onChange: noop,\n  onKeyDown: noop,\n  onFocus: noop,\n  onBlur: noop,\n  parser: defaultParser,\n  required: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onKeyDown = function (e) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var onKeyDown = _this3.props.onKeyDown;\n\n\n    if (e.keyCode === KeyCode.UP) {\n      var ratio = _this3.getRatio(e);\n      _this3.up(e, ratio);\n      _this3.stop();\n    } else if (e.keyCode === KeyCode.DOWN) {\n      var _ratio = _this3.getRatio(e);\n      _this3.down(e, _ratio);\n      _this3.stop();\n    }\n\n    // Trigger user key down\n    _this3.recordCursorPosition();\n    _this3.lastKeyCode = e.keyCode;\n    if (onKeyDown) {\n      onKeyDown.apply(undefined, [e].concat(args));\n    }\n  };\n\n  this.onKeyUp = function (e) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var onKeyUp = _this3.props.onKeyUp;\n\n\n    _this3.stop();\n\n    _this3.recordCursorPosition();\n\n    // Trigger user key up\n    if (onKeyUp) {\n      onKeyUp.apply(undefined, [e].concat(args));\n    }\n  };\n\n  this.onChange = function (e) {\n    if (_this3.state.focused) {\n      _this3.inputting = true;\n    }\n    var input = _this3.props.parser(_this3.getValueFromEvent(e));\n    _this3.setState({ inputValue: input });\n    _this3.props.onChange(_this3.toNumberWhenUserInput(input)); // valid number or invalid string\n  };\n\n  this.onMouseUp = function () {\n    var onMouseUp = _this3.props.onMouseUp;\n\n\n    _this3.recordCursorPosition();\n\n    if (onMouseUp) {\n      onMouseUp.apply(undefined, arguments);\n    }\n  };\n\n  this.onFocus = function () {\n    var _props4;\n\n    _this3.setState({\n      focused: true\n    });\n    (_props4 = _this3.props).onFocus.apply(_props4, arguments);\n  };\n\n  this.onBlur = function (e) {\n    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    _this3.inputting = false;\n    _this3.setState({\n      focused: false\n    });\n    var value = _this3.getCurrentValidValue(_this3.state.inputValue);\n    e.persist(); // fix https://github.com/react-component/input-number/issues/51\n    _this3.setValue(value, function () {\n      var _props5;\n\n      (_props5 = _this3.props).onBlur.apply(_props5, [e].concat(args));\n    });\n  };\n\n  this.getInputDisplayValue = function () {\n    var _state = _this3.state,\n        focused = _state.focused,\n        inputValue = _state.inputValue,\n        value = _state.value;\n\n    var inputDisplayValue = void 0;\n    if (focused) {\n      inputDisplayValue = inputValue;\n    } else {\n      inputDisplayValue = _this3.toPrecisionAsStep(value);\n    }\n\n    if (inputDisplayValue === undefined || inputDisplayValue === null) {\n      inputDisplayValue = '';\n    }\n\n    return inputDisplayValue;\n  };\n\n  this.recordCursorPosition = function () {\n    // Record position\n    try {\n      _this3.cursorStart = _this3.input.selectionStart;\n      _this3.cursorEnd = _this3.input.selectionEnd;\n      _this3.currentValue = _this3.input.value;\n      _this3.cursorBefore = _this3.input.value.substring(0, _this3.cursorStart);\n      _this3.cursorAfter = _this3.input.value.substring(_this3.cursorEnd);\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  };\n\n  this.restoreByAfter = function (str) {\n    if (str === undefined) return false;\n\n    var fullStr = _this3.input.value;\n    var index = fullStr.lastIndexOf(str);\n\n    if (index === -1) return false;\n\n    if (index + str.length === fullStr.length) {\n      _this3.fixCaret(index, index);\n\n      return true;\n    }\n    return false;\n  };\n\n  this.partRestoreByAfter = function (str) {\n    if (str === undefined) return false;\n\n    // For loop from full str to the str with last char to map. e.g. 123\n    // -> 123\n    // -> 23\n    // -> 3\n    return Array.prototype.some.call(str, function (_, start) {\n      var partStr = str.substring(start);\n\n      return _this3.restoreByAfter(partStr);\n    });\n  };\n\n  this.stop = function () {\n    if (_this3.autoStepTimer) {\n      clearTimeout(_this3.autoStepTimer);\n    }\n  };\n\n  this.down = function (e, ratio, recursive) {\n    _this3.pressingUpOrDown = true;\n    _this3.step('down', e, ratio, recursive);\n  };\n\n  this.up = function (e, ratio, recursive) {\n    _this3.pressingUpOrDown = true;\n    _this3.step('up', e, ratio, recursive);\n  };\n\n  this.saveUp = function (node) {\n    _this3.upHandler = node;\n  };\n\n  this.saveDown = function (node) {\n    _this3.downHandler = node;\n  };\n\n  this.saveInput = function (node) {\n    _this3.input = node;\n  };\n};\n\nexport default InputNumber;","import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcInputNumber from 'rc-input-number';\nimport Icon from '../icon';\n\nvar InputNumber = function (_React$Component) {\n    _inherits(InputNumber, _React$Component);\n\n    function InputNumber() {\n        _classCallCheck(this, InputNumber);\n\n        return _possibleConstructorReturn(this, (InputNumber.__proto__ || Object.getPrototypeOf(InputNumber)).apply(this, arguments));\n    }\n\n    _createClass(InputNumber, [{\n        key: 'render',\n        value: function render() {\n            var _classNames,\n                _this2 = this;\n\n            var _a = this.props,\n                className = _a.className,\n                size = _a.size,\n                others = __rest(_a, [\"className\", \"size\"]);\n            var inputNumberClass = classNames((_classNames = {}, _defineProperty(_classNames, this.props.prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, this.props.prefixCls + '-sm', size === 'small'), _classNames), className);\n            var upIcon = React.createElement(Icon, { type: 'up', className: this.props.prefixCls + '-handler-up-inner' });\n            var downIcon = React.createElement(Icon, { type: 'down', className: this.props.prefixCls + '-handler-down-inner' });\n            return React.createElement(RcInputNumber, _extends({ ref: function ref(c) {\n                    return _this2.inputNumberRef = c;\n                }, className: inputNumberClass, upHandler: upIcon, downHandler: downIcon }, others));\n        }\n    }, {\n        key: 'focus',\n        value: function focus() {\n            this.inputNumberRef.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.inputNumberRef.blur();\n        }\n    }]);\n\n    return InputNumber;\n}(React.Component);\n\nexport default InputNumber;\n\nInputNumber.defaultProps = {\n    prefixCls: 'ant-input-number',\n    step: 1\n};","var escape = require(\"../../../../node_modules/_css-loader@1.0.1@css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".reset-antd-checkbox .ant-checkbox-checked .ant-checkbox-inner,.reset-antd-checkbox .ant-checkbox-indeterminate .ant-checkbox-inner{background-color:#e14c46;border-color:#e14c46}.reset-antd-checkbox .ant-checkbox-input:focus+.ant-checkbox-inner,.reset-antd-checkbox .ant-checkbox-wrapper:hover .ant-checkbox-inner,.reset-antd-checkbox .ant-checkbox:hover .ant-checkbox-inner{border-color:#e14c46}.reset-antd-select .ant-select-selection:hover{border-color:#40a9ff}.reset-antd-select .ant-select-selection:focus{border-color:#007ace}.empty-area-style{color:#9b9b9b}.empty-area-style .iconfont{color:#f0871a;font-size:13px;margin-right:2px}.hover-property{content:\\\"\\\";position:absolute;width:4px;background:#8cc6ff;left:-2px;top:0;bottom:0;z-index:1}.template-setting-page{width:100%;padding:7px 16px 0}.template-setting-page .ant-input-sm{height:24px}.template-setting-page .template-setting-steps{margin:8px 30px;background:#fff;height:54px;display:flex;justify-content:center;align-items:center;padding:0 20px}.template-setting-page .template-setting-steps .ant-steps-item-process .ant-steps-item-title:after{background-color:#ccc}.template-setting-page .template-setting-steps .ant-steps{margin:0 19%}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-finish .ant-steps-item-icon{height:20px;line-height:20px;width:20px;background:#e14c46;border:1px solid #e14c46;margin-top:1px}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-finish .ant-steps-item-icon span{color:#fff}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-finish .ant-steps-item-content .ant-steps-item-title:after{background:#e14c46}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-process .ant-steps-item-icon{height:20px;line-height:20px;width:20px;background:#fff;border:1px solid #e14c46;margin-top:1px}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-process .ant-steps-item-icon span{color:#e14c46}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-wait .ant-steps-item-icon{height:20px;line-height:20px;width:20px;background:#fff;border:1px solid #bfbfbf;margin-top:1px}.template-setting-page .template-setting-steps .ant-steps .ant-steps-item-wait .ant-steps-item-icon span{color:#bfbfbf}.template-setting-page .display_none{display:none}.template-setting-page .template-setting-header{align-items:center;background:#fff;display:flex;height:45px;justify-content:space-between;padding-left:20px;padding-right:20px;border-top-left-radius:3px;border-top-right-radius:3px;border-bottom:1px solid #e0e0e0}.template-setting-page .template-setting-header .header-name{display:flex;font-family:PingFangSC-Regular,PingFang SC;font-weight:400;font-style:normal;align-items:center}.template-setting-page .template-setting-header .header-name .iconfont{margin-right:6px;border-radius:50%;font-size:16px;padding:4px;font-weight:400;cursor:pointer}.template-setting-page .template-setting-header .header-name .iconfont:hover{background:#e8e8e8}.template-setting-page .template-setting-header .header-name span{font-size:16px;color:#111;font-weight:700}.template-setting-page .template-setting-header button{margin-right:10px}.template-setting-page .template-setting-container{position:relative;display:flex;flex-flow:row;background:#fff;min-height:calc(100vh - 178px);border-bottom-left-radius:3px;border-bottom-right-radius:3px}.template-setting-page .template-setting-container .plat-def{height:30px!important;line-height:30px!important}.template-setting-page .template-setting-container .plat-def .refer{width:88%!important;left:6%!important}.template-setting-page .template-setting-container .template-setting-left-sider-container{border-right:1px solid #eaeaea}.template-setting-page .template-setting-container .template-setting-left-sider-container:hover .toggle-left-btn{display:block}.template-setting-page .template-setting-container .template-setting-left-sider{width:257px;padding:5px;height:calc(100vh - 110px);overflow-y:auto;background-color:#f1f2f4;border-bottom-left-radius:3px}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel{padding:10px 10px 2px}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-header .title{font-size:13px;font-weight:500}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-header .tip{font-size:12px;margin-bottom:8px;color:#9b9b9b}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-header .tip .iconfont{color:#f0871a;font-size:13px;margin-right:2px}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content{display:flex;margin-top:10px;flex-wrap:wrap}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item-wrapper{display:flex;cursor:move;background:#fff;color:#111;width:48%;height:35px;padding:6px 12px;margin-right:4%;margin-bottom:8px;border:1px solid transparent;box-shadow:0 0 3px 1px hsla(0,0%,78.4%,.5);border-radius:3px;justify-content:left;align-items:center}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item-wrapper:hover{border-color:#0c88fe}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item-wrapper:active{border-color:#0c88fe;color:#0073e1}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item-wrapper:nth-child(2n){margin-right:0}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item{line-height:16px}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item .name{font-size:13px;vertical-align:middle}.template-setting-page .template-setting-container .template-setting-left-sider .side-panel .panel-content .drag-item .iconfont{font-size:16px;margin-right:4px;vertical-align:middle}.template-setting-page .template-setting-container .template-setting-right-sider{border-left:1px solid #dddfe1;width:256px;background:#fafafa;border-bottom-right-radius:5px;min-height:calc(100vh - 178px)}.template-setting-page .template-setting-container .template-setting-right-sider .ant-tabs-tabpane{height:calc(100vh - 190px);overflow-y:auto}.template-setting-page .template-setting-container .template-setting-right-sider .basic-property{display:flex;flex-wrap:wrap;padding:0 10px;align-items:center}.template-setting-page .template-setting-container .template-setting-right-sider .basic-property li:nth-child(odd){list-style-type:none;width:35%;display:inline-block;line-height:1.3;text-align:right;padding:0 6px 6px 0}.template-setting-page .template-setting-container .template-setting-right-sider .basic-property li:nth-child(2n){list-style-type:none;width:65%;display:inline-block;line-height:30px;padding-bottom:6px}.template-setting-page .template-setting-container .template-setting-right-sider .basic-property .metapath{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.template-setting-page .template-setting-container .from-card{padding:10px 10px 0;border-radius:0 0 3px 3px}.template-setting-page .template-setting-container .from-card .ant-row{display:flex;flex-direction:column}.template-setting-page .template-setting-container .from-card .ant-row div{flex-direction:row}.template-setting-page .template-setting-container .from-card .ant-row .ant-col-lg-12,.template-setting-page .template-setting-container .from-card .ant-row .ant-col-md-24,.template-setting-page .template-setting-container .from-card .ant-row .ant-col-xl-8{width:100%;padding:0!important}.template-setting-page .template-setting-container .from-card .ant-row .ant-col-lg-12 .ant-form-item,.template-setting-page .template-setting-container .from-card .ant-row .ant-col-md-24 .ant-form-item,.template-setting-page .template-setting-container .from-card .ant-row .ant-col-xl-8 .ant-form-item{margin:0 0 3px}.template-setting-page .template-setting-container .from-card .ant-form-item{display:flex}.template-setting-page .template-setting-container .from-card .ant-form-item .ant-input{font-size:13px}.template-setting-page .template-setting-container .from-card .ant-form-item-control-wrapper{flex:1}.template-setting-page .template-setting-container .from-card .ant-form-item-label{min-width:96px;line-height:34px}.template-setting-page .template-setting-container .from-card .ant-form-item-label label:after{content:\\\" \\\";margin-right:6px}.template-setting-page .template-setting-container .from-card .ant-form-item-control{line-height:34px}.template-setting-page .template-setting-container .toggle-left-btn{display:none;position:absolute;cursor:pointer;background-color:#fff;top:50%;left:300px;width:20px;text-align:center;line-height:64px;-webkit-transform:translateY(-50%);transform:translateY(-50%);border:1px solid #dddfe1;border-top-right-radius:3px;border-bottom-right-radius:3px;z-index:1}.template-setting-page .template-setting-container .toggle-left-btn .iconfont{font-size:12px}.template-setting-page .template-setting-container .toggle-left-btn:hover{border:1px solid #0073e1;border-left-color:transparent}.template-setting-page .template-setting-container .toggle-left-btn.show{display:block}.template-setting-page .template-setting-container .toggle-left-btn.hide{display:none}.template-setting-page .template-setting-content{height:calc(100vh - 110px);overflow-y:auto;flex:1;padding:0 10px 10px;scroll-behavior:smooth}.template-setting-page .template-setting-content .area-item{background:#fff;border-radius:3px;border:1px solid #ccc;margin-top:10px}.template-setting-page .template-setting-content .area-item.active{border:1px solid #0073e1}.template-setting-page .template-setting-content .area-item.active .area-item-button,.template-setting-page .template-setting-content .area-item.card-active .area-item-button,.template-setting-page .template-setting-content .area-item:hover .area-item-button{display:flex}.template-setting-page .template-setting-content .area-item .area-item-header{display:table;width:100%;cursor:move;background:#fafafa;height:40px;padding:0 10px}.template-setting-page .template-setting-content .area-item .area-item-header .area-item-name-wrapper{cursor:pointer;display:table-cell;vertical-align:middle}.template-setting-page .template-setting-content .area-item .area-item-header .ant-checkbox-inner{width:14px;height:14px}.template-setting-page .template-setting-content .area-item .area-item-header.show{display:table}.template-setting-page .template-setting-content .area-item .area-item-header.hide{display:none}.template-setting-page .template-setting-content .area-item .area-item-name{display:table;vertical-align:middle;font-size:14px}.template-setting-page .template-setting-content .area-item .area-item-name .area-name{display:table-cell;font-weight:500;padding-left:8px;color:#111;vertical-align:middle}.template-setting-page .template-setting-content .area-item .area-item-name .iconfont{display:table-cell;font-size:12px;color:#999696;vertical-align:middle}.template-setting-page .template-setting-content .area-item .area-item-button-wrapper{display:table-cell;vertical-align:middle;width:455px}.template-setting-page .template-setting-content .area-item .area-item-button{display:none;float:right;align-items:center}.template-setting-page .template-setting-content .area-item .area-item-button label{margin-right:12px}.template-setting-page .template-setting-content .area-item .area-item-button a{margin-right:16px}.template-setting-page .template-setting-content .area-item .area-item-button .link,.template-setting-page .template-setting-content .area-item .area-item-button a{color:#555}.template-setting-page .template-setting-content .area-item .area-item-button a:hover{color:#0073e1}.template-setting-page .template-setting-content .area-item .area-item-button .opr-btn:hover{border:1px solid #e14c46;color:#e14c46}.template-setting-page .template-setting-content .area-item .opr-btn{display:inline-block;cursor:pointer;background:#fff;width:30px;height:30px;line-height:30px;text-align:center;margin-right:0;border:1px solid #d0d0d0;border-radius:3px;vertical-align:middle}.template-setting-page .template-setting-content .area-item .opr-btn .iconfont{font-size:20px}.template-setting-page .template-setting-content .area-item .opr-btn .icon-shanchu,.template-setting-page .template-setting-content .area-item .opr-btn .icon-xinzengfenzu{font-size:16px}.template-setting-page .template-setting-content .area-item .opr-btn .iconfont.disabled{color:#b9b9b9}.template-setting-page .template-setting-content .area-item .opr-btn.group-btn{border:none;background:transparent;width:20px;height:24px;line-height:24px}.template-setting-page .template-setting-content .area-item .opr-btn.group-btn .iconfont{font-size:20px}.template-setting-page .template-setting-content .area-item .btn-group>span{display:inline-block}.template-setting-page .template-setting-content .area-item .btn-group>.opr-btn{border-radius:0;border-right:0}.template-setting-page .template-setting-content .area-item .btn-group>.opr-btn:hover{border-right:0}.template-setting-page .template-setting-content .area-item .btn-group>.opr-btn:hover:last-child{border-right:1px solid #e14c46}.template-setting-page .template-setting-content .area-item .btn-group .opr-btn+.opr-btn:hover,.template-setting-page .template-setting-content .area-item .btn-group>.opr-btn:hover+.opr-btn{border-left:1px solid #e14c46}.template-setting-page .template-setting-content .area-item .btn-group .opr-btn:first-child:not(:last-child){border-top-left-radius:3px;border-bottom-left-radius:3px}.template-setting-page .template-setting-content .area-item .btn-group .opr-btn:last-child:not(:first-child){border-top-right-radius:3px;border-bottom-right-radius:3px}.template-setting-page .template-setting-content .area-item .btn-group .opr-btn:first-child:last-child{border-radius:3px}.template-setting-page .template-setting-content .area-item .btn-group .opr-btn:last-child{border-right:1px solid #d0d0d0}.template-setting-page .template-setting-content .area-item .area-item-content{position:relative;min-height:73px}.template-setting-page .template-setting-content .area-item .area-item-content .property-item{transition:all .2s ease-out;position:relative;width:25%;padding:1px;display:inline-block;vertical-align:top;cursor:move}.template-setting-page .template-setting-content .area-item .area-item-content .property-item .item-content .u-form-control{font-size:13px;height:30px}.template-setting-page .template-setting-content .area-item .area-item-content .property-item .item-content .item-wrapper{position:relative}.template-setting-page .template-setting-content .area-item .area-item-content .property-item .item-content .item-wrapper:after{content:\\\"\\\";position:absolute;width:calc(100% - 30px);height:30px;left:0;top:0;z-index:2}.template-setting-page .template-setting-content .area-item .area-item-content .property-item .hidden-tag{position:absolute;background:url(\" + escape(require(\"Assets/images/hiddenProperty.png\")) + \") no-repeat;background-size:contain;width:20px;height:18px;top:4px;right:5px;z-index:2}.template-setting-page .template-setting-content .area-item .area-item-content .property-item.table-content{margin:0;padding:0;width:auto;border-radius:0}.template-setting-page .template-setting-content .area-item .area-item-content .property-item.table-content .hidden-tag{top:0;right:0}.template-setting-page .template-setting-content .area-item .area-item-content .property-item:hover .delete-card{display:inline-block}.template-setting-page .template-setting-content .area-item .area-item-content .property-item:not(.table-content).hover:before{content:\\\"\\\";position:absolute;width:4px;background:#8cc6ff;left:-2px;top:0;bottom:0;z-index:1}.template-setting-page .template-setting-content .area-item .area-item-content .card-item{display:flex;transition:all .2s ease-out;color:#474d54;text-overflow:ellipsis;min-height:32px;width:100%;padding:2px;align-items:center;justify-content:space-around}.template-setting-page .template-setting-content .area-item .area-item-content .card-item .item-name{width:80px;padding-right:4px;text-align:right;line-height:1.2;word-break:break-word}.template-setting-page .template-setting-content .area-item .area-item-content .card-item .item-content{width:100%;line-height:12px;white-space:normal;border:1px solid transparent}.template-setting-page .template-setting-content .area-item .area-item-content .card-item .title{position:relative}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-content .required-card .card-item .title:after,.template-setting-page .template-setting-content .area-item .area-item-content .search-area-content .required-card .card-item:after,.template-setting-page .template-setting-content .area-item .area-item-content .table-area-content .required-card .item-name:after{position:absolute;content:\\\"*\\\";color:red;height:20px;top:50%;left:6px;margin-top:-10px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-content .required-card .card-item .title:after{left:-8px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-content .property-item.select-card .card-item,.template-setting-page .template-setting-content .area-item .area-item-content .search-area-content .property-item.select-card .card-item{border-radius:3px;background-color:rgba(0,153,255,.35)}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-content{padding:5px;border-top:1px solid #e4e4e4}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-content .property-item .card-item .item-content{width:calc(100% - 84px)}.template-setting-page .template-setting-content .area-item .area-item-content .search-area-content{padding:5px 10px;border-top:1px solid #e4e4e4}.template-setting-page .template-setting-content .area-item .area-item-content .search-area-content .property-item{width:16.6%}.template-setting-page .template-setting-content .area-item .area-item-content .table-area-content .property-item.select-card .item-name{background-color:rgba(0,153,255,.35)}.template-setting-page .template-setting-content .area-item .area-item-content .card-item.normal-card:hover{background-color:rgba(0,153,255,.14901961)}.template-setting-page .template-setting-content .area-item .area-item-content .table-area-content .normal-card:hover .item-name{background-color:#fff}.template-setting-page .template-setting-content .area-item .area-item-content .delete-card{position:absolute;right:0;top:0;width:15px;height:15px;line-height:12px;text-align:center;border-radius:7px;display:none;color:#fff;background-color:#e14c46;cursor:pointer;z-index:9}.template-setting-page .template-setting-content .area-item .area-item-content .table-item{position:relative;min-width:120px}.template-setting-page .template-setting-content .area-item .area-item-content .table-item .item-name{position:relative;background-color:#eceff5;border-top:1px solid #e4e4e4;border-bottom:1px solid #e4e4e4}.template-setting-page .template-setting-content .area-item .area-item-content .table-item .item-name .title{display:inline-block;padding:6px 15px}.template-setting-page .template-setting-content .area-item .area-item-content .table-item .item-content{min-height:40px;padding:5px;line-height:12px}.template-setting-page .template-setting-content .area-item .area-item-content .table-item .item-content .refer-wrapper .refer:hover{padding-right:20px!important}.template-setting-page .template-setting-content .area-item .area-item-content .query-btn-area{float:right;margin-right:20px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group.active .form-area-content{background-color:rgba(221,236,250,.5)}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group.active .area-item-button,.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group:hover .area-item-button{display:flex}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .area-item-header{border-top:1px solid #ccc}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header{position:relative;display:flex;color:#555;margin:6px 14px 0;height:24px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .form-group-title{line-height:24px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .form-group-title .iconfont{cursor:pointer;font-size:12px;padding-right:4px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .group-name{padding:0 7px 0 14px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .group-btns{position:absolute;right:0;top:-14px}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .group-btns .btn-group>.opr-btn:hover+.opr-btn{border-left:0}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .group-btns .opr-btn:hover{border:none;color:#e14c46}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .group-btns .opr-btn:last-child{border-right:0}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .dashed-line{flex-grow:1}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-group-header .dashed-line:after{content:\\\"\\\";position:relative;display:block;height:1px;top:50%;border-top:1px dashed #c7c6c6}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .form-area-content{min-height:48px;border-top:0}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .empty-area{text-align:center;padding:10px;font-size:13px;color:#9b9b9b}.template-setting-page .template-setting-content .area-item .area-item-content .form-area-group .empty-area .iconfont{color:#f0871a;font-size:13px;margin-right:2px}.template-setting-page .template-setting-content .area-item .table-area-content{display:flex;overflow-x:auto;white-space:nowrap;margin-right:150px;min-height:73px}.template-setting-page .template-setting-content .area-item .table-area-content .property-item.hover .table-item:before{content:\\\"\\\";position:absolute;width:4px;background:#8cc6ff;left:-2px;top:0;bottom:0;z-index:1}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col{position:absolute;right:0;z-index:10;min-width:150px}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .property-item{width:100%}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .item-content{visibility:visible}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .oper-col-content{background:#fff}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .btn-link{cursor:pointer;color:#0073e1;line-height:30px}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .btn-link.disabled{color:#b9b9b9}.template-setting-page .template-setting-content .area-item .table-area-content .operate-col .normal-card:hover .item-name{background:#eceff5}.template-setting-page .template-setting-content .table-fold-area.card-active .area-item-button{display:flex}.template-setting-page .template-setting-content .empty-content{position:relative;text-align:center;top:50%;-webkit-transform:translateY(-70%);transform:translateY(-70%)}.template-setting-page .template-setting-content .empty-content img{width:120px;margin-bottom:16px}.template-setting-page .template-setting-content .empty-content p{color:#888;font-size:14px;line-height:1.5;margin:0}.template-setting-page .ant-drawer{width:auto}.template-setting-page .ant-drawer .ant-drawer-mask{top:104px;right:256px;left:273px;width:auto}.template-setting-page .ant-drawer .ant-drawer-content-wrapper{top:105px;height:calc(100vh - 110px)}.template-setting-page .ant-drawer.ant-drawer-open .ant-drawer-content-wrapper{right:256px}.template-setting-page .ant-drawer .drawer-content{height:100%;padding:0}.template-setting-page .ant-drawer .drawer-content .area-item-header{cursor:auto}.template-setting-page .ant-drawer .drawer-content .area-item-header .drawer-close-btn{cursor:pointer;display:table-cell;vertical-align:middle;width:25px;padding-left:26px}.template-setting-page .ant-drawer .drawer-content .area-item-header .drawer-close-btn .iconfont{font-size:18px}.template-setting-page .ant-drawer .drawer-content .area-item-header .drawer-close-btn:hover{color:#e14c46}.template-setting-page .ant-drawer .drawer-content .area-item.side-area{border:0;margin:0}.template-setting-page .ant-drawer .drawer-content .area-item .area-item-content .form-area-content{border-top:0}.template-setting-page .ant-drawer .drawer-content .area-item .area-item-content .form-area-content .property-item{width:33.33333%}.template-setting-page .ant-drawer .drawer-content .grandson-content{border-top:1px solid #e4e4e4;padding:0 20px}.template-setting-page .ant-drawer .drawer-content .grandson-content .table-area-content{margin:0}.template-setting-page .ant-drawer .drawer-content .grandson-content .area-item,.template-setting-page .ant-drawer .drawer-content .grandson-content .area-item .area-item-header{cursor:move}.template-setting-page .ant-popover{z-index:220}.template-setting-page .ant-checkbox-checked .ant-checkbox-inner,.template-setting-page .ant-checkbox-indeterminate .ant-checkbox-inner{background-color:#e14c46;border-color:#e14c46}.template-setting-page .ant-checkbox-input:focus+.ant-checkbox-inner,.template-setting-page .ant-checkbox-wrapper:hover .ant-checkbox-inner,.template-setting-page .ant-checkbox:hover .ant-checkbox-inner{border-color:#e14c46}.template-setting-page .ant-select-selection:hover{border-color:#40a9ff}.template-setting-page .ant-select-selection:focus{border-color:#007ace}.template-setting-color-select{display:flex;align-items:center}.template-setting-color-select .color-select-color{margin-left:5px;width:15px;height:15px;border:1px solid #ccc;display:inline-block}.realate-meta-modal .nc-workbench-page{position:static;height:100%;padding:0;margin:0}.realate-meta-modal .nc-workbench-page .sider-list{height:100%;overflow-y:auto;overflow-x:hidden;margin-right:20px;border-radius:4px}.realate-meta-modal .nc-workbench-page .sider-list table,.realate-meta-modal .nc-workbench-page .sider-list td,.realate-meta-modal .nc-workbench-page .sider-list th{border:1px solid #ccc}.realate-meta-modal .nc-workbench-page .sider-list table .close-and-text,.realate-meta-modal .nc-workbench-page .sider-list td .close-and-text,.realate-meta-modal .nc-workbench-page .sider-list th .close-and-text{display:flex;align-items:center}.realate-meta-modal .nc-workbench-page .sider-list td,.realate-meta-modal .nc-workbench-page .sider-list th{padding-left:5px}.realate-meta-modal .nc-workbench-page .sider-list table{width:100%}.realate-meta-modal .nc-workbench-page .sider-list tbody tr:hover{background-color:#e6f7ff}.realate-meta-modal .nc-workbench-page .sider-list tbody tr.select{background-color:#bae7ff}.realate-meta-modal .nc-workbench-page .sider-list tbody i{font-size:18px;cursor:pointer}.realate-meta-modal .nc-workbench-page .sider-tree{height:100%;overflow:auto;border:1px solid #d9d9d9;border-radius:4px;margin-right:15px}.Formula{overflow:auto!important}.template-setting-sider .sider-content .sider-search{text-align:center}.template-setting-sider .sider-content .sider-search input{border-top:none;border-right:none;border-left:none}.template-setting-sider .sider-content .sider-search input:focus,.template-setting-sider .sider-content .sider-search input:hover{box-shadow:none}.template-setting-sider .sider-content .sider-search span.ant-input-group-addon{cursor:pointer;background:#fff;border:1px solid #d9d9d9;border-radius:16px;padding:0 8px}.template-setting-sider .sider-content .sider-search span.ant-input-group-addon:hover{border-color:#40a9ff}.template-setting-sider .sider-content .sider-tab{text-align:center}.template-setting-sider .sider-content .sider-tab .rightTemplate .required:before{color:#f5222d;content:\\\"*\\\";display:inline-block;font-family:SimSun;font-size:14px;line-height:1;margin-right:4px}.template-setting-sider .sider-content .sider-tab .rightTemplate li .refer-wrapper{margin-top:7px}.template-setting-sider .sider-content .sider-tab .rightTemplate .isgrandsonRadio>div{text-align:left}.add-not-meta-data .u-modal-body .code-div span{margin-right:16px}.add-not-meta-data .u-modal-body .code-div:before{color:#f5222d;content:\\\"*\\\";display:inline-block;font-family:SimSun;font-size:14px;line-height:1;margin-right:4px}.add-not-meta-data .u-modal-body .not-code span{margin-right:16px}.add-not-meta-data .u-modal-body .not-code:before{color:#f5222d;content:\\\"*\\\";display:inline-block;font-family:SimSun;font-size:14px;line-height:1;margin-right:4px}.add-not-meta-data .u-modal-body input{width:300px}.add-not-meta-data .u-modal-body input.has-error,.add-not-meta-data .u-modal-body input.has-error:focus{border-color:red;box-shadow:none}.add-not-meta-data .u-modal-body .form-explain{color:red;margin-left:5px}.zonesetting-moneyModal .descrip_label{padding:10px;margin-bottom:10px;border-bottom:1px solid #eee;font-weight:700}.zonesetting-moneyModal .mdcontent{display:flex}.zonesetting-moneyModal .mdcontent div .money-label{margin:0 10px 0 20px}.zonesetting-referModal .descrip_label{padding:10px;margin-bottom:10px;border-bottom:1px solid #eee;font-weight:700}.zonesetting-referModal .mdcontent{display:flex}.zonesetting-referModal .mdcontent div .refer_label{display:inline-block;margin-right:10px;text-align:right}.zonesetting-referModal .ant-input{max-width:60%;margin-right:20px}.zonesetting-customModal .u-modal-body{height:100px}.zonesetting-customModal .u-modal-body .mdcontent{margin-top:10px}.zonesetting-customModal .u-modal-body .def-refer{width:80%}.custom-filter-dropdown input.ant-input.ant-input-sm{height:24px;margin-right:8px}.custom-filter-dropdown button{margin-right:8px}.ant-select-sm .ant-select-selection.ant-select-selection--single{height:24px}.ant-select-sm .ant-select-selection.ant-select-selection--single .ant-select-selection__rendered{line-height:22px}.zonesetting-batch-setting-modal.ant-modal{padding-bottom:0}.zonesetting-batch-setting-modal .ant-modal-content{height:100%}.zonesetting-batch-setting-modal .ant-modal-body{padding:12px 16px 0 15px}.zonesetting-batch-setting-modal .ant-modal-body .ant-table-fixed-header .ant-table-scroll .ant-table-header{padding-bottom:0}.zonesetting-batch-setting-modal .u-modal-footer{position:absolute;width:100%;left:0;bottom:0}.zonesetting-batch-setting-modal .ant-checkbox-checked .ant-checkbox-inner,.zonesetting-batch-setting-modal .ant-checkbox-indeterminate .ant-checkbox-inner{background-color:#e14c46;border-color:#e14c46}.zonesetting-batch-setting-modal .ant-checkbox-input:focus+.ant-checkbox-inner,.zonesetting-batch-setting-modal .ant-checkbox-wrapper:hover .ant-checkbox-inner,.zonesetting-batch-setting-modal .ant-checkbox:hover .ant-checkbox-inner{border-color:#e14c46}.ant-modal-wrap{overflow:hidden}.ant-spin-container .ant-table .ant-table-content .ant-table-scroll .ant-table-header{overflow:hidden;margin-bottom:0!important}.u-modal-dialog{-webkit-transform:translateY(0)!important;transform:translateY(0)!important}.meta-add-modal .u-modal-header .custom-title{font-weight:700}.meta-add-modal .ant-checkbox-checked .ant-checkbox-inner,.meta-add-modal .ant-checkbox-indeterminate .ant-checkbox-inner{background-color:#e14c46;border-color:#e14c46}.meta-add-modal .ant-checkbox-input:focus+.ant-checkbox-inner,.meta-add-modal .ant-checkbox-wrapper:hover .ant-checkbox-inner,.meta-add-modal .ant-checkbox:hover .ant-checkbox-inner{border-color:#e14c46}.meta-add-modal .ant-tree li .ant-tree-checkbox.ant-tree-checkbox-checked .ant-tree-checkbox-inner{background-color:#e14c46;border-color:#e14c46}.meta-add-modal .ant-tree li .ant-tree-checkbox.ant-tree-checkbox-checked .ant-tree-checkbox-inner:hover{border-color:#e14c46}.u-modal-open .meta-add-modal.u-modal .u-modal-dialog .u-modal-content .u-modal-header .u-modal-title{right:50px;font-weight:400}\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"images/hiddenProperty.png\";","import React, { Component } from 'react';\nimport { Button, Popconfirm, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport Ajax from 'Pub/js/ajax';\nimport Notice from 'Components/Notice';\nimport Appicon from 'Components/Appicon';\nimport { withRouter } from 'react-router-dom';\nimport PreviewModal from 'Components/TempletPreview';\nimport { GetQuery, langCheck } from 'Pub/js/utils';\nimport { openPage } from 'Pub/js/superJump';\nimport { ControlTip } from 'Components/ControlTip';\nimport { setZoneData } from 'Store/Zone/action';\nimport { updateAreaList, updateSaveFlag, setZoneDataFun, updateAreaValidate } from 'Store/ZoneSetting/action';\nimport { queryAllArea, queryTemplateProperty, findRepeatItemsByCode } from './events';\nimport _ from 'lodash';\nconst confirm = Modal.confirm;\n//header组件类\nclass MyHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.urlRequestObj = GetQuery(this.props.location.search);\n        this.state = { \n            previewVisibel: false,\n            backModalShow: false\n         };\n    }\n    //预览模态框是否显示\n    setModalVisibel = (visibel) => {\n        this.setState({ previewVisibel: visibel });\n    };\n    //删除左右两端的空格\n    trim = (str) => {\n        if (str) {\n            return str.replace(/^\\s+|\\s+$/g, '');\n        }\n    };\n\n    //校验区域编码、名称为空\n    validateEmptyArea = () => {\n        const { json, areaList ,newAreaList } = this.props;\n        let newList = _.cloneDeep(areaList);\n        let result = true;\n        const areaCodeLang = langCheck('102202APP-000038', \"pages\", json);/* 国际化处理： 区域编码*/\n        const areaNameLang = langCheck('102202APP-000039', \"pages\", json);/* 国际化处理： 区域名称*/\n        let emptyMsg = [];\n        let emptyArea = areaList.filter(area => !area.code || !area.name);\n        const simpleArea = newAreaList.filter(r => r !== null);\n        if (emptyArea && emptyArea.length > 0) {\n            simpleArea.forEach((area, index) => {\n                if (!area.code || !area.name){\n                    const prefix = langCheck('ZoneSetting-000046', \"pages\", json);/* 国际化处理： 区域*/\n                    const msg = getEmptyMsg(area, `${prefix}${index + 1}`);\n                    emptyMsg.push(msg);\n                }\n                if (simpleArea.length !== newAreaList.length) {\n                    validateEmptySpecialArea(area);\n                }\n            });\n            result = false;\n        }\n\n        if(!result){\n            Notice({\n                status: 'error',\n                TextArr: [\n                    langCheck('ZoneSetting-000012', \"pages\", json), /* 国际化处理： 展开*/\n                    langCheck('ZoneSetting-000011', \"pages\", json), /* 国际化处理： 收起*/\n                    langCheck('ZoneSetting-000224', \"pages\", json)  /* 国际化处理： 关闭*/\n                ], \n                content: langCheck('102202APP-000012', \"pages\", json),/* 国际化处理： 区域编码或名称不能为空*/\n                groupOperation: true,\n                groupOperationMsg: emptyMsg,\n            });\n            this.setAreaListValidate(newList, emptyArea);\n            this.props.updateAreaList(newList);\n            this.props.updateAreaValidate(result);\n        }\n        return result;\n\n        //校验分组、侧拉、孙表区域编码/名称为空\n        function validateEmptySpecialArea(area){\n            const msgObj = {\n                groups: langCheck('ZoneSetting-000208', \"pages\", json), /* 国际化处理： 分组*/\n                sides: {\n                    edit: langCheck('ZoneSetting-000222', \"pages\", json), /* 国际化处理： 侧拉*/\n                    browse: langCheck('ZoneSetting-000215', \"pages\", json) /* 国际化处理： 展开卡片*/\n                },\n                grandsons: langCheck('ZoneSetting-000223', \"pages\", json) /* 国际化处理： 孙表*/\n            }\n            for (const [key, stype] of Object.entries(msgObj)) {\n                const areaIndex = simpleArea.findIndex(item => item.pk_area === area.pk_area) + 1;//最外层区域序号\n                const areaStr = langCheck('ZoneSetting-000046', \"pages\", json);/* 国际化处理： 区域*/\n                if (key in area){\n                    area[key].forEach((item, index, sArr) => {\n                        if (!item.code || !item.name){\n                            let suffix = key === 'sides' ? `${stype[item.areastatus]}` : `${stype}${index + 1}`;\n                            const msgPrefix = `${areaStr}${areaIndex}-${suffix}`;\n                            const msg = getEmptyMsg(item, msgPrefix, areaIndex);\n                            emptyMsg.push(msg);\n                            result = false;\n                        }\n                    });\n                }\n            }\n        }\n\n        function getEmptyMsg(area, prefix){\n            let msg = '';\n            if (!area.code && !area.name) { //区域编码、名称都为空\n                msg = `${prefix}：${[areaCodeLang, areaNameLang].join()}`;\n            } else if (!area.code) { //区域编码为空\n                msg = `${prefix}：${areaCodeLang}`;\n            } else if (!area.name) { //区域名称为空\n                msg = `${prefix}：${areaNameLang}`;\n            }\n            return msg;\n        }\n    }\n\n    // 校验tableCode\n    validateCode = (list) => {\n        const { json, } = this.props;\n        let newList = _.cloneDeep(list);\n        let result = true;\n        let repeatArea = findRepeatItemsByCode(list);\n        let isAreaEmpty = this.validateEmptyArea();\n        //校验为空\n        if (isAreaEmpty === false){\n            return isAreaEmpty;\n        }\n        // 校验code重复\n        if (repeatArea && repeatArea.length > 0) {\n            let repeatNames = repeatArea && repeatArea.map(item => item.name);\n            Notice({ status: 'error', msg: `${langCheck('ZoneSetting-000046', \"pages\", json)}${JSON.stringify(repeatNames)}${langCheck('102202APP-000011', \"pages\", json)}` }); /* 国际化处理： 编码不能重复*/\n            result = false;\n            this.setAreaListValidate(newList, repeatArea);\n            this.props.updateAreaList(newList);\n            this.props.updateAreaValidate(result);\n        }\n\n        return result;\n    };\n    //设置未校验通过标示\n    setAreaListValidate = (newList, areas) => {\n        newList.forEach((area, index) => {\n            area.validate = true;\n            areas.forEach(item => {\n                if (area.pk_area === item.pk_area) {\n                    newList[index].validate = false;\n                }\n            });\n        });\n    }\n    //先保存区域数据 成功之后回调保存字段接口\n    saveTemplate = (refresh = true) => {\n        return new Promise(resolve => {\n            this.saveZoneData(refresh).then((newAreaData) => {\n                this.saveData({\n                    newAreaData: newAreaData && newAreaData.area, //保存新增的区域\n                    refresh\n                }).then(resolve);\n            });\n        });\n    }\n\n    //保存区域\n    saveZoneData = (refresh) => {\n        return new Promise((resolve, reject) => {\n            let { json , areaList, zoneDatas } = this.props;\n            let param = GetQuery(this.props.location.search);\n            let url, datas;\n            url = '/nccloud/platform/templet/settempletarea.do';\n            let fromData = this.props.zoneFormData;\n            //校验表头\n            if (areaList.some(item => item.areatype !== '0') && !fromData.headcode){\n                Notice({ status: 'warning', msg: langCheck('102202APP-000073', \"pages\", json) }); /* 国际化处理： 请选择表头*/\n                return;\n            }\n            // 检验 表单的合法性\n            if (!fromData || !fromData.code || !this.trim(fromData.code) || !this.trim(fromData.name)) {\n                Notice({ status: 'warning', msg: langCheck('102202APP-000063', \"pages\", json) }); /* 国际化处理： 请完善表单信息*/\n                return;\n            }\n            if (!fromData || !areaList || areaList.length <= 0) {\n                Notice({ status: 'warning', msg: langCheck('102202APP-000019', \"pages\", json) }); /* 国际化处理： 请完善表格和表单信息*/\n                return;\n            }\n            //  校验 表格的合法性\n            let validateResult = this.validateCode(areaList);\n            let newList = _.cloneDeep(areaList);\n            newList.map((item, index) => {\n                if(item.newArea) {\n                    item.pk_area && delete item.pk_area;\n                }\n                item.formPropertyList = [];\n                item.queryPropertyList = [];\n                item.position = (index + 1) + '';//区域排序\n            })\n            datas = {\n                pk_page_templet: zoneDatas.pk_page_templet,\n                pagecode: zoneDatas.pagecode || param.pcode,\n                pageid: zoneDatas.pageid || param.pid,\n                parentid: zoneDatas.parentid || 'root',\n                areaList: newList,\n                isdefault: zoneDatas.isdefault,\n                appcode: param.appcode || zoneDatas.appcode,\n                clazz: zoneDatas.clazz,\n                mateid: zoneDatas.mateid\n            };\n            datas = Object.assign(fromData, datas);\n            if (validateResult) {\n                Ajax({\n                    url: url,\n                    data: datas,\n                    info: {\n                        name: langCheck('102202APP-000013', \"pages\", json) /* 国际化处理： 保存区域*/,\n                        action: langCheck('102202APP-000014', \"pages\", json) /* 国际化处理： 保存区域设置*/\n                    },\n                    success: ({ data }) => {\n                        if (data.success && data.data) {\n                            if (!data.data.templetid) {\n                                Notice({ status: 'error', msg: data.data.msg });\n                            }\n                            // this.props.setZoneData({});\n                            if (refresh) queryAllArea.call(this, data.data.templetid);\n                            resolve(data.data);\n                        }\n                    },\n                    error: error => {\n                        reject();\n                        console.log(error.data);\n                    }\n                });\n            }\n        });\n    };\n    //保存字段 newAreaData：新增的区域数据 refresh：保存后是否查询\n    saveData = ({ newAreaData, refresh } = {}) => {\n        return new Promise((resolve) => {\n            let configRefer = true;\n            const { areaList, templetid, pcode, appcode, json, zoneDatas } = this.props;\n            //配置参照,参照名称不能为空\n            _.forEach(areaList, (al, idx) => {\n                if (al.areatype === '0') {\n                    //只对参照类型做判断\n                    _.forEach(al.queryPropertyList, (daty, kk) => {\n                        if (\n                            daty.datatype === '204' &&\n                            (daty.refname === '-99' ||\n                                daty.refname === '' ||\n                                daty.refname === null ||\n                                daty.refname === undefined)\n                        ) {\n                            Notice({\n                                status: 'typeError',\n                                msg: `${langCheck('ZoneSetting-000046', 'pages', json)} \"${al.name}\" ${langCheck('ZoneSetting-000047', 'pages', json)} \"${daty.label}\" ${langCheck('ZoneSetting-000048', 'pages', json)} \"${langCheck('ZoneSetting-000030', 'pages', json)}\" ${langCheck('ZoneSetting-000049', 'pages', json)}，${langCheck('ZoneSetting-000050', 'pages', json)}。`/* 国际化处理： 区域,下的,的,参照名称,字段属性未正确设置,请检查配置*/\n                            });\n                            configRefer = false;\n                        }\n                    });\n                }\n                //非查询区占用列数不能为负数\n                if (al.areatype == '1') {\n                    _.forEach(al.queryPropertyList, (colvalue, key) => {\n                        if (colvalue.colnum < 0) {//占用列数属性字段不能为负数\n                            Notice({\n                                status: 'typeError',\n                                msg: `${langCheck('ZoneSetting-000046', 'pages', json)} \"${al.name}\" ${langCheck('ZoneSetting-000047', 'pages', json)} \"${colvalue.label}\" ${langCheck('ZoneSetting-000048', 'pages', json)} \"${langCheck('ZoneSetting-000031', 'pages', json)}\" ${langCheck('ZoneSetting-000051', 'pages', json)}，${langCheck('ZoneSetting-000050', 'pages', json)}。`/* 国际化处理： 区域,下的,的,占用列数,字段属性不能为负数,请检查配置*/\n                            });\n                            configRefer = false;\n                        }\n                    });\n                }\n                //模板设置下的‘最大长度’属性的长度不能为负数,添加验证\n                _.forEach(al.queryPropertyList, (val, kk) => {\n                    if (val.maxlength < 0) {\n                        Notice({\n                            status: 'typeError',\n                            msg: `${langCheck('ZoneSetting-000046', 'pages', json)} \"${al.name}\" ${langCheck('ZoneSetting-000047', 'pages', json)} \"${val.label}\" ${langCheck('ZoneSetting-000048', 'pages', json)} \"${langCheck('ZoneSetting-000032', 'pages', json)}\" ${langCheck('ZoneSetting-000051', 'pages', json)}，${langCheck('ZoneSetting-000050', 'pages', json)}。`/* 国际化处理： 区域,下的,的,最大长度,字段属性不能为负数,请检查配置*/\n                        });\n                        configRefer = false;\n                    }\n                });\n            });\n            if (!configRefer) {\n                return false;\n            }\n            let formPropertyList = [];\n            let queryPropertyList = [];\n            //将pk_query_property置为空；\n            _.forEach(areaList, (a, index) => {\n                _.forEach(a.queryPropertyList, (q) => {\n                    if (q.pk_query_property.indexOf('new') !== -1) {\n                        q.pk_query_property = '';\n                    }\n                });\n            });\n            //将queryPropertyList按照区域的类型进行form和query分类\n            _.forEach(areaList, (a, index) => {\n                if (a.newArea) {\n                    const newAreaId = newAreaData && newAreaData.find(item => item.code === a.code);\n                    //将新增的区域id与字段所属区域对应上\n                    a.queryPropertyList.map(item => {\n                        item.areaid = newAreaId && newAreaId.pk_area;\n                    });\n                }\n                if (a.areatype === '0') {\n                    queryPropertyList = queryPropertyList.concat(a.queryPropertyList);\n                } else {\n                    formPropertyList = formPropertyList.concat(a.queryPropertyList);\n                }\n            });\n    \n            const saveData = {};\n            saveData.templetid = templetid;\n            saveData.formPropertyList = formPropertyList;\n            saveData.queryPropertyList = queryPropertyList;\n            saveData.ismobile = this.urlRequestObj.templettype === 'mobile'; //是否为移动模板 \n            //保存请求\n            Ajax({\n                url: `/nccloud/platform/templet/setareaproperty.do`,\n                info: {\n                    name: langCheck('ZoneSetting-000017', 'pages', json),/* 国际化处理： 单据模板设置*/\n                    action: langCheck('ZoneSetting-000033', 'pages', json)/* 国际化处理： 保存区域与属性*/\n                },\n                data: saveData,\n                loading: true,//发送保存请求时页面显示loading\n                success: (res) => {\n                    // let param = GetQuery(this.props.location.search);\n                    const { data, success } = res.data;\n                    if (success) {\n                        Notice({ status: 'success', msg: data });\n                        //保存成功后需要清除localstorage本地缓存appcode_pcode\n                        console.log('appcode=====', appcode);\n                        console.log('pcode=====', pcode);\n                        console.log('拼接=====', `appTempletStorage_${appcode}_${pcode}`);/* 国际化处理： 拼接=====*/\n                        localStorage.removeItem(`appTempletStorage_${appcode}_${pcode}`);\n                        //修改模板保存重新查字段\n                        if (refresh && this.urlRequestObj.templetid) {\n                            queryTemplateProperty.call(this);\n                        }\n                        this.props.updateSaveFlag(true); //更新模板保存标示\n                        resolve();\n                        //1909模板保存不跳转了\n                        // if (this.props.status) {\n                        //     // 实施态\n                        //     if (this.props.status === 'templateSetting') {\n                        //         openPage(`/TemplateSetting`, false, {}, [ 'status', 'templetid' ]);\n                        //     } else if (this.props.status === 'templateSetting-unit') {\n                        //         openPage(`/TemplateSetting-unit`, false, {}, [ 'status', 'templetid' ]);\n                        //     }\n                        // } else {\n                        //     // 开发态\n                        //     openPage(`/ZoneSettingComplete`, false, {\n                        //         templetid: this.props.templetid,\n                        //         pcode: param.pcode,\n                        //         pid: param.pid,\n                        //         appcode: param.appcode\n                        //     });\n                        // }\n                    } else {\n                        Notice({ status: 'error', msg: data });\n                    }\n                }\n            });\n        });\n    };\n\n    toggleBackModal = flag => this.setState({ backModalShow: flag });\n\n    //点击返回\n    handleBack = () => {\n        //保存过不显示返回弹框\n        if (this.props.isSave) {\n            this.handleNotSaveBack();\n        }else{\n            this.toggleBackModal(true);\n        }\n        // const { json } = this.props;\n        // ControlTip({\n        //     status: 'warning',\n        //     title: langCheck('ZoneSetting-000204', 'pages', json),/* 国际化处理： 返回*/\n        //     msg: langCheck('ZoneSetting-000205', 'pages', json),/* 国际化处理： 确定保存模板配置？*/\n        //     onOk: () => {\n        //         if (this.props.status) {\n        //             // 实施态\n        //             if (this.props.status === 'templateSetting') {\n        //                 openPage(`/TemplateSetting`, false, {}, ['status', 'templetid']);\n        //             } else if (this.props.status === 'templateSetting-unit') {\n        //                 openPage(`/TemplateSetting-unit`, false, {}, ['status', 'templetid']);\n        //             }\n        //         } else {\n        //             //开发态\n        //             openPage(\n        //                 `/ar`,\n        //                 false,\n        //                 {\n        //                     b1: langCheck('ZoneSetting-000041', 'pages', json),/* 国际化处理： 动态建模平台*/\n        //                     b2: langCheck('ZoneSetting-000042', 'pages', json),/* 国际化处理： 开发配置*/\n        //                     b3: langCheck('ZoneSetting-000043', 'pages', json),/* 国际化处理： 应用管理*/\n        //                     n: langCheck('ZoneSetting-000044', 'pages', json),/* 国际化处理： 应用注册*/\n        //                     c: '102202APP'\n        //                 },\n        //                 ['templetid', 'appcode', 'pcode', 'pid']\n        //             );\n        //         }\n        //     }\n        // });\n    }\n\n    //返回跳转\n    back = () => {\n        const { json, status } = this.props;\n        if (status) {\n            // 实施态\n            if (status === 'templateSetting') {\n                openPage(`/TemplateSetting`, false, {}, ['status', 'templetid']);\n            } else if (status === 'templateSetting-unit') {\n                openPage(`/TemplateSetting-unit`, false, {}, ['status', 'templetid']);\n            }\n        } else {\n            let jumpUrl = '/ar';\n            let c = '102202APP';\n            let n = langCheck('ZoneSetting-000044', 'pages', json); /* 国际化处理： 应用注册*/\n            if (this.urlRequestObj.templettype === 'mobile'){\n                jumpUrl = '/MobileAppRegister';\n                c = '102202MOBILE';\n                n = langCheck('ZoneSetting-000228', 'pages', json); /* 国际化处理： 移动应用注册*/\n            }\n            \n            //开发态\n            openPage(\n                jumpUrl,\n                false,\n                {\n                    b1: langCheck('ZoneSetting-000041', 'pages', json),/* 国际化处理： 动态建模平台*/\n                    b2: langCheck('ZoneSetting-000042', 'pages', json),/* 国际化处理： 开发配置*/\n                    b3: langCheck('ZoneSetting-000043', 'pages', json),/* 国际化处理： 应用管理*/\n                    n,\n                    c\n                },\n                ['templetid', 'appcode', 'pcode', 'pid', 'templettype']\n            );\n        }\n    }\n\n    //保存并返回\n    handleSaveBack = () => {\n        this.saveTemplate(false).then(this.back);\n        this.toggleBackModal(false);\n    }\n\n    //不保存并返回\n    handleNotSaveBack = () => {\n        this.back();\n    }\n\n    //取消返回\n    handleCancelBack = () => {\n        this.toggleBackModal(false);\n    }\n\n    //得到预览数据\n    getPreviewData = () => {\n        let areaList = _.cloneDeep(this.props.areaList);\n        areaList.forEach(item => {\n            item.formPropertyList = [...item.queryPropertyList];\n            //字段position改成字符串\n            item.formPropertyList.forEach(j => {\n                j.position = j.position && j.position + '';\n            });\n            item.queryPropertyList.forEach(j => {\n                j.position = j.position && j.position + '';\n            });\n        });\n        return areaList;\n    }\n    render() {\n        let { previewVisibel } = this.state;\n        let { json, zoneDatas } = this.props;\n        const { c } = GetQuery(window.location.hash);\n        const templetData = {\n            pagecode: zoneDatas.pagecode,\n            appcode: zoneDatas.appcode,\n            templetid: this.props.templetid\n        }\n\n        return (\n            <div className='template-setting-header'>\n                <div className='header-name'>\n                    <i \n                        className=\"iconfont icon-danjufanhui\" \n                        onClick={this.handleBack} \n                    /> \n                    <Appicon appCode={c} />\n                    <span>{langCheck('ZoneSetting-000035', 'pages', json)}</span>\n                    {/* /* 国际化处理： 配置模板区域*/ }\n                </div>\n                <div className='button-list'>\n                {/* 1909去掉上一步按钮 */}\n                    {\n                        // (() => {\n                        // 开发态\n                        // if (!this.props.status) {\n                        //     return (\n                        //         <Button\n                        //             onClick={() => {\n                        //                 //修改弹窗样式\n                        //                 ControlTip({\n                        //                     status: 'warning',\n                        //                     title: langCheck('ZoneSetting-000036', 'pages', json),/* 国际化处理： 上一步*/\n                        //                     msg: langCheck('ZoneSetting-000037', 'pages', json),/* 国际化处理： 确定返回上一个页面吗？*/\n                        //                     onOk: () => {\n                        //                         let param = GetQuery(this.props.location.search);\n                        //                         openPage(\n                        //                             `/Zone`,\n                        //                             false,\n                        //                             {\n                        //                                 templetid: this.props.templetid,\n                        //                                 pcode: param.pcode,\n                        //                                 pid: param.pid,\n                        //                                 appcode: param.appcode\n                        //                             },\n                        //                             [ 'appcode', 'pcode', 'pid' ]\n                        //                         );\n                        //                     }\n                        //                 });\n                        //             }}\n                        //         >\n                        //             {langCheck('ZoneSetting-000036', 'pages', json)}\n                        //             {/* /* 国际化处理： 上一步*/}\n                        //         </Button>\n                        //     );\n                        // }\n                    // })()\n                    }\n\n                    <Button onClick={() => this.saveTemplate(true)} className='ant-btn-primary'>\n                        {langCheck('ZoneSetting-000038', 'pages', json)}\n                        {/* /* 国际化处理： 保存*/}\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            this.setModalVisibel(true);\n                        }}\n                    >\n                        {langCheck('ZoneSetting-000039', 'pages', json)}\n                        {/* /* 国际化处理： 预览*/}\n                    </Button>\n                    {/* <Button> */}\n                        {/* {langCheck('ZoneSetting-000006', 'pages', json)} */}\n                        {/* /* 国际化处理： 取消*/}\n                    {/* </Button> */}\n                </div>\n                {previewVisibel && (\n                    <PreviewModal \n                        previewVisibel={previewVisibel} \n                        setModalVisibel={this.setModalVisibel} \n                        templetData={templetData}\n                        requestUrl=\"/nccloud/platform/templet/previewtemplet.do\"\n                        requestData={this.getPreviewData()}\n                    />\n                )}\n                <Modal\n                    mask={true}\n                    closable={false}\n                    title={langCheck('ZoneSetting-000207', \"pages\", json)}/* 国际化处理： 提示消息*/\n                    visible={this.state.backModalShow}\n                    centered={true}\n                    maskClosable={false}\n                    width={410}\n                    height={200}\n                    className={'prompt-box-project'}\n                    footer={[\n                        <Button onClick={this.handleSaveBack} type=\"primary\">\n                            {langCheck('ZoneSetting-000038', \"pages\", json)} {/* 国际化处理： 保存*/}\n                        </Button>,\n                        <Button onClick={this.handleNotSaveBack}>\n                            {langCheck('ZoneSetting-000206', \"pages\", json)} {/* 国际化处理： 不保存*/}\n                        </Button>,\n                        <Button onClick={this.handleCancelBack}>\n                            {langCheck('ZoneSetting-000006', \"pages\", json)} {/* 国际化处理： 取消*/}\n                        </Button>\n                    ]}\n                >        \n                    <p className='prompt-title'>\n                        <i className=\"icon iconfont icon-zhuyi1 warning\" />\n                        <span>{langCheck('ZoneSetting-000204', \"pages\", json)}</span> {/* 国际化处理：返回*/}\n                    </p>\n                    <p className='prompt-content'>{langCheck('ZoneSetting-000205', \"pages\", json)}</p> {/* 国际化处理：确定保存模板配置？*/}\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default connect(\n    (state) => {\n        let { areaList, newAreaList, zoneFormData, isSave } = state.zoneSettingData;\n        let { zoneDatas }  = state.zoneRegisterData;\n        return { areaList, zoneFormData, zoneDatas, isSave, newAreaList };\n    },\n    {\n        setZoneData,\n        updateAreaList,\n        updateSaveFlag,\n        setZoneDataFun,\n        updateAreaValidate\n    }\n)(withRouter(MyHeader));\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    updateSelectCard,\r\n    updateAreaList,\r\n    updateSelectArea,\r\n    clearData\r\n} from \"Store/ZoneSetting/action\";\r\nimport { clearZoneData } from 'Store/Zone/action';\r\nimport Ajax from \"Pub/js/ajax\";\r\nimport \"./index.less\";\r\nimport withDragDropContext from \"Pub/js/withDragDropContext\";\r\nimport AreaItem from \"./areaItem\";\r\nimport TreeModal from \"./treeModal\";\r\nimport _ from \"lodash\";\r\nimport Notice from \"Components/Notice\";\r\nimport { DropTarget } from 'react-dnd';\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport { addNewAreaItem, getFormHeadCode } from './events';\r\nimport emptycontentImg from \"Assets/images/template-empty-content.png\";\r\n//内容组件类\r\n\r\nconst areaTarget = {\r\n    // hover(props, monitor, component) {\r\n    //     const dragItem = monitor.getItem();\r\n        \r\n    // },\r\n    drop(props, monitor, component) {\r\n        const dragItem = monitor.getItem();\r\n        if(!dragItem.type) return;\r\n        //拖拽的是区域不是孙表\r\n        if (dragItem.type === 'area' && dragItem.areaType !== 'grandson'){\r\n            addNewAreaItem(props, { \r\n                items: { areatype: dragItem.areaCode },\r\n                isExpand: true\r\n            });\r\n        }\r\n    },\r\n    canDrop(props, monitor) {\r\n        const dropItem = monitor.getItem();\r\n        return dropItem.type !== 'card';\r\n    }\r\n};\r\n\r\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\r\n@DropTarget('area', areaTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop()\r\n}))\r\nclass MyContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalVisible: false,\r\n            metaTree: [],\r\n            targetAreaID: \"\",\r\n            targetAreaType: \"\",\r\n            canSelectTreeNodeList: []\r\n        };\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData();\r\n        this.props.clearZoneData();\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    //设置元数据树模态框是否可见\r\n    setModalVisible = modalVisible => {\r\n        this.setState({ modalVisible });\r\n    };\r\n    /**\r\n     * 打开元数据树的模态框\r\n     * @param {String} metaid\r\n     * @param {String} targetAreaID 目标区域ID\r\n     * @param {String} areatype 区域类型\r\n     **/\r\n    addMetaInArea = (metaid, targetAreaID, areatype) => {\r\n        let { json } = this.props;\r\n        if (metaid === \"\" || metaid === null || metaid == undefined) {\r\n            Notice({ status: \"warning\", msg: langCheck('ZoneSetting-000019', 'pages', json) });/* 国际化处理： 请关联元数据*/\r\n            return;\r\n        }\r\n        Ajax({\r\n            url: `/nccloud/platform/templet/querymetapro.do`,\r\n            info: {\r\n                name: langCheck('ZoneSetting-000017', 'pages', json),/* 国际化处理： 单据模板设置*/\r\n                action: langCheck('ZoneSetting-000020', 'pages', json)/* 国际化处理： 元数据树结构查询*/\r\n            },\r\n            data: {\r\n                metaid: metaid\r\n            },\r\n            success: res => {\r\n                if (res) {\r\n                    let { data, success } = res.data;\r\n                    if (success && data && data.rows && data.rows.length > 0) {\r\n                        let metaTree = [];\r\n                        //元数据树最外层树结构的拼接\r\n                        data.rows.map((r, index) => {\r\n                            metaTree.push({\r\n                                ...r,\r\n                                title: `${r.refcode} ${r.refname}`,\r\n                                key: `${r.refcode}`,\r\n                                myUniqID: `${r.refcode}`,\r\n                                isLeaf: r.isleaf\r\n                            });\r\n                        });\r\n                        //数据类型205的，即可以全选该节点下面的叶子节点，需要模态框中显示select进行选择\r\n                        let canSelectTreeNodeList = [];\r\n                        _.forEach(metaTree, m => {\r\n                            if (m.datatype === \"205\") {\r\n                                canSelectTreeNodeList.push(m);\r\n                            }\r\n                        });\r\n                        this.setState({\r\n                            metaTree: metaTree,\r\n                            targetAreaID: targetAreaID,\r\n                            targetAreaType: areatype,\r\n                            canSelectTreeNodeList: canSelectTreeNodeList\r\n                        });\r\n                        this.setModalVisible(true);\r\n                    } else {\r\n                        if (success && data && data.rows && !data.rows.length) {\r\n                            Notice({ status: \"warning\", msg: langCheck('ZoneSetting-000021', 'pages', json) });/* 国际化处理： 元数据树为空*/\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    //更新元数据树的数据\r\n    updateMetaTreeData = metaTree => {\r\n        this.setState({ metaTree: metaTree });\r\n    };\r\n    //添加卡片\r\n    addCard = addCardList => {\r\n        let { targetAreaID } = this.state;\r\n        let { areaList } = this.props;\r\n        areaList = _.cloneDeep(areaList);\r\n        let targetAreaIndex = -1;\r\n        let metaid = \"\";\r\n        //从areaList中确定目标区域\r\n        _.forEach(areaList, (a, i) => {\r\n            if (targetAreaID === a.pk_area) {\r\n                targetAreaIndex = i;\r\n                metaid = a.metaid;\r\n                return false;\r\n            }\r\n        });\r\n        //以code为主键，去重\r\n        areaList[targetAreaIndex].queryPropertyList = _.uniqBy(\r\n            areaList[targetAreaIndex].queryPropertyList.concat(addCardList),\r\n            \"code\"\r\n        );\r\n        //初始化卡片position和classid属性\r\n        _.forEach(areaList[targetAreaIndex].queryPropertyList, (q, i) => {\r\n            q.position = i + 1;\r\n            q.classid = metaid;\r\n        });\r\n        this.props.updateAreaList(areaList);\r\n    };\r\n    /**\r\n     * 移动卡片\r\n     * @param {Number} dragIndex 拖拽卡片的index\r\n     * @param {Number} hoverIndex 目标卡片的index\r\n     * @param {Number} areaItemIndex 目标区域的index\r\n     **/\r\n    //如果需要跨区域移动卡片再放开\r\n    // moveCard = (dragIndex, hoverIndex, areaItemIndex) => {\r\n    //     let { areaList } = this.props;\r\n    //     areaList = _.cloneDeep(areaList);\r\n    //     const cards = areaList[areaItemIndex].queryPropertyList;\r\n\r\n    //     const dragCard = cards[dragIndex];\r\n    //     cards.splice(dragIndex, 1);\r\n    //     cards.splice(hoverIndex, 0, dragCard);\r\n    //     _.forEach(cards, (q, i) => {\r\n    //         q.position = i + 1;\r\n    //     });\r\n    //     this.props.updateAreaList(areaList);\r\n    //     // this.props.updateSelectCard({}); //出于性能考虑注掉\r\n    // };\r\n    /**\r\n     * 删除卡片\r\n     * @param {Number} cardIndex 目标卡片index\r\n     * @param {Number} areaItemIndex 目标区域的index\r\n     **/\r\n    deleteCard = (cardIndex, areaItemIndex) => {\r\n        let { areaList } = this.props;\r\n        areaList = _.cloneDeep(areaList);\r\n\r\n        const cards = areaList[areaItemIndex].queryPropertyList;\r\n\r\n        cards.splice(cardIndex, 1);\r\n\r\n        this.props.updateAreaList(areaList);\r\n        this.props.updateSelectCard({});\r\n    };\r\n    /**\r\n     * 选择卡片\r\n     * @param {Number} cardIndex 目标卡片index\r\n     * @param {Number} areaItemIndex 目标区域的index\r\n     **/\r\n    //改为写在card里，这里就没用了\r\n    // selectThisCard = (cardIndex, areaItemIndex) => {\r\n    //     let { areaList } = this.props;\r\n    //     let card = areaList[areaItemIndex].queryPropertyList[cardIndex];\r\n    //     this.props.updateSelectCard(card);\r\n    // };\r\n    \r\n    /**\r\n\t * 移动区域的顺序\r\n\t * @param {Number} dragIndex 拖拽的组对象的index值\r\n\t * @param {Number} hoverIndex 拖拽中鼠标悬浮的组对象的index值\r\n\t**/\r\n    dragAreaItem = (dragIndex, hoverIndex) => {\r\n        let { areaList } = this.props;\r\n        areaList = _.cloneDeep(areaList);\r\n        const dragItem = areaList[dragIndex];\r\n        areaList.splice(dragIndex, 1);\r\n        areaList.splice(hoverIndex, 0, dragItem);\r\n        this.props.updateAreaList(areaList);\r\n    };\r\n\r\n    //上移\r\n    moveUp = (areaList, areaIndex) => {\r\n        let targetIndex = areaIndex - 1;\r\n        if (this.props.newAreaList[targetIndex] === null) {\r\n            //找到下一个不是null的areaItem\r\n            let tempArr = areaList.slice(0, targetIndex);\r\n            targetIndex = _.findLastIndex(tempArr, item => item !== null) - 1;\r\n        }\r\n        return this.swapAreaItem(areaList, areaIndex, targetIndex);\r\n    }\r\n\r\n    //下移\r\n    moveDown = (areaList, areaIndex) => {\r\n        let targetIndex = areaIndex + 1;\r\n        if (this.props.newAreaList[targetIndex] === null) {\r\n            //找到下一个不是null的areaItem\r\n            targetIndex = areaList.slice(targetIndex).findIndex(item => item !== null) + targetIndex + 1;\r\n        }\r\n        return this.swapAreaItem(areaList, areaIndex, targetIndex);\r\n    }\r\n\r\n    //移动区域\r\n    moveArea = (moveType, areaList, areaIndex) => {\r\n        const currArea = areaList[areaIndex]; //移动的区域\r\n        const headCode = getFormHeadCode(areaList, this.props.zoneFormData.headcode);\r\n        let targetIndex\r\n        if (moveType === 'up'){ //上移\r\n            targetIndex = areaIndex - 1;\r\n            //上移的区域关联的是主表\r\n            if (areaList[targetIndex].relationcode === headCode) {\r\n                let headIndex = areaList.findIndex(item => item.code === headCode); //主表的index\r\n                this.moveFormGroup('down', areaList, headIndex);\r\n            } else {\r\n                this.moveUp(areaList, areaIndex);\r\n            }\r\n        } else if (moveType === 'down'){ //下移\r\n            targetIndex = areaIndex + 1;\r\n            //下移的区域是主表\r\n            if (areaList[targetIndex].code === headCode){\r\n                this.moveFormGroup('up', areaList, targetIndex);\r\n            } else {\r\n                this.moveDown(areaList, areaIndex);\r\n            }\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * 区域上移/下移\r\n     *  @param type 移动类型 上移/下移\r\n     *  @param areaIndex 区域index\r\n     *\r\n     */\r\n    moveAreaItem = (type, areaIndex) => {\r\n        let areaList = _.cloneDeep(this.props.areaList);\r\n        const currArea = areaList[areaIndex]; //移动的区域\r\n        const headCode = getFormHeadCode(areaList, this.props.zoneFormData.headcode);\r\n        if (type === 'up' && areaIndex === 0) return; //上移到第一个\r\n        if (type === 'down' && areaIndex === areaList.length - 1) return; //下移到最后一个\r\n        //移动的是主表\r\n        if (currArea.code === headCode) {\r\n            this.moveFormGroup(type, areaList, areaIndex);\r\n        } else {\r\n            this.moveArea(type, areaList, areaIndex);\r\n        }\r\n        this.props.updateAreaList(areaList);\r\n    }\r\n\r\n    /**\r\n     * 移动主表位置\r\n     * \r\n     *  @param moveType 移动类型 up:上移 down:下移\r\n     *  @param areaList 区域数据\r\n     *  @param areaIndex 当前区域index\r\n     */\r\n    moveFormGroup = (moveType, areaList, areaIndex) => {\r\n        const formGroupList = this.getFormGroupList(areaList);\r\n        if(moveType === 'up'){\r\n            let itemIndex = areaIndex - 1;\r\n            this.insertAreaItem(areaList, areaIndex + formGroupList.length, itemIndex);\r\n        } else if(moveType === 'down'){\r\n            let itemIndex = areaIndex + formGroupList.length + 1;\r\n            this.insertAreaItem(areaList, areaIndex, itemIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 交换区域位置\r\n     *\r\n     *  @param areaList 区域数据\r\n     *  @param targetIndex 目标index\r\n     *  @param sourceIndex 来源index\r\n     */\r\n    swapAreaItem = (areaList, sourceIndex, targetIndex) => {\r\n        return [areaList[sourceIndex], areaList[targetIndex]] = [areaList[targetIndex], areaList[sourceIndex]];\r\n    }\r\n\r\n    /**\r\n     * 将区域插入到指定位置\r\n     *\r\n     *  @param areaList 区域数据\r\n     *  @param targetIndex 插入的目标index\r\n     *  @param itemIndex 元素的index\r\n     */\r\n    insertAreaItem = (areaList, targetIndex, itemIndex) => {\r\n        let targetArea = areaList.splice(itemIndex, 1)[0];\r\n        areaList.splice(targetIndex, 0, targetArea);\r\n    }\r\n    /**\r\n     * 分组上移/下移\r\n     *  @param type 移动类型 上移/下移\r\n     *  @param areaIndex 分组对应的区域index\r\n     *\r\n     */\r\n    moveFormGroupItem = (type, areaIndex) => {\r\n        const { areaList } = this.props  ;\r\n        const headCode = getFormHeadCode(areaList, this.props.zoneFormData.headcode);\r\n        const prevGroupIndex = _.findLastIndex(areaList, item => item.relationcode === headCode && item.areatype === '1', areaIndex - 1); //上一个分组\r\n        const nextGroupIndex = _.findIndex(areaList, item => item.relationcode === headCode && item.areatype === '1', areaIndex); //下一个分组\r\n        this.moveChildrenItem(type, areaIndex, prevGroupIndex, nextGroupIndex);\r\n    }\r\n\r\n    /**\r\n    * 孙表上移/下移\r\n    *  @param type 移动类型 上移/下移\r\n    *  @param areaIndex 分组对应的区域index\r\n    *  @param grandson 孙表区域数据\r\n    *\r\n    */\r\n    moveGrandsonItem = (type, areaIndex, grandson) => {\r\n        const { areaList } = this.props;\r\n        const prevGrandsonIndex = _.findLastIndex(areaList, item => item.relationcode === grandson.relationcode && item.isgrandson === true, areaIndex - 1); //上一个孙表\r\n        const nextGrandsonIndex = _.findIndex(areaList, item => item.relationcode === grandson.relationcode && item.isgrandson === true, areaIndex); //下一个孙表\r\n        this.moveChildrenItem(type, areaIndex, prevGrandsonIndex, nextGrandsonIndex);\r\n    }    \r\n\r\n    //子区域（分组/孙表）上移/下移\r\n    moveChildrenItem = (type, areaIndex, prevChildIndex, nextChildIndex) => {\r\n        let areaList = _.cloneDeep(this.props.areaList);\r\n        //上移\r\n        if (type === 'up') {\r\n            let targetindex = prevChildIndex < 0 ? 0 : prevChildIndex;\r\n            this.insertAreaItem(areaList, targetindex, areaIndex);\r\n        }\r\n        //下移\r\n        if (type === 'down') {\r\n            this.insertAreaItem(areaList, nextChildIndex + 1, areaIndex);\r\n        }\r\n        this.props.updateAreaList(areaList);\r\n    }\r\n\t/**\r\n\t * 删除区域\r\n\t * @param {String} areaID 目标分组id\r\n\t**/\r\n    deleteAreaItem = (areaID, callback) => {\r\n        let areaList = _.cloneDeep(this.props.areaList);\r\n        _.remove(areaList, item => item.pk_area === areaID);\r\n        this.props.updateAreaList(areaList);\r\n        callback && callback();\r\n    };\r\n\r\n    /**\r\n     * 展开/收起区域\r\n     * \r\n     * index - 区域index\r\n     * flag - 展开(true)收起(false)状态\r\n     */\r\n    expandArea = (index, flag) => {\r\n        let areaList = _.cloneDeep(this.props.areaList);\r\n        areaList[index].isShow = flag;\r\n        this.props.updateAreaList(areaList);\r\n    }\r\n\r\n    //得到主表分组数据\r\n    getFormGroupList = (areaList) => {\r\n        let result = [...areaList];\r\n        const relationList = result.filter(item => item.relationcode); //有关联区域的区域\r\n        let headCode = getFormHeadCode(result, this.props.zoneFormData.headcode);\r\n        result = relationList.filter(r => r.relationcode === headCode);\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        let { json, canDrop, connectDropTarget, areaList, newAreaList, templetid } = this.props;\r\n        let backgroundColor = '#fff';\r\n        //如果需要拖拽背景色再放开\r\n        if (canDrop) {\r\n            backgroundColor = 'rgba(221, 236, 250, 0.3)'\r\n        }\r\n        console.log({newAreaList})\r\n        return connectDropTarget(\r\n            <div className=\"template-setting-content\" style={{ backgroundColor }}>\r\n            {\r\n                newAreaList.length > 0 ? \r\n                    newAreaList.map((a, i) => {\r\n                        if(a){\r\n                            return (\r\n                                <AreaItem\r\n                                    areaItem={a}\r\n                                    key={i}\r\n                                    areaListLength={newAreaList.length}\r\n                                    id={a.pk_area}\r\n                                    index={i}\r\n                                    areatype={a.areatype}\r\n                                    metaid={a.metaid}\r\n                                    isShow={a.isShow}\r\n                                    // moveCard={this.moveCard}\r\n                                    deleteCard={this.deleteCard}\r\n                                    addMetaInArea={this.addMetaInArea}\r\n                                    // selectThisCard={this.selectThisCard}\r\n                                    onDragArea={this.dragAreaItem}\r\n                                    onMoveArea={this.moveAreaItem}\r\n                                    onMoveFormGroup={this.moveFormGroupItem}\r\n                                    onMoveGrandson={this.moveGrandsonItem}\r\n                                    onDeleteArea={this.deleteAreaItem}\r\n                                    onExpandArea={this.expandArea}\r\n                                    json={json}\r\n                                    pageStatus={this.props.status}\r\n                                    isImplement={this.props.isImplement}\r\n                                />\r\n                            );\r\n                        }\r\n                    })\r\n                    :\r\n                    <div className=\"empty-content\">\r\n                        {\r\n                            //修改不显示占位图\r\n                            !templetid && \r\n                            <div>\r\n                                <img src={emptycontentImg} />\r\n                                {/* 国际化处理：请将左侧区域内容拖拽至此 */}\r\n                                <p>{langCheck('ZoneSetting-000199', 'pages', json)}</p>\r\n                                {/* 国际化处理：可自定义查询区、列表区等 */}\r\n                                <p>{langCheck('ZoneSetting-000201', 'pages', json)}</p>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n                \r\n                {/* 元数据树模态框 */}\r\n                <TreeModal\r\n                    metaTree={this.state.metaTree}\r\n                    canSelectTreeNodeList={this.state.canSelectTreeNodeList}\r\n                    modalVisible={this.state.modalVisible}\r\n                    targetAreaID={this.state.targetAreaID}\r\n                    targetAreaType={this.state.targetAreaType}\r\n                    targetAreaCardLength={this.state.targetAreaCardLength}\r\n                    setModalVisible={this.setModalVisible}\r\n                    addCard={this.addCard}\r\n                    updateMetaTreeData={this.updateMetaTreeData}\r\n                    json={this.props.json}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        areaList: state.zoneSettingData.areaList,\r\n        newAreaList: state.zoneSettingData.newAreaList,\r\n        zoneFormData: state.zoneSettingData.zoneFormData\r\n    }),\r\n    {\r\n        clearData,\r\n        clearZoneData,\r\n        updateAreaList,\r\n        updateSelectArea,\r\n        updateSelectCard\r\n    }\r\n)(withDragDropContext(MyContent));\r\n","import React, { Component } from \"react\";\nimport { Icon, Checkbox, Popconfirm, Button, Tooltip } from \"antd\";\nimport { connect } from \"react-redux\";\nimport MyCard from \"./card\";\nimport { updateSelectCard, updateSelectArea, updateBatchSource, updateAreaList } from \"Store/ZoneSetting/action\";\nimport BatchSettingModal from \"./batchSettingModal\";\nimport AddNotMetaDataModal from \"./addNotMetaDataModal\";\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { langCheck } from 'Pub/js/utils';\nimport { addNewAreaItem, removeSelectCardCls, findRepeatItemsByCode } from './events';\nimport Notice from \"Components/Notice\";\nimport FormGroupArea from './components/FormGroupArea';\nimport TableFoldArea  from './components/TableFoldArea';\nimport TableDrawerArea  from './components/TableDrawerArea';\nimport GrandsonArea from './components/GrandsonArea';\n//区域组件类\nconst areaSource = {\n    beginDrag(props) {\n        if (!props.isImplement){\n            props.updateSelectArea(props.areaItem); //拖拽时选中当前区域\n            removeSelectCardCls(); //清空选中字段样式\n        }\n        return {\n            id: props.id,\n            index: props.index,\n            type: props.type\n        };\n    },\n    canDrag(props) {\n        //实施态禁止拖动区域\n        return !props.isImplement;\n    }\n};\n\nconst areaTarget = {\n    drop(props, monitor, component){\n        const dragItem = monitor.getItem();\n        //从左侧拖拽非元数据\n        if (dragItem.type === 'card') {\n            //实施态查询区不让拖非元数据\n            if (props.isImplement && props.areatype === '0') return;\n            component.openAddNotMetaInArea();\n            //只拖拽到区域时执行（而不是嵌套组件）\n            if(monitor.isOver({ shallow: false })){\n                component.setState({\n                    currentNotMeta: { datatype: dragItem.datatype },\n                    realAreaIndex: props.index\n                });\n            }\n        } else if (dragItem.from !== 'left') {\n            const dragIndex = dragItem.index;\n            const hoverIndex = props.index;\n\n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) return;\n\n            props.onDragArea(dragIndex, hoverIndex);\n            monitor.getItem().index = hoverIndex;\n        }\n    }\n};\n\n\n//DropSource用于包装你需要拖动的组件，使组件能够被拖拽\n@DragSource('area', areaSource, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n}))\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\n@DropTarget('area', areaTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n}))\nclass AreaItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShow: props.isShow,\n            batchSettingModalVisibel: false,\n            addDataModalVisibel: false,\n            shouldHideGray: false,\n            currentNotMeta: {}, //当前拖拽的非元数据\n            realAreaIndex: props.index, //自定义区域对应areaList的index\n            groupShowArr: props.areaItem.groups ? [...props.areaItem.groups].fill(true) : [], //表单区分组显示\n            groupNotVisibleArr: props.areaItem.groups ? [...props.areaItem.groups].fill(false) : [], //表单区分组隐藏不显示属性\n            foldObj: props.areaItem.sides ? { //表单区展开卡片\n                foldShow: false,\n                foldNotVisible: false,\n                emptyArea: {} //缓存新增的展开卡片区\n            } : {},\n            sideObj: props.areaItem.sides ? { //侧拉\n                sideShow: false,\n                sideNotVisible: false,\n                emptyArea: {} //缓存新增的侧拉区\n            } : {},\n            grandsonObj: { //孙表\n                grandsonShowArr: props.areaItem.grandsons ? [...props.areaItem.grandsons].fill(true) : [], //孙表区域显示\n                grandsonNotVisibleArr: props.areaItem.grandsons ? [...props.areaItem.grandsons].fill(false) : [] //孙表隐藏不显示属性\n            },\n            oprWidth: 150 //表格区操作列宽度\n        };\n    }\n\n     componentDidMount(){\n        //只有一个区域时默认展开\n        if(this.props.areaListLength == 1){\n            this.showOrHideAreaItem(true);\n        }\n     }\n    \n    //移动卡片（旧版）\n    // moveCard = (dragIndex, hoverIndex) => {\n    //     this.props.moveCard(dragIndex, hoverIndex, this.props.index);\n    // };\n    /**\n     * 移动卡片\n     * @param {Number} dragIndex 拖拽卡片的index\n     * @param {Number} hoverIndex 目标卡片的index\n     * @param {Number} areaIndex 区域的index\n     **/\n    moveCard = (dragIndex, hoverIndex, areaIndex) => {\n        let { areaList } = this.props;\n        areaList = _.cloneDeep(areaList);\n        const cards = areaList[areaIndex].queryPropertyList;\n\n        const dragCard = cards[dragIndex];\n        cards.splice(dragIndex, 1);\n        cards.splice(hoverIndex, 0, dragCard);\n        _.forEach(cards, (q, i) => {\n            q.position = i + 1;\n        });\n        this.props.updateAreaList(areaList);\n        // this.props.updateSelectCard({}); //出于性能考虑注掉\n    };\n\n    /**\n     * 删除卡片\n     *\n     * @param cardIndex - 卡片index\n     * @param areaIndex - 区域index\n     */\n    deleteCard = (cardIndex, areaIndex) => {\n        this.props.deleteCard(cardIndex, areaIndex);\n    };\n    //新增元数据 areaId:分组对应的区域id\n    addMetaInArea = ({\n        metaId = this.props.areaItem.metaid,\n        areaId = this.props.id,\n        areaType = this.props.areatype\n    } = {}) => {\n        this.props.addMetaInArea(\n            metaId,\n            // this.props.metaid,\n            areaId,\n            areaType\n        );\n    };\n    //选择某个卡片\n    // selectThisCard = (e, cardIndex) => {\n    //     this.props.selectThisCard(e, cardIndex, this.props.index);\n    // };\n    //打开批量设置模态框\n    openBatchSetting = (areaIndex) => {\n        this.props.updateSelectCard({});\n        this.setModalVisibel(true, areaIndex);\n    };\n    //设置批量设置模态框的显示/隐藏\n    setModalVisibel = (visibel, areaIndex) => {\n        const { areaList, index } = this.props;\n        let newIndex = areaIndex || index;\n        this.props.updateBatchSource(areaList[newIndex].queryPropertyList);\n        this.setState({ \n            batchSettingModalVisibel: visibel,\n            realAreaIndex: newIndex\n        });\n    };\n    //打开新增非元数据模态框\n    openAddNotMetaInArea = () => {\n        this.setAddDataModalVisibel(true);\n    };\n    //设置新增非元数据模态框的显示/隐藏\n    setAddDataModalVisibel = visibel => {\n        this.setState({ addDataModalVisibel: visibel });\n    };\n\n    //根据区域id查区域index\n    getAreaIndexByPk = (area) => {\n        if(!area) return;\n        let areaIndex;\n        this.props.areaList.map((item, index) => {\n            if (item.pk_area === area.pk_area) {\n                areaIndex = index;\n            }\n        });\n        return areaIndex;\n    }\n\n    //显示/隐藏整个区域\n    showOrHideAreaItem = (flag) => {\n        let isShow = typeof flag !== 'boolean' ? !this.props.isShow : flag;\n        this.props.onExpandArea(this.props.index, isShow);\n        if (isShow){\n            //动态计算表格区操作列宽度\n            setTimeout(() => {\n                this.setState({ oprWidth: this.oprColRef && this.oprColRef.clientWidth });\n            }, 0);\n        }\n    };\n\n    //显示/隐藏表单区分组\n    toggleFormGroup = (index) => {\n        let { groupShowArr } = this.state;\n        groupShowArr[index] = !groupShowArr[index];\n        this.setState({ groupShowArr });\n    }\n\n    //清空选中字段\n    clearSelectCard = () => {\n        removeSelectCardCls();\n        this.props.updateSelectCard({});\n    }\n\n    //选中区域\n    selectAreaItem = (e, area = this.props.areaItem) => {\n        e.stopPropagation();\n        const { selectCard, selectedArea } = this.props;\n        if (!_.isEmpty(selectCard)) this.clearSelectCard();//清空选中字段\n        if (selectedArea && area.pk_area !== selectedArea.pk_area) this.props.updateSelectArea(area);\n    }\n\n    //检查区域编码是否重复\n    checkAreaCodeRepeat = (areaList) => {\n        const repeatArea = findRepeatItemsByCode(areaList); //重复的区域编码\n        if (repeatArea && repeatArea.length > 0) {\n            let repeatNames = repeatArea.map(item => item.name);\n            Notice({ status: 'error', msg: `${langCheck('ZoneSetting-000046', \"pages\", this.props.json)}${JSON.stringify(repeatNames)}${langCheck('102202APP-000011', \"pages\", this.props.json)}` }); /* 国际化处理： 编码不能重复*/\n            return true;\n        }\n        return false;\n    }\n\n    //新增表单区分组 position:新增分组的位置\n    handleAddFormGroup = (e, position) => {\n        e.stopPropagation();\n        const { areaItem, areaList, zoneFormData, json } = this.props;\n        const relationcode = zoneFormData.headcode;\n        const groupPosition = _.findLastIndex(areaList, item => item.relationcode === relationcode) + 1;\n        //主表未展开时新增分组展开主表\n        if (!this.props.isShow) {\n            this.showOrHideAreaItem(true);\n        }\n        //异步目的是展开区域后再执行\n        setTimeout(() => {\n            let addArea = this.addArea(this.props, {\n                items: {\n                    areatype: '1',\n                    relationcode\n                },\n                position: position || groupPosition\n            });\n            if (addArea && position === undefined){\n                //主表区域新增分组滚动到新增的分组上\n                let lastFormGroupElm = this[`formGroupRef${areaItem.groups.length - 1}`];\n                lastFormGroupElm.scrollIntoView();\n            }\n        }, 0);\n    }\n\n    //隐藏不显示属性\n    handleHideGray = e => {\n        this.setState({\n            shouldHideGray: e.target.checked\n        });\n    }\n\n    //表单分组隐藏不显示属性\n    handleGroupHideGray = (e, groupIndex) => {\n        let { groupNotVisibleArr } = this.state;\n        groupNotVisibleArr[groupIndex] = e.target.checked;\n        this.setState({ groupNotVisibleArr });\n    }\n    \n\n    //获取分组展开状态\n    getGroupContentVisible = (groupIndex) => {\n        return this.state.groupShowArr[groupIndex] || groupIndex >= this.state.groupShowArr.length; //新增分组后index会增加\n    }\n\n    //获取孙表展开状态\n    getGrandsonContentVisible = (grandsonIndex) => {\n        const { grandsonShowArr } = this.state.grandsonObj;\n        return grandsonShowArr[grandsonIndex] || grandsonIndex >= grandsonShowArr.length; //新增分组后index会增加\n    }\n\n    /**\n     * 非元数据拖拽到特殊区域的回调\n     *\n     * @monitor dropTarget的monitor\n     * @areaIndex 实际区域index\n     */\n    handleSpecialAreaDrop = (monitor, areaIndex) => {\n        const dragItem = monitor.getItem();\n        this.openAddNotMetaInArea();\n        this.setState({\n            realAreaIndex: areaIndex,\n            currentNotMeta: { datatype: dragItem.datatype }\n        });\n    }\n    \n    /**\n     * 检查区域是否在首尾\n     *\n     * @param type - 头部/尾部。必传\n     * @param index - 区域index。必传\n     * @param child - 子区域数据（分组/侧拉/孙表）。选传\n     */\n    checkAreaIsBeginOrEnd = ({ type, index, child }) => {\n        const currArea = this.props.areaList[index]; //当前区域\n        const notNullArea = this.props.newAreaList.filter(item => item !== null);\n        const firstArea = notNullArea[0];\n        const lastArea = notNullArea[notNullArea.length - 1];\n        const childType = child && Object.keys(child)[0];\n        const childArea = child && Object.values(child)[0];\n        const children = childType && this.props.areaItem[childType];\n        //检测区域在头部\n        if(type === 'begin'){\n            if (childArea) {\n                return children[0].pk_area === childArea.pk_area;\n            } else {\n                return firstArea.pk_area === currArea.pk_area;\n            }\n        }else if(type === 'end'){\n            //检测区域在尾部\n            if (childArea) {\n                return children[children.length - 1].pk_area === childArea.pk_area;\n            } else {\n                return lastArea.pk_area === currArea.pk_area;\n            }\n        }\n    }\n\n    //删除区域\n    handleDeleteArea = (areaId) => {\n        return new Promise(resolve => {\n            let deleteCallback;\n            const { areaItem, onDeleteArea } = this.props;\n            if (areaItem.groups && areaItem.groups.length > 0){\n                /* 国际化处理： 请注意修改分组的关联区域编码*/\n                deleteCallback = () => Notice({ status: \"warning\", msg: langCheck('ZoneSetting-000210', 'pages', this.props.json) });\n            }\n            onDeleteArea(areaId, deleteCallback);\n            this.props.updateSelectArea({});\n            resolve();\n        })\n    }\n\n    //封装新增区域方法 增加区域编码重复校验\n    addArea = (...args) => {\n        //区域编码重复\n        if (this.checkAreaCodeRepeat(this.props.areaList)) {\n            return false;\n        }\n        return addNewAreaItem.apply(this, args);\n    }\n\n    //展开卡片\n    handleToggleFoldForm = (e) => {\n        let { foldObj } = this.state;\n        let foldArea = this.props.areaItem.sides && this.props.areaItem.sides.find(item => item.areastatus === 'browse');\n        //区域编码重复\n        if (this.checkAreaCodeRepeat(this.props.areaList)) {\n            return;\n        }\n        if (!this.props.isImplement && !foldArea){\n            //没有展开卡片新增一个\n            foldArea = this.addArea(this.props, {\n                items: {\n                    areatype: '1',\n                    areastatus: 'browse',\n                    relationcode: this.props.areaItem.code\n                }\n            });\n            foldObj.emptyArea = _.cloneDeep(foldArea); //缓存新增的区域  \n        }\n        foldObj.foldShow = !foldObj.foldShow;\n        this.setState({ foldObj }, () => {\n            if (!this.state.foldObj.foldShow){\n                //新增的区域没做修改收起时删掉\n                if (!this.props.isImplement && _.isEqual(foldArea, this.state.foldObj.emptyArea)){\n                    this.handleDeleteArea(foldArea.pk_area);\n                }\n            }\n        });\n        this.selectAreaItem(e, foldArea);\n    }\n    \n    //展开侧拉\n    handleToggleSideForm = (e) => {\n        let { sideObj } = this.state;\n        const { areaItem } = this.props;\n        let sideArea = areaItem.sides && areaItem.sides.find(item => item.areastatus === 'edit');\n        const hasGrandsonArea = areaItem.grandsons && areaItem.grandsons.length > 0; //该子表有孙表\n        //没有侧拉新增一个侧拉区\n        if (!this.props.isImplement && !sideArea && !hasGrandsonArea) {\n            sideArea = this.addArea(this.props, {\n                items: {\n                    areatype: '1',\n                    areastatus: 'edit',\n                    relationcode: areaItem.code\n                }\n            });\n            sideObj.emptyArea = _.cloneDeep(sideArea); //缓存新增的区域  \n        }\n        if (sideArea || hasGrandsonArea) {\n            if (!sideArea) sideArea = areaItem; //没有侧拉时侧拉区域显示子表信息\n            sideObj.sideShow = !sideObj.sideShow;\n            this.setState({ sideObj }, () => {\n                if (sideObj.sideShow === true){\n                    this.selectAreaItem(e, sideArea);\n                }else{\n                    //新增的区域没做修改收起时删掉\n                    if (!this.props.isImplement && _.isEqual(sideArea, this.state.sideObj.emptyArea)) {\n                        this.handleDeleteArea(sideArea.pk_area);\n                    }\n                    this.props.updateSelectArea({});\n                }\n            });\n        }\n    }\n\n    //显示/隐藏孙表\n    handleToggleGrandson = (index) => {\n        let { grandsonObj } = this.state; \n        grandsonObj.grandsonShowArr[index] = !grandsonObj.grandsonShowArr[index];\n        this.setState({ grandsonObj });\n    }\n\n    //隐藏展开卡片不显示字段\n    handleFoldHideGray = e => {\n        let { foldObj } = this.state;\n        foldObj.foldNotVisible = e.target.checked;\n        this.setState({ foldObj });\n    }\n\n    //隐藏孙表不显示字段\n    handleGrandsonHideGray = (e, grandsonIndex) => {\n        let { grandsonObj } = this.state;\n        grandsonObj.grandsonNotVisibleArr[grandsonIndex] = e.target.checked;\n        this.setState({ grandsonObj });\n    }\n\n    //复制区域\n    copyArea = (copyItem, position) => {\n        const { templetid, code, metaid, metaname, queryPropertyList } = this.props.areaItem;\n        const queryPropertyListCopy = this.copyAreaProperty(queryPropertyList);\n        const commonAreaItemsCopy = {\n            relationcode: code,\n            templetid,\n            metaid,\n            metaname,\n            queryPropertyList: queryPropertyListCopy\n        }\n        let newItem = Object.assign(commonAreaItemsCopy, copyItem);\n        return this.addArea(this.props, {\n            items: newItem,\n            position\n        });\n    }\n\n    //复制字段\n    copyAreaProperty = (queryPropertyList) => {\n        let result = [];\n        //复制的字段\n        const newCopyItemArr = [\n            'areaid',\n            'code',\n            'datatype',\n            'label',\n            'metapath',\n            'color',\n            'isrevise',\n            'required',\n            'disabled',\n            'visible',\n            'maxlength',\n            'defaultvalue',\n            'hyperlinkflag',\n            'defaultvar',\n            'define1',\n            'define2',\n            'define3',\n            'itemtype',\n            'myrefpk'\n        ];\n        \n        queryPropertyList.forEach(copyItem => {\n            let newCopyObj = {};\n            newCopyItemArr.forEach(newItem => {\n                let newValue = copyItem[newItem] !== undefined ? copyItem[newItem] : '';\n                newCopyObj[newItem] = newValue;\n            });\n            newCopyObj.pk_query_property = ''; //清空字段主键\n            newCopyObj.areaid = ''; //清空区域id\n            result.push(newCopyObj);\n        });\n        return result;\n    }\n\n    //复制卡片\n    handleCopyFoldArea = (copyPosition) => {\n        const { areaItem } = this.props;\n        let { foldObj } = this.state;\n        //区域编码重复\n        if (this.checkAreaCodeRepeat(this.props.areaList)) {\n            return;\n        }\n        if (areaItem.sides && areaItem.sides.find(item => item.areastatus === 'browse')){\n            Notice({ status: \"warning\", msg: langCheck('ZoneSetting-000213', 'pages', this.props.json) });/* 国际化处理： 已经添加过展开卡片了*/\n            return;\n        }\n        const copyArea = this.copyArea({\n            areatype: '1',\n            areastatus: 'browse',\n            code: areaItem.code + '_01',\n            name: areaItem.name + '_01',\n        }, copyPosition);\n        if (copyArea){\n            foldObj.foldShow = true; //复制卡片后默认展开\n            this.setState({ foldObj });\n        }\n    }\n\n    //复制侧拉\n    handleCopySideArea = (copyPosition) => {\n        const { areaItem } = this.props;\n        let { sideObj } = this.state;\n        if (areaItem.sides && areaItem.sides.find(item => item.areastatus === 'edit')){\n            Notice({ status: \"warning\", msg: langCheck('ZoneSetting-000214', 'pages', this.props.json) });/* 国际化处理： 已经添加过展开侧拉了*/\n            return;\n        }\n        const copyArea = this.copyArea({\n            areatype: '1',\n            areastatus: 'edit',\n            code: areaItem.code + '_02',\n            name: areaItem.name + '_02',\n        }, copyPosition);\n        if (copyArea){\n            if (sideObj.sideShow === false){\n                sideObj.sideShow = true; //复制侧拉后默认展开\n                this.setState({ sideObj });\n            }\n        }\n    }\n\n    //新增孙表\n    handleAddGrandson = (e, position) => {\n        e.stopPropagation();\n        this.addArea(this.props, {\n            items: {\n                areatype: '2',\n                relationcode: this.props.areaItem.code,\n                isgrandson: true\n            },\n            position\n        });\n    }\n\n    //得到区域的className area：指定的区域 areaClassName：区域的className\n    getAreaItemCls = (area, areaClassName = \"area-item\") => {\n        if(!area) return;\n        const { selectedArea, selectCard } = this.props;\n        //选中区域\n        if (selectedArea && selectedArea.pk_area === area.pk_area){\n            areaClassName += \" active\";\n        } else if (selectCard && selectCard.areaid === area.pk_area){ //选中卡片\n            areaClassName += \" card-active\";\n        }\n        return areaClassName;\n    }\n    \n    /**\n     * 渲染头部按钮\n     *\n     * @type 头部类型 - area：区域 group：分组\n     * @params 按钮事件\n     */\n    renderHeaderBtns = (type = 'area', params = {}) => {\n        let { json, index, isImplement, areaItem, zoneFormData } = this.props;\n        const implementHideBtns = [\n            'onAddFormGroup', \n            'onCopySideArea',\n            'onCopyFoldArea',\n            'onMoveDown',\n            'onMoveUp',\n            'onAddGrandsonTable',\n            'onDelete'\n        ];\n        //实施态隐藏区域操作的按钮\n        if (isImplement) {\n            implementHideBtns.forEach(btn => delete params[btn]);\n        }\n        const buttonCls = `opr-btn ${type}-btn`;\n        let {\n            child,                  //子区域数据（分组、侧拉、孙表）\n            hasMeta,                //是否可以添加元数据\n            onHideGray,             //隐藏不显示属性\n            onAddMeta,              //新增元数据\n            onBatchSetting,         //批量设置\n            onAddFormGroup,         //新增分组\n            onCopySideArea,         //复制侧拉\n            onCopyFoldArea,         //复制卡片\n            onMoveDown,             //下移\n            onMoveUp,               //上移\n            onAddGrandsonTable,     //新增孙表\n            onDelete,               //删除\n        } = params;\n        // console.log({params})\n        const isFirstArea = this.checkAreaIsBeginOrEnd({ type: 'begin', index, child }); //是否第一个区域\n        const isLastArea = this.checkAreaIsBeginOrEnd({ type: 'end', index, child }); //是否最后一个区域\n        if (child !== undefined) index = this.getAreaIndexByPk(child);\n        return (\n            <span className=\"area-item-button\">\n                <Checkbox onChange={onHideGray} >\n                    <span className=\"link\">{langCheck('ZoneSetting-000013', 'pages', json)}</span>\n                    {/* /* 国际化处理： 隐藏不显示属性*/}\n                </Checkbox>\n                {\n                    hasMeta() ? \n                        <span><a onClick={onAddMeta}>{langCheck('ZoneSetting-000014', 'pages', json)}</a></span> /* 国际化处理： 新增元数据*/\n                        : \n                        <Tooltip placement=\"top\" title={langCheck('ZoneSetting-000203', 'pages', json)}> {/* 国际化处理：请先关联元数据*/}\n                            <a style={{color: '#b9b9b9'}}>{langCheck('ZoneSetting-000014', 'pages', json)}</a> {/* 国际化处理： 新增元数据*/}\n                        </Tooltip>\n                }\n                {/* <a onClick={this.openAddNotMetaInArea}>{langCheck('ZoneSetting-000004', 'pages', json)}</a> */}\n                {/* /* 国际化处理： 新增非元数据*/}\n                <a onClick={onBatchSetting}>{langCheck('ZoneSetting-000015', 'pages', json)}</a>\n                {/* /* 国际化处理： 批量设置*/}\n                {/* 表单区域显示新增分组 */}\n                {\n                    areaItem.code === (zoneFormData && zoneFormData.headcode) && onAddFormGroup && \n                    <span className={buttonCls} onClick={onAddFormGroup} style={{marginRight: 8}}>\n                        <i\n                            title={langCheck('ZoneSetting-000209', 'pages', json)} /* 国际化处理： 新增分组*/\n                            className=\"iconfont icon-xinzengfenzu\"\n                        />\n                    </span>\n                }\n                {\n                    (onCopySideArea && onCopyFoldArea) && \n                    <span className=\"btn-group body-btns\" style={{ marginRight: 8 }}>\n                        {/* 复制侧拉 */}\n                        {\n                            areaItem.code && onCopySideArea ?\n                                <span className={buttonCls} onClick={onCopySideArea}>\n                                    <i className=\"iconfont icon-fuzhicela\" title={langCheck('ZoneSetting-000211', 'pages', json)} /> {/* 国际化处理： 复制侧拉*/}\n                                </span>\n                                :\n                                <Tooltip className={buttonCls} placement=\"top\" title={langCheck('ZoneSetting-000221', 'pages', json)}> {/* 国际化处理：请先输入区域编码*/}\n                                    <span onClick={onCopySideArea}>\n                                        <i className=\"iconfont icon-fuzhicela disabled\" title={langCheck('ZoneSetting-000211', 'pages', json)} /> {/* 国际化处理： 复制侧拉*/}\n                                    </span>\n                                </Tooltip>\n                        }\n                        {/* 复制卡片 */}\n                        {\n                            areaItem.code && onCopyFoldArea ?\n                                <span className={buttonCls} onClick={onCopyFoldArea}>\n                                    <i className=\"iconfont icon-fuzhikapian\" title={langCheck('ZoneSetting-000212', 'pages', json)} /> {/* 国际化处理： 复制卡片*/}\n                                </span>\n                                :\n                                <Tooltip className={buttonCls} placement=\"top\" title={langCheck('ZoneSetting-000221', 'pages', json)}> {/* 国际化处理：请先输入区域编码*/}\n                                    <span onClick={onCopyFoldArea}>\n                                        <i className=\"iconfont icon-fuzhikapian disabled\" title={langCheck('ZoneSetting-000212', 'pages', json)} /> {/* 国际化处理： 复制卡片*/}\n                                    </span>\n                                </Tooltip>\n                        }\n                    </span>\n                }\n                <span className=\"btn-group\">\n                    {\n                        /* 下移 */\n                        onMoveDown && <span className={buttonCls} onClick={!isLastArea && onMoveDown}>\n                            <i\n                                title={langCheck('ZoneSetting-000189', 'pages', json)}\n                                className={`iconfont icon-xiangxia ${isLastArea ? 'disabled' : ''}`}\n                            />\n                        </span>\n                    }\n                    \n                    {\n                        /* 上移 */\n                        onMoveUp && <span className={buttonCls} onClick={!isFirstArea && onMoveUp} >\n                            <i\n                                title={langCheck('ZoneSetting-000188', 'pages', json)}\n                                className={`iconfont icon-xiangshang ${isFirstArea ? 'disabled' : ''}`}\n                            />\n                        </span>\n                    }\n                    {\n                        /* 新增孙表 */\n                        onAddGrandsonTable && <span className={buttonCls} onClick={onAddGrandsonTable} >\n                            <i\n                                title={langCheck('ZoneSetting-000218', 'pages', json)}\n                                className=\"iconfont icon-xinzengsunbiao\"\n                            />\n                        </span>\n                    }\n                    {/* 删除 */}\n                    {\n                        onDelete && \n                        <Popconfirm\n                            title={langCheck('ZoneSetting-000191', 'pages', json)} /* 国际化处理： 确定删除区域吗？*/\n                            onConfirm={onDelete}\n                            placement='topRight'\n                            getPopupContainer={() => document.getElementsByClassName(\"template-setting-page\")[0]}\n                            okText={langCheck('ZoneSetting-000005', 'pages', json)}\n                            cancelText={langCheck('ZoneSetting-000006', 'pages', json)}\n                        >\n                            <span className={buttonCls}>\n                                <i className=\"iconfont icon-shanchu\" title={langCheck('ZoneSetting-000190', 'pages', json)} />\n                            </span>\n                        </Popconfirm>\n                    }\n                </span>\n            </span>\n        )\n    }\n    //渲染区域头部\n    renderHeader = (type = 'area', params = {}) => {\n        const { json, areaItem } = this.props;\n        const {\n            headerTitle = areaItem.name, //区域描述有内容则显示区域描述\n            headerVisible = true,\n            contentVisible,\n            onToggleHeader,\n            onDrawerToggle, //侧拉收起\n            btnContainerStyle //按钮区样式\n        } = params;\n        const toggleBtn = contentVisible ? (\n            <i\n                title={langCheck('ZoneSetting-000011', 'pages', json)}/* 国际化处理： 收起*/\n                className=\"iconfont icon-bottom\"\n            ></i>\n        ) : (\n                <i\n                    title={langCheck('ZoneSetting-000012', 'pages', json)}/* 国际化处理： 展开*/\n                    className=\"iconfont icon-right\"\n                ></i>\n\n            )\n        return <div className={`area-item-header ${headerVisible ? 'show' : 'hide'}`}>\n            <div className=\"area-item-name-wrapper\" onClick={onToggleHeader}>\n                <span className=\"area-item-name\">\n                    {onToggleHeader && toggleBtn}\n                    {/* 区域描述有内容则显示区域描述 */}\n                    <span className=\"area-name\">{headerTitle}</span>\n                </span>\n            </div>\n            <div className=\"area-item-button-wrapper\" style={btnContainerStyle}>\n                {this.renderHeaderBtns(type, params)}\n            </div>\n            {\n                onDrawerToggle && <span className=\"drawer-close-btn\" onClick={onDrawerToggle}>\n                    <i className=\"iconfont icon-celashouqi\"></i>\n                </span>\n            }\n        </div>\n    };\n\n    //渲染表单区分组卡片\n    renderFormGroupCard = (item, groupIndex, cardIndex) => {\n        let { shouldHideGray, groupNotVisibleArr } = this.state;\n        const { areaItem } = this.props;\n        let group = areaItem.groups && areaItem.groups[groupIndex];\n        let areaIndex = this.getAreaIndexByPk(group);\n        shouldHideGray = groupNotVisibleArr[groupIndex];\n        return this.renderCard({\n            item, \n            cardIndex, \n            areaType: 'form', \n            areaIndex,\n            shouldHideGray\n        });\n    }\n\n    //渲染展开卡片区卡片\n    renderTableFoldCard = (item, foldIndex, cardIndex) => {\n        let fold = this.props.areaItem.sides && this.props.areaItem.sides[foldIndex];\n        let areaIndex = this.getAreaIndexByPk(fold);\n        return this.renderCard({\n            item,\n            cardIndex,\n            areaType: 'form',\n            areaIndex,\n            shouldHideGray: this.state.foldObj.foldNotVisible\n        });\n    }\n\n    //渲染孙表卡片\n    renderGrandsonCard = (item, grandsonIndex, cardIndex) => {\n        let grandson = this.props.areaItem.grandsons && this.props.areaItem.grandsons[grandsonIndex];\n        let areaIndex = this.getAreaIndexByPk(grandson);\n        return this.renderCard({\n            item,\n            cardIndex,\n            areaType: 'table',\n            areaIndex,\n            shouldHideGray: this.state.grandsonObj.grandsonNotVisibleArr[grandsonIndex]\n        });\n    }\n\n    /**\n     * 渲染card\n     *\n     * @item - queryPropertyList循环的item\n     * @areaItem - 区域的item\n     * @areaIndex - 区域的index\n     * @cardIndex - queryPropertyList循环的index\n     * @areaType - 卡片类型 search:查询字段 card:表单字段 table:表格字段\n     */\n    renderCard = ({\n        item, \n        areaIndex = this.props.index,\n        cardIndex, \n        areaType,\n        shouldHideGray = this.state.shouldHideGray\n    }) => (\n        <MyCard\n            index={cardIndex}\n            areaItem={this.props.areaItem}\n            areaIndex={areaIndex}\n            key={cardIndex}\n            shouldHideGray={shouldHideGray}\n            id={item.pk_query_property}\n            name={item.label}\n            areaid={this.props.areaItem.pk_area}\n            visible={item.visible}\n            color={item.color}\n            required={item.required}\n            // selectThisCard={this.selectThisCard}\n            moveCard={this.moveCard}\n            deleteCard={(cardIndex) => this.deleteCard(cardIndex, areaIndex)}\n            cardInfo={item}\n            areaType={areaType}\n            json={this.props.json}\n            isImplement={this.props.isImplement}\n        />\n    )\n\n    //渲染查询区\n    renderSearchArea = () => (\n        <ul className=\"area-item-content\" style={{ display: this.props.isShow ? \"block\" : \"none\" }}>\n            <div className=\"search-area-content\">\n                <div className=\"query-btn-area\">\n                    <Button className='ant-btn-primary'>\n                        <i className=\"iconfont icon-sousuo\" />\n                    </Button>\n                </div>\n                {this.props.areaItem.queryPropertyList.map(\n                    (item, index) => this.renderCard({\n                        item,\n                        cardIndex: index,\n                        areaType: 'search'\n                    })\n                )}\n            </div>\n        </ul>\n    )\n\n    //渲染表单区分组头部\n    renderGroupHeader = (group, groupIndex, btns) => {\n        const contentVisible = this.getGroupContentVisible(groupIndex);\n        return <div className=\"form-group-header\">\n            <span className=\"form-group-title\">\n                <span className=\"group-name\">{group.name}</span>\n                <i \n                    className={`iconfont ${contentVisible ? 'icon-shouqi' : 'icon-zhankai'}`} \n                    onClick={() => this.toggleFormGroup(groupIndex)}\n                ></i>\n            </span>\n            <div className=\"dashed-line\"></div>\n            <div className=\"group-btns\">{btns}</div>\n        </div>\n    }\n    \n    //渲染区域头部\n    renderAreaHeader = () => {\n        let { areaItem, areatype, id, index, onMoveArea } = this.props;\n        //复制卡片\n        const copyFold = e => {\n            e.stopPropagation();\n            if (!this.props.areaItem.code) return;\n            this.handleCopyFoldArea(index + 1);\n        }\n        //复制侧拉\n        const copySide = e => {\n            e.stopPropagation();\n            if(!this.props.areaItem.code) return;\n            this.handleCopySideArea(index + 1);\n        }\n        return this.renderHeader('area', {\n            headerVisible: true,\n            contentVisible: this.props.isShow,\n            onToggleHeader: this.showOrHideAreaItem,\n            hasMeta: () => areaItem.metaid,\n            btnContainerStyle: areatype === '2' ? { width: 485 } : {},\n            onHideGray: this.handleHideGray,\n            onAddMeta: () => this.addMetaInArea(),\n            onBatchSetting: () => this.openBatchSetting(),\n            onAddFormGroup: areatype === '1' && this.handleAddFormGroup,     //表单区显示添加分组按钮\n            onCopySideArea: areatype === '2' && copySide,   //表格区显示复制侧拉按钮   \n            onCopyFoldArea: areatype === '2' && copyFold,   //表格区显示复制卡片按钮\n            onMoveDown: () => onMoveArea('down', index),\n            onMoveUp: () => onMoveArea('up', index),\n            onDelete: () => this.handleDeleteArea(id)\n        });\n    }\n\n    //渲染表单区分组\n    renderFormGroup = (group, groupIndex) => {\n        const isActive = this.props.selectedArea && this.props.selectedArea.pk_area === group.pk_area;\n        const groupAreaIndex = this.getAreaIndexByPk(group); //分组对应的区域id\n        let { groupShowArr } = this.state;\n        const groupHeaderBtns = this.renderHeaderBtns('group', {\n            child: { groups: group},\n            headerVisible: isActive,\n            hasMeta: () => group.metaid,\n            onToggleHeader: () => this.toggleFormGroup(groupIndex),\n            onHideGray: (e) => this.handleGroupHideGray(e, groupIndex),\n            onAddMeta: () => this.addMetaInArea({\n                metaId: group.metaid,\n                areaId: group.pk_area,\n                areaType: group.areatype\n            }),\n            onBatchSetting: () => this.openBatchSetting(groupAreaIndex),\n            onAddFormGroup: (e) => this.handleAddFormGroup(e, groupAreaIndex + 1),\n            onMoveDown: () => this.props.onMoveFormGroup('down', groupAreaIndex),\n            onMoveUp: () => this.props.onMoveFormGroup('up', groupAreaIndex),\n            onDelete: () => this.props.onDeleteArea(group.pk_area)\n        });\n        const groupHeader = this.renderGroupHeader(group, groupIndex, groupHeaderBtns);\n        return <div ref={ref => this[`formGroupRef${groupIndex}`] = ref}>\n            <FormGroupArea\n                group={group}\n                groupIndex={groupIndex}\n                groupShowArr={groupShowArr}\n                isActive={isActive}\n                contentVisible={this.getGroupContentVisible(groupIndex)}\n                renderHeader={groupHeader}\n                renderCard={(item, index) => this.renderFormGroupCard(item, groupIndex, index)}\n                emptyText={langCheck('ZoneSetting-000226', 'pages', this.props.json)} /* 国际化处理：请将元数据、非元数据添加至此 */\n                onClick={e => this.selectAreaItem(e, group)}\n                onDrop={(monitor) => this.handleSpecialAreaDrop(monitor, groupAreaIndex)}\n            />\n        </div>\n    }\n\n    //渲染表单区\n    renderFormArea = () => {\n        const { areaItem } = this.props;\n        return <ul className=\"area-item-content\" style={{ display: this.props.isShow ? \"block\" : \"none\" }}>\n                <div className=\"form-area-content\">\n                {areaItem.queryPropertyList.map(\n                    (item, index) => this.renderCard({\n                        item,\n                        cardIndex: index,\n                        areaType: 'form'\n                    })\n                )}\n                </div>\n                {\n                    areaItem.groups && areaItem.groups.map((group, index) => {\n                        return this.renderFormGroup(group, index);\n                    })\n                }\n            </ul>\n        \n    }\n\n    //渲染表格区展开侧拉 onlyGrandson:是否有孙表（有孙表无侧拉渲染子表）\n    renderTableSide = (side, sideIndex, onlyGrandson) => {\n        const { sideShow } = this.state.sideObj;\n        const isActive = this.props.selectedArea && this.props.selectedArea.pk_area === side.pk_area;\n        const sideAreaIndex = !onlyGrandson ? this.getAreaIndexByPk(side) : sideIndex; //展开侧拉对应的区域id\n        const sideHeader = this.renderHeader('area', {\n            headerTitle: side.name,\n            hasMeta: () => side.metaid,\n            btnContainerStyle: { width: 380 },\n            onHideGray: this.handleFoldHideGray,\n            onAddMeta: () => this.addMetaInArea({\n                metaId: side.metaid,\n                areaId: side.pk_area,\n                areaType: side.areatype\n            }),\n            onBatchSetting: () => this.openBatchSetting(sideAreaIndex),\n            onAddGrandsonTable: this.handleAddGrandson,\n            onDelete: () => {\n                this.handleDeleteArea(side.pk_area)\n                    .then(() => {\n                        let { sideObj } = this.state;\n                        sideObj.sideShow = false; //删除后收起侧拉\n                        this.setState({ sideObj });\n                    });\n            },\n            onDrawerToggle: this.handleToggleSideForm\n        });\n        const sideCard = (item, index) => this.renderTableFoldCard(item, sideIndex, index);\n        return (\n            <TableDrawerArea\n                areaClassName={this.getAreaItemCls(side)}\n                side={side}\n                isActive={isActive}\n                sideIndex={sideIndex}\n                renderHeader={sideHeader}\n                renderCard={sideCard}\n                visible={sideShow}\n                onClick={e => this.selectAreaItem(e, side)}\n                onDrop={(monitor) => this.handleSpecialAreaDrop(monitor, sideAreaIndex)}\n            >\n                {/* 这里写孙表 */}\n                {() => (\n                    <div className=\"grandson-content\">\n                        {\n                            this.props.areaItem.grandsons && this.props.areaItem.grandsons.map((grandson, index) => {\n                                return this.renderGrandsonArea(grandson, index);\n                            })\n                        }\n                    </div>\n                )}\n            </TableDrawerArea>\n        )\n    }\n\n    //渲染表格区展开区域\n    renderTableFold = (fold, foldIndex) => {\n        const { foldShow } = this.state.foldObj;\n        const isActive = this.props.selectedArea && this.props.selectedArea.pk_area === fold.pk_area;\n        const foldAreaIndex = this.getAreaIndexByPk(fold); //展开卡片对应的区域id\n        const foldHeader = this.renderHeader('area', {\n            headerTitle: fold.name,\n            contentVisible: foldShow,\n            btnContainerStyle: { width: 355 },\n            hasMeta: () => fold.metaid,\n            onToggleHeader: this.handleToggleFoldForm,\n            onHideGray: this.handleFoldHideGray,\n            onAddMeta: () => this.addMetaInArea({\n                metaId: fold.metaid,\n                areaId: fold.pk_area,\n                areaType: fold.areatype\n            }),\n            onBatchSetting: () => this.openBatchSetting(foldAreaIndex),\n            onDelete: () => {\n                this.handleDeleteArea(fold.pk_area)\n                    .then(() => {\n                        let { foldObj } = this.state;\n                        foldObj.foldShow = false; //删除后收起卡片\n                        this.setState({ foldObj });\n                    });\n            }\n        });\n        const foldCard = (item, index) => this.renderTableFoldCard(item, foldIndex, index);\n        const foldCls = this.getAreaItemCls(fold, \"\");\n        return <div className={`table-fold-area ${foldCls}`}>\n            <TableFoldArea\n                fold={fold}\n                foldIndex={foldIndex}\n                isActive={isActive}\n                renderHeader={foldHeader}\n                renderCard={foldCard}\n                visible={foldShow}\n                onClick={e => this.selectAreaItem(e, fold)}\n                onDrop={(monitor) => this.handleSpecialAreaDrop(monitor, foldAreaIndex)}\n            />\n        </div>\n    }\n\n    //渲染孙表区域\n    renderGrandsonArea = (grandson, grandsonIndex) => {\n        const isActive = this.props.selectedArea && this.props.selectedArea.pk_area === grandson.pk_area;\n        const grandsonAreaIndex = this.getAreaIndexByPk(grandson); //展开侧拉对应的区域index\n        const contentVisible = this.getGrandsonContentVisible(grandsonIndex);\n        const grandsonHeader = this.renderHeader('area', {\n            child: { grandsons:grandson },\n            headerTitle: grandson.name,\n            hasMeta: () => grandson.metaid,\n            contentVisible,\n            onToggleHeader: () => this.handleToggleGrandson(grandsonIndex),\n            onHideGray: (e) => this.handleGrandsonHideGray(e, grandsonIndex),\n            onAddMeta: () => this.addMetaInArea({\n                metaId: grandson.metaid,\n                areaId: grandson.pk_area,\n                areaType: grandson.areatype\n            }),\n            onBatchSetting: () => this.openBatchSetting(grandsonAreaIndex),\n            onAddGrandsonTable: (e) => this.handleAddGrandson(e, grandsonAreaIndex + 1),\n            onMoveDown: () => this.props.onMoveGrandson('down', grandsonAreaIndex, grandson),\n            onMoveUp: () => this.props.onMoveGrandson('up', grandsonAreaIndex, grandson),\n            onDelete: () => this.handleDeleteArea(grandson.pk_area)\n        });\n        const grandsonCard = (item, index) => this.renderGrandsonCard(item, grandsonIndex, index);\n        \n        return <GrandsonArea\n                areaClassName={this.getAreaItemCls(grandson)}\n                grandson={grandson}\n                grandsonIndex={grandsonAreaIndex}\n                isActive={isActive}\n                contentVisible={contentVisible}\n                renderHeader={grandsonHeader}\n                renderCard={grandsonCard}\n                isImplement={this.props.isImplement}\n                onClick={e => this.selectAreaItem(e, grandson)}\n                onDrop={(monitor) => this.handleSpecialAreaDrop(monitor, grandsonAreaIndex)}\n                onDragArea={this.props.onDragArea}\n            />\n    }\n\n    //渲染表格区\n    renderTableArea = () => {\n        const { areaItem } = this.props;\n        let drawerArea = areaItem.sides && [...areaItem.sides];\n        if (areaItem.grandsons){\n            drawerArea = [...drawerArea, ...areaItem.grandsons];\n        }\n        return <ul className=\"area-item-content\" style={{ display: this.props.isShow ? \"block\" : \"none\" }}>\n            <div className=\"table-area-content\" style={this.hideTableOprCol() ? { marginRight: 0 } : { marginRight: this.state.oprWidth}}>\n                {this.renderTableOperateCol()}\n                {this.props.areaItem.queryPropertyList.map(\n                    (item, index) => this.renderCard({\n                        item,\n                        cardIndex: index,\n                        areaType: 'table'\n                    })\n                )}\n            </div>\n            {\n                drawerArea && drawerArea.map((side, index) => {\n                    const sideArea =  drawerArea.find(item => item.areastatus === 'edit' && item.isgrandson !== true);\n                    //只有孙表也渲染侧拉区域\n                    if (side.isgrandson === true){\n                        if (!sideArea){\n                            return this.renderTableSide(areaItem, this.props.index, true);\n                        }\n                    }else{\n                        if (side.areastatus === 'browse') { //展开卡片\n                            return this.renderTableFold(side, index);\n                        } else if (side.areastatus === 'edit'){ //侧拉编辑\n                            return this.renderTableSide(side, index);\n                        }\n                    }\n                })\n            }\n        </ul>\n    }\n    \n    //渲染表格区操作列\n    renderTableOperateCol = () => {\n        const { areaItem, json, isImplement } = this.props;\n        const foldText = this.state.foldObj.foldShow ? \n            langCheck('ZoneSetting-000217', 'pages', json) : /* 国际化处理：收起卡片 */\n            langCheck('ZoneSetting-000215', 'pages', json);  /* 国际化处理：展开卡片 */\n        let renderSide = () => {\n            //模板设置没有侧拉隐藏掉展开侧拉按钮\n            if(isImplement && (areaItem.sides && !areaItem.sides.find(item => item.areastatus === 'edit')) && (!areaItem.grandsons || areaItem.grandsons.length === 0)){\n                return null;\n            }else if(areaItem.code){\n                return <span className=\"btn-link\" style={{ marginRight: 20 }} onClick={this.handleToggleSideForm}>\n                    {/* 国际化处理： 展开侧拉*/}\n                    {langCheck('ZoneSetting-000216', 'pages', json)}\n                </span>\n            }else{\n                return <Tooltip placement=\"top\" title={langCheck('ZoneSetting-000221', 'pages', json)}> {/* 国际化处理：请先输入区域编码*/}\n                    <span className=\"btn-link disabled\" style={{ marginRight: 20 }}>\n                        {/* 国际化处理： 展开侧拉*/}\n                        {langCheck('ZoneSetting-000216', 'pages', json)}\n                    </span>\n                </Tooltip>\n            }\n        }\n        let renderFold = () => {\n            //模板设置没有侧拉隐藏掉展开卡片按钮\n            if(isImplement && (areaItem.sides && !areaItem.sides.find(item => item.areastatus === 'browse'))){\n                return null;\n            }else if(areaItem.code){\n                return <span className=\"btn-link\" onClick={this.handleToggleFoldForm}>{foldText}</span>; /* 国际化处理： 展开卡片*/\n            }else{\n                return <Tooltip placement=\"top\" title={langCheck('ZoneSetting-000221', 'pages', json)}> {/* 国际化处理：请先输入区域编码*/}\n                        <span className=\"btn-link disabled\">{foldText}</span>\n                    </Tooltip>\n            }\n        }\n        //模板设置没设置展开侧拉/卡片隐藏操作列\n        if(this.hideTableOprCol()){\n            return null;\n        }\n        return <div className=\"operate-col\" ref={ref => this.oprColRef = ref}>\n            <li className=\"property-item table-content normal-card\">\n                <div className=\"table-item\">\n                    <div className=\"item-name\">\n                        <span className=\"title\">{langCheck('ZoneSetting-000225', 'pages', json)}</span> {/* 国际化处理： 操作*/}\n                    </div>\n                    <div className=\"item-content oper-col-content\">\n                        {renderSide()}\n                        {renderFold()}\n                    </div>\n                </div>\n            </li>\n        </div>\n    }\n\n    //校验是否显示表格区操作列\n    hideTableOprCol = () => {\n        const { areaItem, isImplement } = this.props;\n        //有孙表不隐藏操作列\n        if(areaItem.grandsons && areaItem.grandsons.length > 0){\n            return false;\n        }else{\n            return isImplement && (!areaItem.sides || areaItem.sides && areaItem.sides.length === 0);\n        }\n    }\n    //渲染区域\n    renderAreaContent = () => {\n        let areaContent;\n        switch (this.props.areaItem.areatype) {\n            case '0': //查询区\n                areaContent = this.renderSearchArea();\n                break;\n            case '1': //表单区\n                areaContent = this.renderFormArea();\n                break;\n            case '2': //表格区\n                areaContent = this.renderTableArea();\n                break;\n            default:\n                break;\n        }\n        return areaContent;\n    }   \n    render() {\n        const { connectDragSource, connectDropTarget, areaList, index } = this.props;\n        let areaClassName = this.getAreaItemCls(this.props.areaItem);\n        const areaStyle = areaList[index] && areaList[index].validate === false ? { borderColor: '#f5222d'} : {};\n        return connectDragSource(\n                connectDropTarget(\n                    <div className={areaClassName} onClick={this.selectAreaItem} style={areaStyle}>\n                        {this.renderAreaHeader()}\n                        {this.renderAreaContent()}\n                        {\n                            this.state.batchSettingModalVisibel && \n                            <BatchSettingModal\n                                batchSettingModalVisibel={\n                                    this.state.batchSettingModalVisibel\n                                }\n                                areaIndex={this.state.realAreaIndex}\n                                setModalVisibel={this.setModalVisibel}\n                                json={this.props.json}\n                            />\n                        }\n                        <AddNotMetaDataModal\n                            areatype={this.props.areatype}\n                            addDataModalVisibel={this.state.addDataModalVisibel}\n                            areaIndex={this.state.realAreaIndex}\n                            setAddDataModalVisibel={this.setAddDataModalVisibel}\n                            json={this.props.json}\n                            propperty={this.state.currentNotMeta}\n                        />\n                    </div>\n                )\n            );\n    }\n}\nexport default connect(\n    state => ({\n        selectedArea: state.zoneSettingData.selectedArea,\n        areaList: state.zoneSettingData.areaList,\n        newAreaList: state.zoneSettingData.newAreaList,\n        selectCard: state.zoneSettingData.selectCard,\n        zoneFormData: state.zoneSettingData.zoneFormData\n    }),\n    {\n        updateSelectCard,\n        updateSelectArea,\n        updateBatchSource,\n        updateAreaList\n    }\n)(AreaItem);\n","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","import { DragSource, DropTarget } from 'react-dnd';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateSelectArea, updateSelectCard } from \"Store/ZoneSetting/action\";\nimport { getItemTypeCom } from './createCard';\nimport { removeSelectCardCls } from './events';\nimport { langCheck } from 'Pub/js/utils';\nimport Notice from \"Components/Notice\";\nimport _ from \"lodash\";\n//卡片属性组件类\nconst cardSource = {\n\tbeginDrag(props) {\n\t\treturn {\n\t\t\tid: props.id,\n\t\t\tindex: props.index,\n\t\t\tareaIndex: props.areaIndex\n\t\t};\n\t},\n\tisDragging(props, monitor) {\n\t\t// If your component gets unmounted while dragged\n\t\t// (like a card in Kanban board dragged between lists)\n\t\t// you can implement something like this to keep its\n\t\t// appearance dragged:\n\t\treturn monitor.getItem().id === props.id;\n\t}\n};\n\nconst cardTarget = {\n\thover(props, monitor, component) {\n\t\tconst dragIndex = monitor.getItem().index;\n\t\tconst hoverIndex = props.index;\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex) {\n\t\t\treturn;\n\t\t}\n\t},\n\tdrop(props, monitor, component) {\n\t\tconst item = monitor.getItem();\n\t\tconst dropIndex = props.index;\n\t\tif (monitor.didDrop() || item.index === dropIndex || item.areaIndex !== props.areaIndex) {\n\t\t\t// If you want, you can check whether some nested\n\t\t\t// target already handled drop\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tprops.moveCard(item.index, dropIndex, props.areaIndex);\n\t}\n};\n\n@DropTarget('card', cardTarget, (connect, monitor) => ({\n\tconnectDropTarget: connect.dropTarget(),\n\tisOver: monitor.isOver()\n}))\n@DragSource('card', cardSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n\tisDragging: monitor.isDragging()\n}))\nclass MyCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tradioSelectedValue: \"\", //单选框选中值\n\t\t\tpasswordValue: \"\" //密码框值\n\t\t};\n\t}\n\n\tshouldComponentUpdate(nextProps,nextState) {\n\t\t//选中卡片不渲染\n\t\tif(!_.isEqual(nextProps.selectCard, this.props.selectCard)){\n\t\t\treturn false;\n\t\t}\n\t\t//隐藏不显示属性渲染\n\t\tif(nextProps.shouldHideGray !== this.props.shouldHideGray){\n\t\t\treturn true;\n\t\t}\n\t\t//改变区域类型时渲染\n\t\tif (nextProps.areaItem.areatype !== this.props.areaItem.areatype) {\n\t\t\treturn true;\n\t\t}\n\t\t//拖拽当前卡片不渲染其他区域卡片\n\t\t// 这里有个问题：放下后会阻止拖拽元素的isDragging变为false\n\t\t// if (_.isEqual(nextProps.areaItem.queryPropertyList, this.props.areaItem.queryPropertyList)\n\t\t// \t&& nextProps.areaItem.pk_area !== this.props.selectCard.areaid){\n\t\t// // if (_.isEqual(nextProps.areaItem.queryPropertyList, this.props.areaItem.queryPropertyList)){\n        //     return false;\n        // }\n\t\treturn true;\n\t}\n\n\t//删除该卡片\n\tdeleteCard = (e) => {\n\t\te.stopPropagation();\n\t\tlet thisCard = this.props.areaList[this.props.areaIndex].queryPropertyList[this.props.index];\n\t\t//实施态查询区勾选固定条件时不能删除字段\n\t\tif (this.props.isImplement && thisCard.isfixedcondition == true) {\n\t\t\tNotice({ status: \"warning\", msg: langCheck('ZoneSetting-000231', 'pages', this.props.json) }); /* 国际化处理： 勾选为固定条件不能删除*/\n\t\t} else {\n\t\t\tthis.props.deleteCard(this.props.index);\n\t\t}\n\t};\n\t//选择该卡片\n\tselectThisCard = (e) => {\n\t\te.stopPropagation();\n\t\tthis.updateThisCard(e);\n\t\tif (!_.isEmpty(this.props.selectedArea)) this.props.updateSelectArea({}); //选中卡片时清空选中区域\n\t};\n\n\t//更新所选卡片数据\n\tupdateThisCard = (e) => {\n\t\tlet { areaList, areaIndex, index } = this.props;\n\t\tlet card = areaList[areaIndex].queryPropertyList[index];\n\t\tthis.updateActiveCardCls(e);\n\t\tthis.props.updateSelectCard(card);\n\t};\n\n\t//更新选中卡片className\n\tupdateActiveCardCls = e => {\n\t\tremoveSelectCardCls();\n\t\te && e.currentTarget && e.currentTarget.classList.add(\"select-card\");\n\t}\n\n\t//获得卡片样式的className名\n\tgetCardClassName = () => {\n\t\tconst { selectCard, required, id, areaid } = this.props;\n\t\tlet result = '';\n\t\tif (required) {\n\t\t\tresult = ' required-card';\n\t\t}\n\t\tif (selectCard.pk_query_property === id && selectCard.areaid === areaid) {\n\t\t\tresult = `select-card${result}`;\n\t\t} \n\t\telse {\n\t\t\tresult = `normal-card${result}`;\n\t\t}\n\t\treturn result;\n\t};\n\n\t//渲染卡片字段\n\trenderCard = ({ opacity, showName }) => {\n\t\tconst { areaType, color, cardInfo, visible, selectCard, isOver, json } = this.props;\n\t\tconst myClassName = this.getCardClassName();\n\t\tconst prefix = areaType !== 'table' ? 'card' : areaType;\n\t\tconst cardProps = { ...cardInfo, onClick: this.selectThisCard };\n\t\tconst hoverCls = isOver ? ' hover' : '';\n\t\tlet tableColWidth = {}; \n\t\t//根据组件长度改变表格区列宽度\n\t\tif (cardInfo.pk_form_property === selectCard.pk_form_property && prefix === 'table' && !isNaN(selectCard.width)){\n\t\t\ttableColWidth.minWidth = `${selectCard.width}px`;\n\t\t\tif (selectCard.width && +selectCard.width < 120){\n\t\t\t\ttableColWidth.minWidth = 120;\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<li className={`property-item ${prefix}-content ${myClassName}${hoverCls}`} style={{ opacity: opacity }} onClick={this.selectThisCard}>\n\t\t\t\t<div style={{ color: color }} className={`${prefix}-item`} title={showName} style={tableColWidth}>\n\t\t\t\t\t{\n\t\t\t\t\t\tareaType !== 'search' && \n\t\t\t\t\t\t<div className=\"item-name\">\n\t\t\t\t\t\t\t<span className=\"title\">{showName}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"item-content\">{getItemTypeCom.call(this, cardProps, areaType, json)}</div>\n\t\t\t\t\t<span className='delete-card' onClick={this.deleteCard}> x </span>\n\t\t\t\t\t{!visible && <span className=\"hidden-tag\"></span>}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t)\n\t}\n\t\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\tvisible,\n\t\t\tshouldHideGray,\n\t\t\tisDragging,\n\t\t\tconnectDragSource,\n\t\t\tconnectDropTarget\n\t\t} = this.props;\n\t\tconsole.log('render card')\n\t\t// const opacity = visible ? 1 : 0.5;\n\t\tconst opacity = isDragging ? 0.3 : visible ? 1 : 0.6;\n\t\tconst showName = _.isEmpty(name) ? String.fromCharCode(160) : name;\n\t\tif(shouldHideGray===true && visible===false){\n\t\t\treturn null;\n\t\t}\n\t\treturn connectDragSource(\n\t\t\tconnectDropTarget(this.renderCard({ opacity, showName }))\n\t\t);\n\t}\n}\nexport default connect(\n\t(state) => ({\n\t\tselectCard: state.zoneSettingData.selectCard,\n\t\tselectedArea: state.zoneSettingData.selectedArea,\n\t\tareaList: state.zoneSettingData.areaList,\n\t}),\n\t{ \n\t\tupdateSelectArea,\n\t\tupdateSelectCard\n\t}\n)(MyCard);\n","import React, { Component, PureComponent } from \"react\";\r\nimport platform from \"Pub/js/platform\";\r\nimport { createScript } from \"./utilService\";\r\nconst { base, high } = platform;\r\nconst { \r\n    NCInput, \r\n    NCFormControl,\r\n    NCRadio, \r\n    NCCheckbox, \r\n    NCSelect, \r\n    NCSwitch,\r\n    NCDatePicker, \r\n    NCNumber, \r\n    NCBetweenNum, \r\n    NCTextArea,\r\n    NCTZDatePickerStart,\r\n    NCTZDatePickerRangeDay,\r\n    NCTZDatePickClientHourTime,\r\n    NCTZDatePickClientTime,\r\n    NCTimepicker,\r\n    NCTZDatePickerEnd,\r\n    NCDatePickerNoTimeZone\r\n} = base;\r\nconst { Refer } = high;\r\nconst RadioGroup = NCRadio.NCRadioGroup;\r\nconst Option = NCSelect.NCOption;\r\n\r\n/**\r\n * 渲染区域字段类型\r\n *\r\n * @param {*} item - 字段属性\r\n * @param {*} type - 区域类型\r\n * @param {*} multiLang - 多语\r\n * @returns\r\n */\r\nexport function getItemTypeCom(item, type, multiLang) {\r\n    const { disabled, label, onClick } = item;\r\n    const showSelectArr = ['radio', 'checkbox_switch', 'checkbox', 'switch_browse', 'switch']; //查询区需要显示成select的字段\r\n    let itemDisabled = item.disabled;\r\n    let itemOptions = item.datatype === '32' ? \r\n        [`${multiLang['ZoneSetting-000229']}=Y`, `${multiLang['ZoneSetting-000230']}=N`] \r\n        : item.showdataval && item.showdataval.split(\",\"); //逻辑options为是否\r\n    const commonProps = {\r\n        disabled,\r\n        placeholder: type === 'search' && label, //查询区字段增加placeholder\r\n        onClick\r\n    }\r\n    let result = {\r\n        input: (<NCInput onChange={() => { }} {...commonProps} />),\r\n        residtxt: (<NCInput onChange={() => { }} {...commonProps} />), //多语文本\r\n        password: (\r\n            <NCFormControl\r\n                value={this.state.passwordValue}\r\n                onChange={val => this.setState({ passwordValue: val.split(\"\").fill(\"●\").join(\"\") })} //将输入的内容填充成●\r\n                {...commonProps}\r\n            />),// 这里不用密码框是因为原生密码框不能拖拽\r\n        label: (<NCFormControl isViewMode={true} {...commonProps}/>),\r\n        number: (() => {\r\n            let scale = -1;\r\n            if (item.queryOperateType === \"between\") {\r\n                return (\r\n                    <NCBetweenNum\r\n                        start={{\r\n                            scale: Number(scale),\r\n                            max: item.max,\r\n                            min: item.min,\r\n                            placeholder: \"起始\"\r\n                        }}\r\n                        end={{\r\n                            scale: Number(scale),\r\n                            max: item.max,\r\n                            min: item.min,\r\n                            placeholder: \"结束\"\r\n                        }}\r\n                    />\r\n                );\r\n            } else {\r\n                return (\r\n                    <NCNumber\r\n                        max={item.max}\r\n                        min={item.min}\r\n                        suffix={item.suffix}\r\n                        scale={Number(scale)}\r\n                        formNumber={true}\r\n                        {...commonProps}\r\n                    />\r\n                );\r\n            }\r\n        })(),\r\n        textarea: (<NCTextArea style={{ resize: 'none' }} {...commonProps} />),\r\n        radio: (() => {\r\n            let radioItem = <NCRadio\r\n                color=\"info\"\r\n                disabled={itemDisabled}\r\n            />\r\n            if (itemOptions && itemOptions.length > 0){\r\n                radioItem = itemOptions.map((item, i) => {\r\n                    let ops = item.indexOf(\"=\") > 0 ? item.split(\"=\") : [];\r\n                    return (\r\n                        <NCRadio\r\n                            color=\"info\"\r\n                            disabled={itemDisabled}\r\n                            value={ops[1]}\r\n                            key={i}\r\n                        >\r\n                            {ops[0]}\r\n                        </NCRadio>\r\n                    );\r\n                })\r\n            }\r\n            return <RadioGroup\r\n                selectedValue={this.state.radioSelectedValue}\r\n                onChange={val => this.setState({ radioSelectedValue: val })}\r\n            >\r\n                {radioItem}\r\n            </RadioGroup>\r\n        })(),\r\n        checkbox_switch: (\r\n            <NCCheckbox\r\n                className=\"single-checkbox\"\r\n                disabled={itemDisabled}\r\n                colors=\"primary\"\r\n                type=\"switch\"\r\n            />\r\n        ),\r\n        checkbox: (() => {\r\n            if (itemOptions){\r\n                return itemOptions && itemOptions.map((item, i) => {\r\n                    let ops = item.indexOf(\"=\") > 0 ? item.split(\"=\") : [];\r\n                    return <NCCheckbox\r\n                        disabled={itemDisabled}\r\n                        colors=\"primary\"\r\n                        // checked={e.checked}\r\n                        key={i}\r\n                    >\r\n                        {ops[0]}\r\n                    </NCCheckbox>\r\n                })\r\n                \r\n            }else{\r\n                return <NCCheckbox\r\n                    className=\"single-checkbox\"\r\n                    disabled={itemDisabled}\r\n                    colors=\"primary\"\r\n                />\r\n            }\r\n        })(),\r\n        NCTZDatePickerStart: (<div className=\"item-wrapper\"><NCTZDatePickerStart {...commonProps} /></div>),\r\n        NCTZDatePickerRangeDay: (\r\n            <div className=\"item-wrapper\">\r\n                <NCTZDatePickerRangeDay  \r\n                    format={item.format || \"YYYY-MM-DD HH:mm:ss\"} \r\n                    {...commonProps}\r\n                />\r\n            </div>\r\n        ),\r\n        NCTZDatePickClientHourTime: (\r\n            <div className=\"item-wrapper\">\r\n                <NCTZDatePickClientHourTime\r\n                    format={item.format || 'YYYY-MM-DD HH:mm:ss'}\r\n                    {...commonProps}\r\n                />\r\n            </div>\r\n        ),\r\n        datetimepicker: (<div className=\"item-wrapper\"><NCTZDatePickClientTime {...commonProps} /></div>),\r\n        timepicker: (<div className=\"item-wrapper\"><NCTimepicker format={\"HH:mm:ss\"} {...commonProps} /></div>),\r\n        NCTZDatePickerEnd: (<div className=\"item-wrapper\"><NCTZDatePickerEnd {...commonProps} /></div>),\r\n        datePickerNoTimeZone: (<div className=\"item-wrapper\"><NCDatePickerNoTimeZone {...commonProps}/></div>),\r\n        select: (\r\n            <div className=\"item-wrapper\">\r\n                <NCSelect\r\n                    multiple={!!item.isMultiSelectedEnabled}\r\n                    labelInValue={true}\r\n                    {...commonProps}\r\n                >\r\n                    {itemOptions &&\r\n                        itemOptions.map((item, i) => {\r\n                            let ops = item.indexOf(\"=\") > 0 ? item.split(\"=\") : [];\r\n                            return <Option\r\n                                title={ops[0]}\r\n                                value={ops[1]}\r\n                                key={i}\r\n                            >\r\n                                {ops[0]}\r\n                            </Option>\r\n                        })}\r\n                </NCSelect>\r\n            </div>\r\n        ),\r\n        datepicker: (<div className=\"item-wrapper\"><NCDatePicker {...commonProps} /></div>),\r\n        switch_browse: (<NCSwitch disabled={itemDisabled} />),\r\n        switch: (<NCSwitch disabled={itemDisabled}/>),\r\n        refer: (<BaseRefer item={item} {...commonProps}/>)\r\n    };\r\n    let newItemType = type === 'search' && showSelectArr.includes(item.itemtype) ? 'select' : item.itemtype; //查询区枚举显示成下拉\r\n    return result[newItemType];\r\n}\r\nclass BaseRefer extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultvalueObj: {}\r\n        };\r\n    }\r\n\r\n    renderRefer = () => {\r\n        const { item, ...otherProps } = this.props;\r\n        const { refcode } = this.props.item;\r\n        if (this.state[`myRefDom${refcode}`]) {\r\n            //参照的特殊写法，有问题联系艺轩\r\n            const myRefDom = this.state[`myRefDom${refcode}`];\r\n            const tmpRefDom = myRefDom();\r\n            return (\r\n                <Refer\r\n                    foolValue={this.state.defaultvalueObj}\r\n                    onChange={(ref, foolValue) => {\r\n                        this.setState({\r\n                            defaultvalueObj: foolValue\r\n                            // defaultvalueObj: {...ref, ...foolValue}//艺轩参照传值\r\n                        });\r\n                    }}\r\n                    showHistory={false}\r\n                    {...tmpRefDom.props}\r\n                    {...otherProps}\r\n                />\r\n            );\r\n        } else {\r\n            //参照默认取值相对路径改为绝对路径\r\n            createScript.call(this, `${refcode}`);\r\n        }\r\n    }\r\n    //渲染虚拟参照\r\n    renderFakeRefer = () => (\r\n        <div\r\n            className={`refer-wrapper ${this.props.disabled ? 'refer-wrapper-disabled' : ''}`}\r\n            onMouseEnter={this.renderRefer}\r\n        >\r\n            <div className=\"refer\" style={{ backgroundColor: window.top.nccColor == 'black' ? 'unset' : this.props.disabled ? '#f3f3f3': '#fff' }}>\r\n                <div className=\"u-form-control-wrapper\">\r\n                    <input type=\"text\" class=\"nc-input refer-input u-form-control md\" placeholder={this.props.placeholder} disabled={this.props.disabled}/>\r\n                </div>\r\n                <i className=\"icon-refer\" style={{ cursor: 'pointer' }}></i>\r\n            </div>\r\n            {/* 加载参照 */}\r\n        </div>\r\n    )\r\n\r\n    render(){\r\n        const { item } = this.props;\r\n        let finalRefer;\r\n        if (item.visible){ //显示的属性加载参照\r\n            finalRefer = item.refcode ? this.renderRefer() : this.renderFakeRefer();\r\n        }else {\r\n            if(this.state[`myRefDom${item.refcode}`]){ //加载隐藏属性的参照\r\n                finalRefer = this.renderRefer();\r\n            }else{ //隐藏的属性默认不加载参照\r\n                finalRefer = this.renderFakeRefer();\r\n            }\r\n        }\r\n        //解决有refcode仍然没有加载参照的问题\r\n        if (!finalRefer) finalRefer = this.renderFakeRefer();\r\n        return <div>{finalRefer}</div>\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport { updateAreaList, updateBatchSource } from \"Store/ZoneSetting/action\";\r\nimport BatchTable from \"./batchTable\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\n//批量设置模态框组件类\r\nclass BatchSettingModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageSize = 30; //一次加载多少条数据\r\n        this.currentPage = 1; //当前页数\r\n        this.totalPage = Math.ceil(this.props.batchSource.length / this.pageSize); //总页数\r\n        this.state = {\r\n            newSource: []\r\n        };\r\n        this.checkAllCheckedObj = {}; //存放全选checkbox选中状态\r\n    }\r\n    componentDidMount() {\r\n        //这里做一下优化，首次加载默认显示前30条数据，剩余数据通过懒加载加载\r\n        let firstBatchSource = this.props.batchSource.slice(0, this.pageSize);\r\n        this.setState({ newSource: firstBatchSource });\r\n    }\r\n    //模态框显示时，进行数据初始化\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.batchSettingModalVisibel !== true) {\r\n            return;\r\n        } else {\r\n            // this.setState({ newSource: areaList[areaIndex].queryPropertyList }); //old\r\n            //更新三大公式设置的值，只更新已经加载出来的数据\r\n            this.setState({ newSource: nextProps.batchSource.slice(0, this.state.newSource.length) });\r\n        }\r\n    }\r\n    //批量设置的模态框的隐藏\r\n    showModalHidden = () => {\r\n        this.props.setModalVisibel(false);\r\n        this.currentPage = 1; //重置当前页数\r\n    };\r\n    //点击确定按钮\r\n    onOkDialog = () => {\r\n        let { areaList, areaIndex, batchSource } = this.props;\r\n        areaList = _.cloneDeep(areaList);\r\n        batchSource = _.cloneDeep(batchSource);\r\n        // areaList[areaIndex].queryPropertyList = this.state.newSource; //old\r\n        this.setCheckedByCheckAll(batchSource); //保存时将checkbox值与全选checkbox值一致\r\n        areaList[areaIndex].queryPropertyList = batchSource;\r\n        this.props.updateAreaList(areaList);\r\n        this.showModalHidden();\r\n    };\r\n    saveNewSource = newSource => {\r\n        let { batchSource } = this.props;\r\n        let newBatchSource = newSource.concat(batchSource.slice(newSource.length, batchSource.length));\r\n        this.setState({ newSource });\r\n        this.props.updateBatchSource(newBatchSource);\r\n    };\r\n\r\n    //全选checkbox\r\n    saveAllNewSource = (newSource, property, value) => {\r\n        let { batchSource } = this.props;\r\n        let newBatchSource = _.cloneDeep(batchSource);\r\n        newBatchSource.map(item => item[property] = value);\r\n        this.setState({ newSource });\r\n        this.props.updateBatchSource(newBatchSource);\r\n    }\r\n\r\n    //加载下一页批量设置字段\r\n    loadNextPage = () => {\r\n        let { newSource } = this.state; \r\n        let newBatchSource = newSource.concat(this.props.batchSource.slice(newSource.length, newSource.length + this.pageSize));\r\n        this.setCheckedByCheckAll(newBatchSource); //分页加载的数据checkbox选中状态与全选checkbox一致\r\n        this.setState({ newSource: newBatchSource });\r\n    }\r\n\r\n    //监听表格滚动事件\r\n    handleScrollTable = () => {\r\n        let $scrollTable = this.batchTableRef && this.batchTableRef.querySelector(\".ant-table-body\");\r\n        if ($scrollTable && ($scrollTable.scrollTop + $scrollTable.clientHeight >= $scrollTable.scrollHeight * 0.8)) {\r\n            if(this.currentPage < this.totalPage){\r\n                this.currentPage++;\r\n                this.loadNextPage();\r\n            }\r\n        }\r\n    }\r\n\r\n    //设置checkbox值与全选checkbox一致\r\n    setCheckedByCheckAll = (data) => {\r\n        for (const [key, { checked, indeterminate }] of Object.entries(this.checkAllCheckedObj)) {\r\n            if (!indeterminate) { //非中间态才赋值\r\n                data.map(item => item[key] = checked);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let { areaIndex, areaList, json, batchSource } = this.props;\r\n        let { newSource } = this.state;\r\n        return (\r\n            <HotKeysModal\r\n                closable={true}\r\n                className=\"zonesetting-batch-setting-modal\"\r\n                style={{ margin: 0 }}\r\n                title={langCheck(\r\n                    \"ZoneSetting-000016\",\r\n                    \"pages\",\r\n                    json\r\n                )} /* 国际化处理： 批量设置-卡片区*/\r\n                // mask={false}\r\n                maskClosable={false}\r\n                visible={this.props.batchSettingModalVisibel}\r\n                onOk={this.onOkDialog}\r\n                destroyOnClose={true}\r\n                onCancel={this.showModalHidden}\r\n                width=\"98%\"\r\n                bodyHeight={`${document.body.clientHeight - 110}px`}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000005\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            type=\"primary\"\r\n                            onClick={this.onOkDialog}\r\n                        >\r\n                            {langCheck(\"ZoneSetting-000005\", \"pages\", json)}(\r\n                            <span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/}\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000006\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck(\"ZoneSetting-000006\", \"pages\", json)}(\r\n                            <span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <div ref={ref => this.batchTableRef = ref} onScrollCapture={this.handleScrollTable}>\r\n                    <BatchTable\r\n                        newSource={newSource}\r\n                        areatype={areaList[areaIndex].areatype}\r\n                        saveNewSource={this.saveNewSource}\r\n                        saveAllNewSource={this.saveAllNewSource}\r\n                        forwardRef={(key, value) => this.checkAllCheckedObj[key] = value}\r\n                    />\r\n                </div>\r\n            </HotKeysModal>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        areaList: state.zoneSettingData.areaList,\r\n        batchSource: state.zoneSettingData.batchSource\r\n    }),\r\n    {\r\n        updateAreaList,\r\n        updateBatchSource\r\n    }\r\n)(BatchSettingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { batchSearchData, batchFormData, batchTableData } from './utilService';\r\nimport { Table, Input, Button, Icon, Dropdown, Popover, Checkbox } from 'antd';\r\nimport { toggleFormula, setFormulaInfo, setCurrentBatchCell } from 'Store/ZoneSetting/action';\r\nimport { handleFormula } from \"./events\";\r\nimport CoverPosotion from \"Components/CoverPosition\";\r\nimport _ from 'lodash';\r\nimport {\r\n    EditableCell,\r\n    EditableCheck,\r\n    SelectCell,\r\n    FormulaCell\r\n} from './editableCell';\r\nconst Search = Input.Search;\r\n//批量设置组件类\r\n//基于ant的table组件的封装\r\nclass BatchTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [];\r\n        this.state = {\r\n            visible: false,\r\n        };\r\n    }\r\n    //input下拉框的显示/隐藏\r\n    //注：未启用该下拉\r\n    handleVisibleChange = (visible, index) => {\r\n        if (visible === false) {\r\n            return;\r\n        }\r\n        this.setState({ [`visible${index}`]: visible });\r\n    };\r\n    //input下拉框的隐藏\r\n    //注：未启用该下拉\r\n    hidePopover = index => {\r\n        this.setState({ [`visible${index}`]: false });\r\n    };\r\n    /**\r\n     * 闭包 只对具体的单元格修改，需要知道更新具体哪一行（横向）&哪一个属性（纵向）\r\n     * @param {index} 需要知道更新数据所在行，比如index=0为第一行\r\n     * @param {property} 需要知道更新数据所归属属性，比如code为更新编码\r\n     * @return {function} 返回方法体，调用的地方传入需要更改的value值\r\n     */\r\n    onCellChange = (index, property) => {\r\n        return value => {\r\n            let { newSource } = this.props;\r\n            newSource = _.cloneDeep(newSource);\r\n            let target = newSource[index];\r\n            if (target) {\r\n                target[property] = value;\r\n                this.props.saveNewSource(newSource);\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * 闭包 只对具体的单元格修改，需要知道更新具体哪一行（横向）&哪一个属性（纵向）\r\n     * @param {index} 需要知道更新数据所在行，比如index=0为第一行\r\n     * @param {property} 需要知道更新数据所归属属性，比如code为更新编码\r\n     * @return {function} 返回方法体，调用的地方传入需要更改的value值\r\n     */\r\n    onCheckedChange = (index, property) => {\r\n        return value => {\r\n            let { newSource } = this.props;\r\n            newSource = _.cloneDeep(newSource);\r\n            let target = newSource[index];\r\n            if (target) {\r\n                target[property] = value;\r\n                this.props.saveNewSource(newSource);\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * 闭包 一纵列单元格修改，需要知道更新哪一个属性\r\n     * @param {property} 需要知道更新数据所归属属性，比如code为更新编码\r\n     * @return {function} 返回方法体，调用的地方传入需要更改的value值\r\n     */\r\n    onAllColCellChange = property => {\r\n        return value => {\r\n            this.saveAllCellValue(value, property);\r\n        };\r\n    };\r\n    /**\r\n     * 保存一纵列单元格\r\n     * @param {value} 需要更新的值\r\n     * @param {property} 需要更新的属性key\r\n     */\r\n    saveAllCellValue = (value, property) => {\r\n        let { newSource } = this.props;\r\n        newSource = _.cloneDeep(newSource);\r\n        _.forEach(newSource, n => {\r\n            n[property] = value;\r\n        });\r\n        this.props.saveAllNewSource(newSource, property, value);\r\n    };\r\n\r\n\r\n    /**\r\n     * 中间态公共方法\r\n     * @param {arr} 创建的新数组\r\n     * @param {region} 需要更新的区域（表单/表格/查询）\r\n     * @param {property} 每个区域需要更新的属性\r\n     */\r\n    publicIndeterminate = (arr, region, property) => {\r\n        arr = this.props.batchSource.map(item => item[property]); //需要从全部批量设置数据判断全选checkbox选中状态\r\n        if (arr.includes(true) && (arr.includes(null) || (arr.includes(false)))) {\r\n            _.forEach(region, (bat, i) => {\r\n                if (bat.property == property) {\r\n                    bat.indeterminate = true;\r\n                    bat.checkAll = false;\r\n                }\r\n                return;\r\n            })\r\n        }else if (!arr.includes(true)) {\r\n            _.forEach(region, (bat, i) => {\r\n                if (bat.property == property) {\r\n                    bat.indeterminate = false;\r\n                    bat.checkAll = false;\r\n                }\r\n                return;\r\n            })\r\n        }else {\r\n            _.forEach(region, (bat, i) => {\r\n                if (bat.property == property) {\r\n                    bat.indeterminate = false;\r\n                    bat.checkAll = true;\r\n                }\r\n                return;\r\n            })\r\n        }\r\n        arr = [];\r\n    }\r\n    render() {\r\n        let { newSource, areatype } = this.props;\r\n        //给每一个卡片添加table渲染所需的唯一key\r\n        _.forEach(newSource, (n, i) => {\r\n            n.key = i;\r\n        });\r\n        let columns = [];\r\n        let scrollTableWidth = 0;\r\n        let batchData = [];\r\n        //查询区、表单区、表格区，根据区域类型的不同，进行不同的赋值，从utilService中获取字典\r\n        if (areatype === '0') {\r\n            let isnotmetaArr = [], isuseArr = [],\r\n                disabledArr = [], visibleArr = [],\r\n                ismultiselectedenabledArr = [], isfixedconditionArr = [],\r\n                requiredArr = [], isqueryconditionArr = [],\r\n                containlowerArr = [], ischeckArr = [],\r\n                isbeyondorgArr = [], usefuncArr = [];\r\n            //查询区\r\n            batchData = batchSearchData();\r\n            _.forEach(newSource, (vv, indx) => {\r\n                isnotmetaArr.push(vv.isnotmeta);\r\n                isuseArr.push(vv.isuse);\r\n                disabledArr.push(vv.disabled);\r\n                visibleArr.push(vv.visible);\r\n                ismultiselectedenabledArr.push(vv.ismultiselectedenabled);\r\n                isfixedconditionArr.push(vv.isfixedcondition);\r\n                requiredArr.push(vv.required);\r\n                isqueryconditionArr.push(vv.isquerycondition);\r\n                containlowerArr.push(vv.containlower);\r\n                ischeckArr.push(vv.ischeck);\r\n                isbeyondorgArr.push(vv.isbeyondorg);\r\n                usefuncArr.push(vv.usefunc);\r\n            });\r\n            this.publicIndeterminate(isnotmetaArr, batchData, 'isnotmeta')\r\n            this.publicIndeterminate(isuseArr, batchData, 'isuse')\r\n            this.publicIndeterminate(disabledArr, batchData, 'disabled')\r\n            this.publicIndeterminate(visibleArr, batchData, 'visible')\r\n            this.publicIndeterminate(ismultiselectedenabledArr, batchData, 'ismultiselectedenabled')\r\n            this.publicIndeterminate(isfixedconditionArr, batchData, 'isfixedcondition')\r\n            this.publicIndeterminate(requiredArr, batchData, 'required')\r\n            this.publicIndeterminate(isqueryconditionArr, batchData, 'isquerycondition')\r\n            this.publicIndeterminate(containlowerArr, batchData, 'containlower')\r\n            this.publicIndeterminate(ischeckArr, batchData, 'ischeck')\r\n            this.publicIndeterminate(isbeyondorgArr, batchData, 'isbeyondorg')\r\n            this.publicIndeterminate(usefuncArr, batchData, 'usefunc')\r\n        } else if (areatype === '1') {\r\n            let isreviseArr = [], isnextrowArr = [],\r\n            visibleArr = [], requiredArr = [],\r\n            disabledArr = [];\r\n            //表单\r\n            batchData = batchFormData();\r\n            _.forEach(newSource, (vv, indx) => {\r\n                isreviseArr.push(vv.isrevise);\r\n                isnextrowArr.push(vv.isnextrow);\r\n                visibleArr.push(vv.visible);\r\n                requiredArr.push(vv.required);\r\n                disabledArr.push(vv.disabled);\r\n            });\r\n            this.publicIndeterminate(isreviseArr, batchData, 'isrevise');\r\n            this.publicIndeterminate(isnextrowArr, batchData, 'isnextrow');\r\n            this.publicIndeterminate(visibleArr, batchData, 'visible');\r\n            this.publicIndeterminate(requiredArr, batchData, 'required');\r\n            this.publicIndeterminate(disabledArr, batchData, 'disabled');\r\n\r\n        } else {\r\n            let isreviseArr = [], istotalArr = [],\r\n            visibleArr = [], requiredArr = [],\r\n            disabledArr = [];\r\n            //表格\r\n            batchData = batchTableData();\r\n            _.forEach(newSource, (vv, indx) => {\r\n                isreviseArr.push(vv.isrevise);\r\n                istotalArr.push(vv.istotal);\r\n                visibleArr.push(vv.visible);\r\n                requiredArr.push(vv.required);\r\n                disabledArr.push(vv.disabled);\r\n            });\r\n            this.publicIndeterminate(isreviseArr, batchData, 'isrevise');\r\n            this.publicIndeterminate(istotalArr, batchData, 'istotal');\r\n            this.publicIndeterminate(visibleArr, batchData, 'visible');\r\n            this.publicIndeterminate(requiredArr, batchData, 'required');\r\n            this.publicIndeterminate(disabledArr, batchData, 'disabled');\r\n        }\r\n        //循环批量设置的字典，\r\n        _.forEach(batchData, (data, index) => {\r\n            let tmpColData = {\r\n                dataIndex: data.property,\r\n                width: data.width\r\n            };\r\n            if (tmpColData.dataIndex === 'label') {\r\n                tmpColData.fixed = 'left';\r\n            }\r\n            if (tmpColData.dataIndex === 'code') {\r\n                tmpColData.fixed = 'left';\r\n            }\r\n            //累加宽度，计算scroll值\r\n            scrollTableWidth += data.width;\r\n            //input的下拉框进行一纵列批改，\r\n            //勿删，可能后期会使用\r\n            //<Popover\r\n            //     overlayClassName=\"all-apps-popover\"\r\n            //     getPopupContainer={() => {\r\n            //         return document.querySelector(\r\n            //             \".zonesetting-batch-setting-modal\"\r\n            //         );\r\n            //     }}\r\n            //     content={\r\n            //         <EditAllCell\r\n            //             property={data.property}\r\n            //             hidePopover={()=>{this.hidePopover(index)}}\r\n            //             onChange={this.onAllColCellChange(\r\n            //                 data.property\r\n            //             )}\r\n            //         />\r\n            //     }\r\n            //     visible={this.state[`visible${index}`]}\r\n            //     onVisibleChange={(visible)=>{this.handleVisibleChange(visible,index)}}\r\n            //     placement=\"bottomLeft\"\r\n            //     trigger=\"click\"\r\n            // >\r\n            //     {data.title} <Icon type=\"down\" />\r\n            // </Popover>\r\n\r\n            // console.log('batchData', batchData);\r\n            // console.log('tmpColData', tmpColData);\r\n            //根据类型不同，渲染不同的表头单元格\r\n            if (data.type === 'checkbox') {\r\n                //如果是checkbox，则表头为控制全选与否的checkbox组件\r\n                tmpColData.title = (\r\n                    <Checkbox\r\n                        onChange={e => {\r\n                            this.saveAllCellValue(\r\n                                e.target.checked,\r\n                                data.property\r\n                            );\r\n                        }}\r\n                        indeterminate={data.indeterminate}\r\n                        checked={data.checkAll}\r\n                        ref={ref => this.props.forwardRef(data.property, {\r\n                            checked: data.checkAll,\r\n                            indeterminate: data.indeterminate //checkbox是否中间态\r\n                        })} //将全选checkbox选中状态传给父组件\r\n                    >\r\n                        {data.title}\r\n                    </Checkbox>\r\n                );\r\n            } else {\r\n                //其他类型，表头都是静态文本\r\n                tmpColData.title = data.title;\r\n            }\r\n            //根据类型不同，渲染不同的表体单元格\r\n            switch (data.type) {\r\n                case 'input':\r\n                    tmpColData.render = (text, record, index) => {\r\n                        return (\r\n                            <EditableCell\r\n                                value={text}\r\n                                property={data.property}\r\n                                updateValue={this.onCellChange(\r\n                                    index,\r\n                                    data.property\r\n                                )}\r\n                            />\r\n                        );\r\n                    };\r\n                    break;\r\n                case 'checkbox':\r\n                tmpColData.render = (text, record, index) => {\r\n                        return (\r\n                            <EditableCheck\r\n                                value={text}\r\n                                property={data.property}\r\n                                onChange={this.onCellChange(\r\n                                    index,\r\n                                    data.property\r\n                                )}\r\n                            />\r\n                        );\r\n                    };\r\n                    break;\r\n                case 'select':\r\n                    tmpColData.render = (text, record, index) => {\r\n                        return (\r\n                            <SelectCell\r\n                                selectValue={text}\r\n                                property={data.property}\r\n                                selectObj={data.selectObj}\r\n                                onChange={this.onCellChange(\r\n                                    index,\r\n                                    data.property\r\n                                )}\r\n                            />\r\n                        );\r\n                    };\r\n                    break;\r\n                case 'text':\r\n                    tmpColData.title = data.title;\r\n                    break;\r\n                case 'formula': //公式\r\n                    tmpColData.render = (text, record, index) => {\r\n                        let handleFormulaClick = () => {\r\n                            if (!this.props.formula[data.property]){\r\n                                handleFormula.call(this, newSource[index]);\r\n                                this.props.toggleFormula(data.property, true);\r\n                            }\r\n                            this.props.setCurrentBatchCell({ index, code: data.property});\r\n                        }\r\n                        return <FormulaCell\r\n                            value={text}\r\n                            property={data.property}\r\n                            onFormula={handleFormulaClick}\r\n                            updateValue={this.onCellChange(\r\n                                index,\r\n                                data.property\r\n                            )}\r\n                        />\r\n                    };\r\n                    break;\r\n            }\r\n            //将所有结果压栈columns中，ant-table即可进行table渲染\r\n            columns.push(tmpColData);\r\n        });\r\n        return (\r\n            <Table\r\n                bordered\r\n                dataSource={newSource}\r\n                columns={columns}\r\n                pagination={false}\r\n                scroll={{ x: scrollTableWidth, y: document.documentElement.clientHeight * 0.72 }}\r\n                locale={{\r\n                    emptyText: (\r\n                        <CoverPosotion type=\"treeCardTable\" />\r\n                    )\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        formula: state.zoneSettingData.formula,\r\n        areaList: state.zoneSettingData.areaList,\r\n        batchSource: state.zoneSettingData.batchSource\r\n    }),{\r\n        toggleFormula,\r\n        setFormulaInfo,\r\n        setCurrentBatchCell\r\n    }\r\n)(BatchTable);","import React, { Component } from \"react\";\r\nimport { Input, Select, Checkbox, Button } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from 'Pub/js/getMulti';\r\nconst Option = Select.Option;\r\nconst Search = Input.Search;\r\n//批量设置的组件单元类\r\n//输入框组件类\r\nexport class EditableCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //数据变化\r\n    handleChange = e => {\r\n        const value = e.target.value;\r\n        this.props.updateValue(value);\r\n    };\r\n    //控制渲染\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const thisProps = this.props || {},\r\n            thisState = this.state || {};\r\n        if (this.props.value !== nextProps.value) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <Input\r\n                size=\"small\"\r\n                style={{ width: 100 }}\r\n                value={value}\r\n                onChange={this.handleChange}\r\n                ref={input => (this[`input`] = input)}\r\n            />\r\n        );\r\n    }\r\n}\r\n//编辑一纵列单元格组件类\r\nexport class EditAllCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: \"\",\r\n            json: {}\r\n        };\r\n    }\r\n    //点击确定\r\n    handleClick = e => {\r\n        this.props.onChange(this.state.inputValue);\r\n        this.props.hidePopover();\r\n    };\r\n    //隐藏popOver输入框\r\n    close = () => {\r\n        this.props.hidePopover();\r\n    };\r\n    //数据变化\r\n    changeValue = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n    componentDidMount() {\r\n        //多语\r\n        let callback = (json) => {\r\n\t\t\t// console.log('json', json);\r\n            this.setState({\r\n                json:json\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: 'ZoneSetting',\r\n            // currentLocale: 'zh-CN',\r\n            domainName: 'workbench',\r\n            callback\r\n        });\r\n    }\r\n    render() {\r\n        let { json } = this.state;\r\n        return (\r\n            <div className=\"custom-filter-dropdown\">\r\n                <Input\r\n                    value={this.state.inputValue}\r\n                    size=\"small\"\r\n                    ref={`customInput`}\r\n                    onChange={this.changeValue}\r\n                />\r\n                <Button type=\"primary\" onClick={this.handleClick}>\r\n                    {langCheck('ZoneSetting-000005', 'pages', json)}\r\n                    {/* /* 国际化处理： 确定*/ }\r\n                </Button>\r\n                <Button onClick={this.close}>{langCheck('ZoneSetting-000006', 'pages', json)}</Button>\r\n                {/* /* 国际化处理： 取消*/ }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//复选框组件类\r\nexport class EditableCheck extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //checked选择值变化\r\n    handleChange = e => {\r\n        this.props.onChange(e.target.checked);\r\n    };\r\n    //控制渲染\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const thisProps = this.props || {},\r\n            thisState = this.state || {};\r\n        if (this.props.value !== nextProps.value) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <Checkbox checked={Boolean(value)} onChange={this.handleChange} />\r\n        );\r\n    }\r\n}\r\n//选择框组件类\r\nexport class SelectCell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //下拉选择变化\r\n    handleSelectChange = value => {\r\n        this.props.onChange(value);\r\n    };\r\n    //控制渲染\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const thisProps = this.props || {},\r\n            thisState = this.state || {};\r\n        if (this.props.selectValue !== nextProps.selectValue) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        const { selectValue, selectObj, property } = this.props;\r\n        return (\r\n            <Select\r\n                value={\r\n                    _.isEmpty(selectValue) ? selectObj[0].value : selectValue\r\n                }\r\n                onChange={value => {\r\n                    this.handleSelectChange(value);\r\n                }}\r\n                style={{ width: 100 }}\r\n                size={\"small\"}\r\n            >\r\n                {(() => {\r\n                    if (property === \"color\") {\r\n                        return selectObj.map((c, index) => {\r\n                            return (\r\n                                <Option key={index} value={c.value}>\r\n                                    <span className=\"template-setting-color-select\">\r\n                                        <span>{c.name}</span>\r\n                                        <span\r\n                                            className=\"color-select-color\"\r\n                                            style={{ backgroundColor: c.value }}\r\n                                        />\r\n                                    </span>\r\n                                </Option>\r\n                            );\r\n                        });\r\n                    } else {\r\n                        return selectObj.map((c, index) => {\r\n                            return (\r\n                                <Option key={index} value={c.value}>\r\n                                    {c.name}\r\n                                </Option>\r\n                            );\r\n                        });\r\n                    }\r\n                })()}\r\n            </Select>\r\n        );\r\n    }\r\n}\r\n\r\n//公式组件类\r\nexport class FormulaCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //数据变化\r\n    handleChange = e => {\r\n        const value = e.target.value;\r\n        this.props.updateValue(value);\r\n    };\r\n    //控制渲染\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const thisProps = this.props || {},\r\n            thisState = this.state || {};\r\n        if (this.props.value !== nextProps.value) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n        const { value, onFormula } = this.props;\r\n        return (\r\n            <Search\r\n                size=\"small\"\r\n                style={{ width: 100 }}\r\n                value={value}\r\n                onChange={() => { }}\r\n                onSearch={onFormula}\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input , Button , Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport { updateAreaList, updateSelectCard, updateSelectArea } from \"Store/ZoneSetting/action\";\r\nimport { getItemtypeByDatatype, colorObj } from './utilService';\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport { selectCardFromOther } from './events';\r\n//添加非元数据模态框组件类\r\nclass AddNotMetaDataModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notMetaDataName: \"\",\r\n            notMetaDataCode: \"\",\r\n            explainForName: \"\",\r\n            explainForCode: \"\"\r\n        };\r\n    }\r\n    //设置新增非元数据模态框隐藏\r\n    showModalHidden = () => {\r\n        this.props.setAddDataModalVisibel(false);\r\n        //弹窗关闭后需要清空弹窗数据\r\n        this.setState({\r\n            notMetaDataName: \"\",\r\n            notMetaDataCode: \"\",\r\n            explainForName: \"\",\r\n            explainForCode: ''\r\n        })\r\n    };\r\n    //点击确定按钮\r\n    onOkDialog = () => {\r\n        //确定之前先判断弹出框是否正确输入数据\r\n        let flag = true;\r\n        const { notMetaDataName, notMetaDataCode } = this.state;\r\n        let { json, propperty } = this.props;\r\n        if (\r\n            this.checkDataCorrect(notMetaDataName).correct &&\r\n            this.checkDataCorrect(notMetaDataCode, \"code\").correct\r\n        ) {\r\n            flag = false;\r\n        }\r\n        if(flag) {\r\n            if(notMetaDataName == '') {\r\n                this.setState({\r\n                    explainForName: langCheck('ZoneSetting-000000', 'pages', json)/* 国际化处理： 不能为空*/\r\n                })\r\n            }\r\n            if(notMetaDataCode == '') {\r\n                this.setState({\r\n                    explainForCode: langCheck('ZoneSetting-000000', 'pages', json)/* 国际化处理： 不能为空*/\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        //\r\n        let { areaList, areaIndex } = this.props;\r\n        let queryPropertyList = areaList[areaIndex].queryPropertyList;\r\n        let cardObj = {};\r\n        const itemtype = getItemtypeByDatatype(propperty.datatype);\r\n        if (this.props.areatype === \"0\") {\r\n            //查询区\r\n            cardObj = {\r\n                pk_query_property: \"newNotMetaData\" + new Date().getTime(),\r\n                areaid: areaList[areaIndex].pk_area,\r\n                label: this.state.notMetaDataName,\r\n                code: this.state.notMetaDataCode,\r\n                metapath: \"\",\r\n                isnotmeta: true,\r\n                isuse: true,\r\n                position: `${queryPropertyList.length + 1}`,\r\n                opersign: \"=@>@>=@<@<=@like@\",\r\n                opersignname: langCheck('ZoneSetting-000001', 'pages', json),/* 国际化处理： 等于@大于@大于等于@小于@小于等于@相似@*/\r\n                defaultvalue: \"\",\r\n                isfixedcondition: false,\r\n                required: false,\r\n                disabled: false,\r\n                visible: true,\r\n                ismultiselectedenabled: false,\r\n                isquerycondition: false,\r\n                datatype: propperty.datatype || \"1\",\r\n                refname: \"-99\",\r\n                containlower: false,\r\n                ischeck: false,\r\n                isbeyondorg: false,\r\n                usefunc: false,\r\n                showtype: \"1\",\r\n                returntype: \"refpk\",\r\n                define1: \"\",\r\n                define2: \"\",\r\n                define3: \"\",\r\n                define4: \"\",\r\n                define5: \"\",\r\n                itemtype: itemtype || \"input\",\r\n                visibleposition: \"\",\r\n                tablecode: \"\",\r\n                querytablename: \"\"\r\n            };\r\n        } else {\r\n            //非查询区\r\n            cardObj = {\r\n                pk_query_property: \"newNotMetaData\" + new Date().getTime(),\r\n                areaid: areaList[areaIndex].pk_area,\r\n                code: this.state.notMetaDataCode,\r\n                datatype: propperty.datatype || \"1\",\r\n                label: this.state.notMetaDataName,\r\n                position: `${queryPropertyList.length + 1}`,\r\n                metapath: \"\",\r\n                color: colorObj() && colorObj()[0].value, //取常量中默认颜色\r\n                isrevise: false,\r\n                required: false,\r\n                disabled: false,\r\n                visible: true,\r\n                maxlength: \"20\",\r\n                defaultvalue: \"\",\r\n                hyperlinkflag: false,//超链接\r\n                defaultvar: \"\",\r\n                define1: \"\",\r\n                define2: \"\",\r\n                define3: \"\",\r\n                itemtype: itemtype || \"input\"\r\n            };\r\n        }\r\n        if (this.props.areatype === \"1\") {\r\n            //表单\r\n            cardObj.colnum = \"1\";\r\n            cardObj.isnextrow = false;\r\n        }\r\n        if (this.props.areatype === \"2\") {\r\n            //表格\r\n            cardObj.width = \"\";\r\n            cardObj.istotal = false;\r\n        }\r\n        areaList[areaIndex].queryPropertyList = queryPropertyList.concat(\r\n            cardObj\r\n        );\r\n        this.setState({\r\n            notMetaDataName: \"\",\r\n            notMetaDataCode: \"\",\r\n            explainForName: \"\",\r\n            explainForCode: \"\"\r\n        });\r\n        this.props.updateAreaList(areaList);\r\n        selectCardFromOther.call(this, cardObj); //选中添加的非元数据\r\n        this.showModalHidden();\r\n    };\r\n    /**\r\n     * 检查code是否已经存在，从而判断code唯一性\r\n     * @param {String} checkCode 待检查的code文本\r\n     * @return {Boolean} flag 是否存在/唯一\r\n     */\r\n    isUniqueInQueryList = checkCode => {\r\n        let { areaList, areaIndex } = this.props;\r\n        let queryPropertyList = areaList[areaIndex].queryPropertyList;\r\n        let flag = true;\r\n        _.forEach(queryPropertyList, q => {\r\n            if (q.code === checkCode) {\r\n                flag = false;\r\n                return false;\r\n            }\r\n        });\r\n        return flag;\r\n    };\r\n    /**\r\n     * 检查数据是否正确\r\n     * @param {String} checkedStr 待检查的文本\r\n     * @param {String} type 待查文本的归属属性\r\n     * @return {Object} 是否正确&错误数据提示\r\n     */\r\n    checkDataCorrect = (checkedStr, type) => {\r\n        let correct = true;\r\n        let errorMsg = \"\";\r\n        let { json } = this.props;\r\n        if (type === \"code\") {\r\n            if (checkedStr === \"\") {\r\n                errorMsg = langCheck('ZoneSetting-000000', 'pages', json);/* 国际化处理： 不能为空*/\r\n                correct = false;\r\n            } else {\r\n                //含中文正则\r\n                let strRegExp = /[\\u4e00-\\u9fa5]/;\r\n                if (strRegExp.test(checkedStr)) {\r\n                    errorMsg = langCheck('ZoneSetting-000002', 'pages', json);/* 国际化处理： 不能为中文*/\r\n                    correct = false;\r\n                }\r\n                if (!this.isUniqueInQueryList(checkedStr)) {\r\n                    errorMsg = langCheck('ZoneSetting-000003', 'pages', json);/* 国际化处理： 不能编码重复*/\r\n                    correct = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (checkedStr === \"\") {\r\n                errorMsg = langCheck('ZoneSetting-000000', 'pages', json);/* 国际化处理： 不能为空*/\r\n                correct = false;\r\n            }\r\n        }\r\n        return { correct: correct, errorMsg: errorMsg };\r\n    };\r\n    /**\r\n     * 检查name和code都正确\r\n     * @return {Boolean} 是否都正确\r\n     */\r\n    checkNameAndCodeCorrect = () => {\r\n        let flag = false;\r\n        const { notMetaDataName, notMetaDataCode } = this.state;\r\n        if (\r\n            this.checkDataCorrect(notMetaDataName).correct &&\r\n            this.checkDataCorrect(notMetaDataCode, \"code\").correct\r\n        ) {\r\n            flag = true;\r\n        }\r\n        return flag;\r\n    };\r\n    //回车键事件\r\n    onPressEnter = () => {\r\n        if (!this.checkNameAndCodeCorrect()) {\r\n            return;\r\n        }\r\n        this.onOkDialog();\r\n    };\r\n    //修改非元数据名称\r\n    changeNotMetaDataName = e => {\r\n        this.setState({ notMetaDataName: e.target.value });\r\n        const { correct, errorMsg } = this.checkDataCorrect(e.target.value);\r\n        this.setState({ explainForName: errorMsg });\r\n    };\r\n    //修改非元数据编码\r\n    changeNotMetaDataCode = e => {\r\n        this.setState({ notMetaDataCode: e.target.value });\r\n        const { correct, errorMsg } = this.checkDataCorrect(\r\n            e.target.value,\r\n            \"code\"\r\n        );\r\n        this.setState({ explainForCode: errorMsg });\r\n    };\r\n    //当非元数据模态框状态，弹出时（状态由不显示=>显示），则文本框自动获得焦点\r\n    componentWillUpdate = (nextProps, nextState) => {\r\n        if (!this.props.addDataModalVisibel && nextProps.addDataModalVisibel) {\r\n            setTimeout(() => {\r\n                this.refs.addNotMetaDataInputDom.focus();\r\n            }, 0);\r\n        }\r\n    };\r\n    render() {\r\n        let { json } = this.props;\r\n        return (\r\n            <HotKeysModal\r\n                maskClosable={false}\r\n                customHeader={langCheck('ZoneSetting-000004', 'pages', json)}/* 国际化处理： 新增非元数据*/\r\n                // mask={false}\r\n                wrapClassName=\"add-not-meta-data\"\r\n                visible={this.props.addDataModalVisibel}\r\n                onOk={this.onOkDialog}\r\n                onCancel={this.showModalHidden}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck('ZoneSetting-000005', 'pages', json)}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            // disabled={!this.checkNameAndCodeCorrect()}\r\n                            type=\"primary\"\r\n                            onClick={this.onOkDialog}\r\n                        >\r\n                            {langCheck('ZoneSetting-000005', 'pages', json)}\r\n                            (<span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/ }\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck('ZoneSetting-000006', 'pages', json)}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck('ZoneSetting-000006', 'pages', json)}\r\n                            (<span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <div>\r\n                    <div \r\n                        className=\"code-div\" \r\n                        ref=\"addNotMetaCodeDiv\"\r\n                        style={ this.state.explainForCode === \"\"\r\n                            ? {marginBottom: '19.09px'}\r\n                            : {}\r\n                        }\r\n                        >\r\n                        <span>{langCheck('ZoneSetting-000007', 'pages', json)}</span>\r\n                        {/* /* 国际化处理： 非元数据编码*/ }\r\n                        <Input\r\n                            className={\r\n                                this.state.explainForCode === \"\"\r\n                                    ? \"\"\r\n                                    : \"has-error\"\r\n                            }\r\n                            ref=\"addNotMetaDataInputDom\"\r\n                            placeholder={langCheck('ZoneSetting-000008', 'pages', json)}/* 国际化处理： 请输入非元数据编码，非中文*/\r\n                            value={this.state.notMetaDataCode}\r\n                            onChange={this.changeNotMetaDataCode}\r\n                            onPressEnter={this.onPressEnter}\r\n                        />\r\n                        <br/>\r\n                        <div\r\n                            style={{\r\n                                marginLeft: '26%',\r\n                                visibility:\r\n                                    this.state.explainForCode === \"\"\r\n                                        ? \"hidden\"\r\n                                        : \"visible\"\r\n                            }}\r\n                            className=\"form-explain\"\r\n                        >\r\n                            {this.state.explainForCode}\r\n                        </div>\r\n                    </div>\r\n                    <div \r\n                        ref=\"addNotMetaNameDiv\" \r\n                        className='not-code'\r\n                        style={ this.state.explainForName === \"\"\r\n                            ? {marginBottom: '19.09px'}\r\n                            : {}\r\n                        }\r\n                    >\r\n                        <span>{langCheck('ZoneSetting-000009', 'pages', json)}</span>\r\n                        {/* /* 国际化处理： 非元数据名称*/ }\r\n                        <Input\r\n                            className={\r\n                                this.state.explainForName === \"\"\r\n                                    ? \"\"\r\n                                    : \"has-error\"\r\n                            }\r\n                            placeholder={langCheck('ZoneSetting-000010', 'pages', json)}/* 国际化处理： 请输入非元数据名称*/\r\n                            value={this.state.notMetaDataName}\r\n                            onChange={this.changeNotMetaDataName}\r\n                            onPressEnter={this.onPressEnter}\r\n                        />\r\n                        <br/>\r\n                        <div\r\n                            style={{\r\n                                marginLeft: '26%',\r\n                                visibility:\r\n                                    this.state.explainForName === \"\"\r\n                                        ? \"hidden\"\r\n                                        : \"visible\"\r\n                            }}\r\n                            className=\"form-explain\"\r\n                        >\r\n                            {this.state.explainForName}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HotKeysModal>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        areaList: state.zoneSettingData.areaList\r\n    }),\r\n    {\r\n        updateAreaList,\r\n        updateSelectCard,\r\n        updateSelectArea\r\n    }\r\n)(AddNotMetaDataModal);\r\n","/* \r\n    表单区分组区域组件\r\n    created by: liyaoh 2019-05-22\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nconst areaTarget = {\r\n    drop(props, monitor, component){\r\n        const dragItem = monitor.getItem();\r\n        //从左侧拖拽非元数据\r\n        if (dragItem.type === 'card') {\r\n            props.onDrop(monitor);\r\n        }\r\n    }\r\n};\r\n\r\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\r\n@DropTarget('area', areaTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n}))\r\nclass FormGroupArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            group, \r\n            isActive,\r\n            contentVisible,\r\n            renderCard,\r\n            onClick,\r\n            renderHeader,\r\n            emptyText,\r\n            connectDropTarget\r\n        } = this.props;\r\n        return connectDropTarget(\r\n            <div\r\n                className={`form-area-group ${isActive ? 'active' : ''}`}\r\n                onClick={onClick}\r\n            >\r\n                {renderHeader}\r\n                <div className=\"form-area-content\" style={{ display: contentVisible ? \"block\" : \"none\" }}>\r\n                    {\r\n                        group.queryPropertyList.length > 0 ? group.queryPropertyList.map(renderCard)\r\n                    :\r\n                        <div className=\"empty-area\">\r\n                            <i className=\"iconfont icon-zhuyi1\" />\r\n                            {emptyText}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormGroupArea;","/* \r\n    表格区展开卡片区域组件\r\n    created by: liyaoh 2019-05-27\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\n\r\nconst areaTarget = {\r\n    drop(props, monitor, component){\r\n        const dragItem = monitor.getItem();\r\n        //从左侧拖拽非元数据\r\n        if (dragItem.type === 'card') {\r\n            props.onDrop(monitor);\r\n        }\r\n    }\r\n};\r\n\r\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\r\n@DropTarget('area', areaTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n}))\r\nclass TableFoldArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            fold, \r\n            isActive,\r\n            renderCard,\r\n            visible,\r\n            onClick,\r\n            renderHeader,\r\n            connectDropTarget\r\n        } = this.props;\r\n        return connectDropTarget(\r\n            <div\r\n                className={`form-area-group ${isActive ? 'active' : ''}`}\r\n                style={{ display: visible ? \"block\" : \"none\" }}\r\n                onClick={onClick}\r\n            >\r\n                {renderHeader}\r\n                <div className=\"form-area-content\">\r\n                    {fold.queryPropertyList.map(renderCard)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableFoldArea;","/* \r\n    表格区展开侧拉区域组件\r\n    created by: liyaoh 2019-05-31\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { Drawer } from 'antd';\r\n\r\nconst areaTarget = {\r\n    drop(props, monitor, component){\r\n        const dragItem = monitor.getItem();\r\n        //从左侧拖拽非元数据\r\n        if (dragItem.type === 'card') {\r\n            props.onDrop(monitor);\r\n        }\r\n    }\r\n};\r\n\r\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\r\n@DropTarget('area', areaTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n}))\r\nclass TableDrawerArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            areaClassName,\r\n            side, \r\n            children,\r\n            isActive,\r\n            renderCard,\r\n            visible,\r\n            renderHeader,\r\n            onClick,\r\n            connectDropTarget\r\n        } = this.props;\r\n        return <Drawer\r\n            getContainer={document.getElementsByClassName(\"template-setting-content\")[0]}\r\n            closable={false}\r\n            placement=\"right\"\r\n            maskClosable={false}\r\n            width={725}\r\n            visible={visible}\r\n            mask={true}\r\n            zIndex={180}\r\n            destroyOnClose={true}\r\n            style={{ padding: 0, height: '100%'}}\r\n        >\r\n        {\r\n            <div className=\"drawer-content\">\r\n                <div className={`${areaClassName} side-area`} onClick={onClick}>\r\n                    <div className=\"table-side-area\">\r\n                        {renderHeader}\r\n                        {connectDropTarget(\r\n                            <div className=\"area-item-content\">\r\n                                <div className={`form-area-group ${isActive ? 'active' : ''}`}>\r\n                                    <div className=\"form-area-content\">\r\n                                        {side.queryPropertyList.map(renderCard)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {/* 孙表区域 */}\r\n                {\r\n                    children && children()\r\n                }                    \r\n            </div>\r\n        }\r\n        </Drawer>\r\n    }\r\n}\r\n\r\nexport default TableDrawerArea;","/* \r\n    侧拉孙表区域组件\r\n    created by: liyaoh 2019-06-04\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport { updateSelectArea } from \"Store/ZoneSetting/action\";\r\nimport { removeSelectCardCls } from '../../events';\r\n\r\nconst areaSource = {\r\n    beginDrag(props) {\r\n        if (!props.isImplement) {\r\n            props.updateSelectArea(props.grandson); //拖拽时选中当前区域\r\n            removeSelectCardCls(); //清空选中字段样式\r\n        }\r\n        return {\r\n            id: props.grandson.pk_area,\r\n            index: props.grandsonIndex,\r\n            type: 'area',\r\n            areaType: 'grandson' //用于区分区域还是孙表\r\n        };\r\n    }\r\n};\r\n\r\nconst areaTarget = {\r\n    drop(props, monitor, component){\r\n        const dragItem = monitor.getItem();\r\n        //从左侧拖拽非元数据\r\n        if (dragItem.type === 'card') {\r\n            props.onDrop(monitor);\r\n        } else if (dragItem.from !== 'left') {\r\n            const dragIndex = dragItem.index;\r\n            const hoverIndex = props.grandsonIndex;\r\n\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex || props.isImplement) return;\r\n\r\n            props.onDragArea(dragIndex, hoverIndex);\r\n            monitor.getItem().index = hoverIndex;\r\n        }\r\n    }\r\n};\r\n@DragSource('area', areaSource, (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n}))\r\n//DropTarget用于包装接收拖拽元素的组件，使组件能够放置\r\n@DropTarget('area', areaTarget, (connect, monitor) => ({\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver()\r\n}))\r\nclass GrandsonArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            areaClassName,\r\n            grandson, \r\n            isActive,\r\n            renderCard,\r\n            contentVisible,\r\n            renderHeader,\r\n            onClick,\r\n            connectDragSource,\r\n            connectDropTarget\r\n        } = this.props;\r\n        return connectDragSource(\r\n                connectDropTarget(\r\n                    <div className={areaClassName} onClick={onClick}>\r\n                        {renderHeader}\r\n                        {\r\n                            <div className=\"area-item-content\" style={{ display: contentVisible ? \"block\" : \"none\" }}>\r\n                                <div className=\"table-area-content\">\r\n                                    {grandson.queryPropertyList.map(renderCard)}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    () => ({}),\r\n    {\r\n        updateSelectArea\r\n    }\r\n)(GrandsonArea);","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Ajax from \"Pub/js/ajax\";\r\nimport { connect } from \"react-redux\";\r\nimport { Tree, Button, Checkbox, Select, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport * as utilService from \"./utilService\";\r\nimport { opersignNameObj, colorObj } from \"./utilService\";\r\nconst TreeNode = Tree.TreeNode;\r\nconst Option = Select.Option;\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { selectCardFromOther } from \"./events\";\r\nimport { updateSelectCard, updateSelectArea } from \"Store/ZoneSetting/action\";\r\n//添加元数据模态框组件\r\nclass TreeModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkedKeys: [],\r\n            selectedKeys: [],\r\n            selectedNodes: [],\r\n            searchValue: \"\",\r\n            needToBeAllSelectNodeList: []\r\n        };\r\n    }\r\n    //设置模态框隐藏\r\n    showModalHidden = () => {\r\n        this.setModalVisible(false);\r\n    };\r\n    //设置模态框隐藏，并归零元数据树的数据\r\n    setModalVisible = modalVisible => {\r\n        this.setState({\r\n            selectedKeys: [],\r\n            checkedKeys: [],\r\n            selectedNodes: [],\r\n            checkedNodes: [],\r\n            needToBeAllSelectNodeList: []\r\n        });\r\n        this.props.setModalVisible(modalVisible);\r\n    };\r\n    //移动到的弹出框中，点击确认\r\n    onOkMoveDialog = () => {\r\n        const modalVisible = false;\r\n        const { selectedNodes } = this.state;\r\n        const { targetAreaID, json } = this.props;\r\n        let cardList = [];\r\n        //循环遍历已经选择的节点，进行查询区/非查询区的数据初始化\r\n        _.forEach(selectedNodes, (s, i) => {\r\n            const {\r\n                myUniqID,\r\n                datatype,\r\n                refname,\r\n                refcode,\r\n                pid,\r\n                refpk,\r\n                isLeaf,\r\n                modelname,\r\n                length,\r\n                notSearchAreaCode,\r\n                proid,\r\n                resid,\r\n                readonly\r\n            } = s.props.dataRef;\r\n            let cardObj = {};\r\n            //查询区\r\n            if (this.props.targetAreaType === \"0\") {\r\n                //操作符编码\r\n                const opersign = utilService.getObjNameByDatatype(\r\n                    datatype,\r\n                    utilService.opersignObj\r\n                );\r\n                //操作符名称\r\n                const opersignname = utilService.getObjNameByDatatype(\r\n                    datatype,\r\n                    opersignNameObj()\r\n                );\r\n                cardObj = {\r\n                    pk_query_property: `newMetaData_${myUniqID}`,\r\n                    areaid: targetAreaID,\r\n                    datatype: datatype,\r\n                    code: myUniqID,\r\n                    label: refname,\r\n                    metapath: myUniqID,\r\n                    isnotmeta: false,\r\n                    isuse: true,\r\n                    opersign: opersign ? opersign : \"=@>@>=@<@<=@like@\",\r\n                    opersignname: opersignname\r\n                        ? opersignname\r\n                        : langCheck(\r\n                              \"ZoneSetting-000001\",\r\n                              \"pages\",\r\n                              json\r\n                          ) /* 国际化处理： 等于@大于@大于等于@小于@小于等于@相似@*/,\r\n                    defaultvalue: \"\",\r\n                    isfixedcondition: false,\r\n                    required: false,\r\n                    disabled: false,\r\n                    visible: datatype === \"56\" ? false : true,\r\n                    ismultiselectedenabled: false,\r\n                    isquerycondition: true,\r\n                    refname: datatype === \"204\" ? modelname : \"-99\",\r\n                    containlower: isLeaf ? false : true,\r\n                    ischeck: false,\r\n                    isbeyondorg: false,\r\n                    usefunc: datatype === \"34\" ? true : false,\r\n                    showtype: \"1\",\r\n                    returntype: \"refpk\",\r\n                    define1: \"\",\r\n                    define2: \"\",\r\n                    define3: \"\",\r\n                    define4: \"\",\r\n                    define5: \"\",\r\n                    itemtype: \"input\",\r\n                    myrefpk: refpk,\r\n                    visibleposition: \"\",\r\n                    tablecode: \"\",\r\n                    querytablename: \"\",\r\n                    maxlength: length //查询区新增元数据赋值\r\n                };\r\n            } else {\r\n                //非查询区\r\n                cardObj = {\r\n                    pk_query_property: `newMetaData_${myUniqID}`,\r\n                    areaid: targetAreaID,\r\n                    code: notSearchAreaCode ? notSearchAreaCode : myUniqID,\r\n                    datatype: datatype,\r\n                    label: refname,\r\n                    metapath: myUniqID,\r\n                    color: colorObj() && colorObj()[0].value, //取常量中默认颜色\r\n                    isrevise: false,\r\n                    required: false,\r\n                    disabled: false,\r\n                    visible: datatype === \"56\" ? false : true,\r\n                    maxlength: length,\r\n                    defaultvalue: \"\",\r\n                    hyperlinkflag: false, //超链接\r\n                    defaultvar: \"\",\r\n                    define1: \"\",\r\n                    define2: \"\",\r\n                    define3: \"\",\r\n                    itemtype: \"input\",\r\n                    myrefpk: refpk\r\n                };\r\n            }\r\n            if (this.props.targetAreaType === \"1\") {\r\n                //表单\r\n                cardObj.colnum = \"1\";\r\n                cardObj.isnextrow = false;\r\n            }\r\n            if (this.props.targetAreaType === \"2\") {\r\n                //表格\r\n                cardObj.width = \"\";\r\n                cardObj.istotal = false;\r\n            }\r\n            //参照\r\n            if (cardObj.datatype === \"204\") {\r\n                cardObj.metaid = refpk;\r\n                cardObj.iscode = false;\r\n                cardObj.modelname = modelname;\r\n            }\r\n            //自定义项\r\n            if (cardObj.datatype === \"56\") {\r\n                cardObj.isdefined = true;\r\n            }\r\n            //小数或者金额\r\n            if (cardObj.datatype === \"31\" || cardObj.datatype === \"52\") {\r\n                cardObj.dataval = \"2,,\";\r\n            }\r\n            //组件类型\r\n            cardObj.itemtype = utilService.getItemtypeByDatatype(\r\n                cardObj.datatype\r\n            );\r\n            //查询区的若干逻辑组件，默认值设为false\r\n            // if (this.props.targetAreaType === \"0\" && _.includes(utilService.shouldSetDefaultValueList, cardObj.itemtype)) {\r\n            //     cardObj.defaultvalue='false'\r\n            // }\r\n            //新增了两个属性\r\n            cardObj.proid = proid;\r\n            cardObj.resid = resid;\r\n            if (readonly === true) {\r\n                cardObj.disabled = true;\r\n            }\r\n            cardList.push(cardObj);\r\n        });\r\n        //查询区&非查询区枚举类型需要添加默认dataval\r\n        let ajaxDataForSelect = [];\r\n        _.forEach(cardList, c => {\r\n            if (c.datatype === \"203\") {\r\n                console.log(c.label);\r\n                ajaxDataForSelect.push(c.myrefpk);\r\n            }\r\n        });\r\n        //若存在枚举类型，\r\n        if (ajaxDataForSelect.length > 0) {\r\n            Ajax({\r\n                url: `/nccloud/platform/templet/getEnumValue.do`,\r\n                info: {\r\n                    name: langCheck(\r\n                        \"ZoneSetting-000017\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 单据模板设置*/,\r\n                    action: langCheck(\r\n                        \"ZoneSetting-000122\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 下拉选项*/\r\n                },\r\n                data: ajaxDataForSelect,\r\n                success: res => {\r\n                    if (res) {\r\n                        let { data, success } = res.data;\r\n                        if (success && data) {\r\n                            _.forEach(data, d => {\r\n                                _.forEach(cardList, c => {\r\n                                    _.forEach(d, d2 => {\r\n                                        if (d2.id === c.myrefpk) {\r\n                                            if (_.isEmpty(c.dataval)) {\r\n                                                c.dataval = `${d2.name}=${\r\n                                                    d2.value\r\n                                                }`;\r\n                                            } else {\r\n                                                c.dataval = `${c.dataval},${\r\n                                                    d2.name\r\n                                                }=${d2.value}`;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                });\r\n                            });\r\n                        }\r\n                        this.setDatavalForCard(cardList, modalVisible);\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.setDatavalForCard(cardList, modalVisible);\r\n        }\r\n    };\r\n    //非查询区的参照类型需要添加默认dataval\r\n    setDatavalForCard = (cardList, modalVisible) => {\r\n        let { json } = this.props;\r\n        if (this.props.targetAreaType !== \"0\") {\r\n            let ajaxData = [];\r\n            _.forEach(cardList, c => {\r\n                if (c.datatype === \"204\") {\r\n                    ajaxData.push(c.modelname);\r\n                }\r\n            });\r\n            if (ajaxData.length > 0) {\r\n                Ajax({\r\n                    url: `/nccloud/platform/templet/getRefDefaultSel.do`,\r\n                    info: {\r\n                        name: langCheck(\r\n                            \"ZoneSetting-000017\",\r\n                            \"pages\",\r\n                            json\r\n                        ) /* 国际化处理： 单据模板设置*/,\r\n                        action: langCheck(\r\n                            \"ZoneSetting-000024\",\r\n                            \"pages\",\r\n                            json\r\n                        ) /* 国际化处理： 查询参照默认下拉选项*/\r\n                    },\r\n                    data: ajaxData,\r\n                    success: res => {\r\n                        if (res) {\r\n                            let { data, success } = res.data;\r\n                            if (success && data) {\r\n                                _.forEach(data, d => {\r\n                                    _.forEach(cardList, c => {\r\n                                        if (d.name === c.modelname) {\r\n                                            c.dataval = `${\r\n                                                d.pk_refinfo\r\n                                            },code=N`;\r\n                                            c.refname = d.name;\r\n                                            c.refcode = d.refpath;\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                            cardList[0] &&\r\n                                selectCardFromOther.call(this, cardList[0]);\r\n                            this.props.addCard(cardList);\r\n                            this.setModalVisible(modalVisible);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                cardList[0] && selectCardFromOther.call(this, cardList[0]);\r\n                this.props.addCard(cardList);\r\n                this.setModalVisible(modalVisible);\r\n            }\r\n        } else {\r\n            cardList[0] && selectCardFromOther.call(this, cardList[0]);\r\n            this.props.addCard(cardList);\r\n            this.setModalVisible(modalVisible);\r\n        }\r\n    };\r\n    //关于树的方法\r\n    //选中事件，设置selectKeys和SelectNodes\r\n    onSelect = (selectedKeys, info) => {\r\n        // this.setState({ selectedKeys, selectedNodes: info.selectedNodes });\r\n        this.setState({\r\n            checkedKeys: selectedKeys,\r\n            selectedKeys: selectedKeys,\r\n            selectedNodes: info.selectedNodes,\r\n            checkedNodes: info.selectedNodes\r\n        });\r\n    };\r\n    //复选框选中事件，设置checkedKeys\r\n    onCheck = (checkedKeys, info) => {\r\n        // this.setState({\r\n        //     checkedKeys,\r\n        //     checkedNodes: info.checkedNodes\r\n        // });\r\n        this.setState({\r\n            selectedKeys: checkedKeys.checked,\r\n            checkedKeys: checkedKeys.checked,\r\n            checkedNodes: info.checkedNodes,\r\n            selectedNodes: info.checkedNodes //关联checkedbox和文本选中数据\r\n        });\r\n    };\r\n    //递归调用，渲染树节点\r\n    renderTreeNodes = data => {\r\n        return data.map(item => {\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode\r\n                        title={item.title}\r\n                        switcherIcon={({ expanded }) => {\r\n                            return (\r\n                                <i\r\n                                    className={`font-size-18 iconfont ${\r\n                                        expanded\r\n                                            ? \"icon-shu_zk\"\r\n                                            : \"icon-shushouqi\"\r\n                                    }`}\r\n                                />\r\n                            );\r\n                        }}\r\n                        key={item.key}\r\n                        dataRef={item}\r\n                    >\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            if (item.isleaf) {\r\n                return <TreeNode {...item} dataRef={item} />;\r\n            } else {\r\n                return (\r\n                    <TreeNode\r\n                        switcherIcon={({ expanded }) => {\r\n                            return (\r\n                                <i\r\n                                    className={`font-size-18 iconfont ${\r\n                                        expanded\r\n                                            ? \"icon-shu_zk\"\r\n                                            : \"icon-shushouqi\"\r\n                                    }`}\r\n                                />\r\n                            );\r\n                        }}\r\n                        {...item}\r\n                        dataRef={item}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n    };\r\n    //异步树，点击展开，发送ajax请求\r\n    onLoadData = treeNode => {\r\n        let { json } = this.props;\r\n        return new Promise(resolve => {\r\n            if (treeNode.props.children) {\r\n                resolve();\r\n                return;\r\n            }\r\n            Ajax({\r\n                url: `/nccloud/platform/templet/querymetapro.do`,\r\n                info: {\r\n                    name: langCheck(\r\n                        \"ZoneSetting-000017\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 单据模板设置*/,\r\n                    action: langCheck(\r\n                        \"ZoneSetting-000020\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 元数据树结构查询*/\r\n                },\r\n                data: {\r\n                    // metaid: metaid\r\n                    metaid: treeNode.props.refpk\r\n                },\r\n                success: res => {\r\n                    if (res) {\r\n                        let { data, success } = res.data;\r\n                        if (\r\n                            success &&\r\n                            data &&\r\n                            data.rows &&\r\n                            data.rows.length > 0\r\n                        ) {\r\n                            let metaTree = [];\r\n                            data.rows.map((r, index) => {\r\n                                let tmpMetaTree = {\r\n                                    ...r,\r\n                                    title: `${r.refcode} ${r.refname}`,\r\n                                    key: `${treeNode.props.myUniqID}.${\r\n                                        r.refcode\r\n                                    }`,\r\n                                    myUniqID: `${treeNode.props.myUniqID}.${\r\n                                        r.refcode\r\n                                    }`,\r\n                                    isLeaf: r.isleaf\r\n                                };\r\n                                //非查询区域的子表里的code不是全路径\r\n                                if (\r\n                                    this.props.targetAreaType !== \"0\" &&\r\n                                    treeNode.props.notSearchAreaCode\r\n                                ) {\r\n                                    tmpMetaTree.notSearchAreaCode = `${\r\n                                        treeNode.props.notSearchAreaCode\r\n                                    }.${r.refcode}`;\r\n                                }\r\n                                //非查询区域的子表的code，若父级是205则直接为自身refcode\r\n                                if (\r\n                                    this.props.targetAreaType !== \"0\" &&\r\n                                    treeNode.props.datatype === \"205\"\r\n                                ) {\r\n                                    tmpMetaTree.notSearchAreaCode = `${\r\n                                        r.refcode\r\n                                    }`;\r\n                                }\r\n                                metaTree.push(tmpMetaTree);\r\n                            });\r\n                            treeNode.props.dataRef.children = [].concat(\r\n                                metaTree\r\n                            );\r\n                            this.props.updateMetaTreeData([\r\n                                ...this.props.metaTree\r\n                            ]);\r\n                            resolve();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    getContentDom = () => {\r\n        const { metaTree } = this.props;\r\n        return (\r\n            <div className=\"template-setting-left-sider template-setting-sider\">\r\n                <div className=\"sider-content\">\r\n                    <div className=\"sider-search\">\r\n                        {/* <Input\r\n\t\t\t\t\t\t\tplaceholder='请搜索元数据名称'\r\n\t\t\t\t\t\t\tstyle={{ width: '70%' }}\r\n\t\t\t\t\t\t\tonPressEnter={this.onInputSearch}\r\n\t\t\t\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\t\t\t\taddonAfter={\r\n\t\t\t\t\t\t\t\t<Icon type='search' className='search-input-icon' onClick={this.onInputSearch} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/> */}\r\n                    </div>\r\n\r\n                    <div className=\"sider-tree\">\r\n                        <Tree\r\n                            checkable\r\n                            checkStrictly={true}\r\n                            loadData={this.onLoadData}\r\n                            showLine={true}\r\n                            multiple={true}\r\n                            onSelect={this.onSelect}\r\n                            selectedKeys={this.state.selectedKeys}\r\n                            checkedKeys={this.state.checkedKeys}\r\n                            onCheck={this.onCheck}\r\n                        >\r\n                            {this.renderTreeNodes(metaTree)}\r\n                        </Tree>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    //选择/取消选择所有的节点，且205数据类型不选中\r\n    selectAllTreeNode = (isChecked, metaTreeNodeList) => {\r\n        let { selectedKeys, checkedKeys } = this.state;\r\n        selectedKeys = _.cloneDeep(selectedKeys);\r\n        if (isChecked) {\r\n            //循环遍历树结构，只选中非205的数据类型\r\n            //循环遍历树结构，只选中非205的数据类型\r\n            _.forEach(metaTreeNodeList, (m, i) => {\r\n                if (\r\n                    selectedKeys.indexOf(m.myUniqID) === -1 &&\r\n                    m.datatype !== \"205\"\r\n                ) {\r\n                    selectedKeys.push(m.myUniqID);\r\n                    this.state.selectedNodes.push({\r\n                        props: {\r\n                            dataRef: {\r\n                                ...m\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            _.forEach(metaTreeNodeList, (m, i) => {\r\n                _.remove(selectedKeys, n => {\r\n                    return n === m.myUniqID;\r\n                });\r\n            });\r\n            _.forEach(metaTreeNodeList, (m, i) => {\r\n                _.remove(this.state.selectedNodes, n => {\r\n                    return n.props.dataRef.myUniqID === m.myUniqID;\r\n                });\r\n            });\r\n        }\r\n        this.setState({\r\n            selectedKeys,\r\n            checkedKeys: selectedKeys\r\n        });\r\n    };\r\n    //下拉选择205类型的节点\r\n    handleChangeSelectTreeNode = value => {\r\n        const { metaTree, canSelectTreeNodeList } = this.props;\r\n        //循环遍历204类型的节点\r\n        _.forEach(canSelectTreeNodeList, m => {\r\n            if (value.indexOf(`${m.refcode} ${m.refname}`) === -1) {\r\n                if (m.children !== null) {\r\n                    setTimeout(() => {\r\n                        this.selectAllTreeNode(false, m.children);\r\n                    }, 0);\r\n                }\r\n            } else {\r\n                if (m.children !== null) {\r\n                    setTimeout(() => {\r\n                        this.selectAllTreeNode(true, m.children);\r\n                    }, 0);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({ needToBeAllSelectNodeList: value });\r\n    };\r\n    //模态框的标题部分\r\n    getModalTitleDom = () => {\r\n        let { json } = this.props;\r\n        return (\r\n            <div>\r\n                <span className=\"custom-title\">{langCheck(\"ZoneSetting-000124\", \"pages\", json)}</span>\r\n                {/* /* 国际化处理： 添加元数据*/}\r\n                <Checkbox\r\n                    className=\"dnd-cancel\" //必须加。不加的话不能触发click事件\r\n                    style={{ marginLeft: \"25px\" }}\r\n                    onChange={e => {\r\n                        this.selectAllTreeNode(\r\n                            e.target.checked,\r\n                            this.props.metaTree\r\n                        );\r\n                    }}\r\n                >\r\n                    {langCheck(\"ZoneSetting-000125\", \"pages\", json)}\r\n                    {/* /* 国际化处理： 全选根节点*/}\r\n                </Checkbox>\r\n                {(() => {\r\n                    if (this.props.canSelectTreeNodeList.length > 0) {\r\n                        return (\r\n                            <Select\r\n                                className=\"dnd-cancel\" //必须加。不加的话不能触发click事件\r\n                                maxTagCount={1}\r\n                                size=\"small\"\r\n                                style={{ width: \"50%\" }}\r\n                                mode=\"multiple\"\r\n                                placeholder={langCheck(\r\n                                    \"ZoneSetting-000126\",\r\n                                    \"pages\",\r\n                                    json\r\n                                )} /* 国际化处理： 请先展开对应树节点，再选择*/\r\n                                onChange={this.handleChangeSelectTreeNode}\r\n                                value={this.state.needToBeAllSelectNodeList}\r\n                            >\r\n                                {this.props.canSelectTreeNodeList.map(\r\n                                    (node, index) => {\r\n                                        return (\r\n                                            <Option\r\n                                                key={`${node.refcode} ${\r\n                                                    node.refname\r\n                                                }`}\r\n                                                disabled={\r\n                                                    node.children ? false : true\r\n                                                }\r\n                                            >\r\n                                                {node.refcode} {node.refname}\r\n                                            </Option>\r\n                                        );\r\n                                    }\r\n                                )}\r\n                            </Select>\r\n                        );\r\n                    }\r\n                })()}\r\n            </div>\r\n        );\r\n    };\r\n    render() {\r\n        let { json } = this.props;\r\n        return (\r\n            <HotKeysModal\r\n                maskClosable={false}\r\n                customHeader={this.getModalTitleDom()}\r\n                // mask={false}\r\n                wrapClassName=\"meta-add-modal\"\r\n                visible={this.props.modalVisible}\r\n                onOk={this.onOkMoveDialog}\r\n                onCancel={this.showModalHidden}\r\n                destroyOnClose={true}\r\n                width={\"50%\"}\r\n                // style={{ top: 20 }}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000005\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            type=\"primary\"\r\n                            onClick={this.onOkMoveDialog}\r\n                        >\r\n                            {langCheck(\"ZoneSetting-000005\", \"pages\", json)}(\r\n                            <span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/}\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000006\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck(\"ZoneSetting-000006\", \"pages\", json)}(\r\n                            <span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                {this.getContentDom()}\r\n            </HotKeysModal>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({}),\r\n    { updateSelectCard, updateSelectArea }\r\n)(TreeModal);\r\n","module.exports = __webpack_public_path__ + \"images/template-empty-content.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Input, Checkbox, InputNumber, Select } from 'antd';\nconst Option = Select.Option;\nconst TabPane = Tabs.TabPane;\nimport Ajax from 'Pub/js/ajax';\nimport * as utilService from './utilService';\nimport { showType, returnType, dataTypeObj, colorObj } from './utilService';\nimport { updateSelectCard, updateAreaList, toggleFormula, updateBatchSource, setFormulaInfo } from 'Store/ZoneSetting/action';\nimport { handleFormula } from \"./events\";\nimport MoneyModal from './moneyModal';\nimport ReferModal from './referModal';\nimport CustomModal from './customModal';\nimport RelateMetaModal from './relateMetaModal';\nimport DefaultValueModal from './defaultValueModal';\nimport CusDocDefaultValueModal from './CusDocDefaultValueModal';\nimport * as platform from 'nc-lightapp-front';\nimport { langCheck, langZoneSetting } from 'Pub/js/utils';\nimport SetTemplateRight from './SetTemplate/setTemplateRight';\nconst { high } = platform;\nconst { Refer, FormulaEditor } = high;\nconst Search = Input.Search;\nconst inputStyle = { height: 28, width: '100%' };\n//右边栏属性配置组件类\nclass MyRightSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            moneyModalVisibel: false,\n            referModalVisibel: false,\n            relateMetaModalVisibel: false,\n            customModalVisibel: false,\n            defaultValueModalVisibel: false,\n            customDocDefaultModalVisibel: false, //自定义档案默认值弹框\n            showformula: false,\n            editformula: false,\n            validateformula: false\n        };\n    }\n\n    componentDidMount() {\n        //把nc-lightapp-front暴露给全局，供全局使用（艺轩）\n        window['nc-lightapp-front'] = platform;\n    }\n    /**\n     * input数据变化，更新redux中selectCard对象\n     * @param {String} value 设置的value值\n     * @param {String} propertyKey 属性主键\n     */\n    changeValue = (value, propertyKey) => {\n        let { selectCard } = this.props;\n        if (_.isEmpty(selectCard)) {\n            return;\n        }\n        selectCard = { ...selectCard };\n        selectCard[propertyKey] = value;\n        this.props.updateSelectCard(selectCard);\n    };\n    /**\n     * input数据变化，更新redux中selectCard对象\n     * @param {String} value 设置的value值\n     * @param {String} propertyKey 属性主键\n     */\n    changeCheckboxValue = (value, property) => {\n        let { selectCard } = this.props;\n        if (_.isEmpty(selectCard)) {\n            return;\n        }\n        selectCard = _.cloneDeep(selectCard);\n        //如果设置的属性为visible，需要联动设置visibleposition属性\n        if (property === 'visible') {\n            selectCard.visibleposition = '';\n        }\n        //实施态查询区勾选固定条件时需要调接口查预制模板是否勾选，根据接口返回值设置固定条件选中状态\n        if (this.props.isImplement && property === 'isfixedcondition' && selectCard.isfixedcondition == true) {\n            let currentArea = this.getArea(selectCard);\n            this.queryFixedCondition({\n                pk_template: this.props.zoneFormData.pk_page_templet,\n                araecode: currentArea.code,\n                propcode: selectCard.code\n            }, isfixedconditionFlag => {\n                selectCard[property] = value;\n                selectCard.isfixedcondition = isfixedconditionFlag;\n                this.asyncUpdataCardAndAreaList(selectCard, property)\n            });\n        } else {\n            selectCard[property] = value;\n            this.asyncUpdataCardAndAreaList(selectCard, property);\n        }\n    };\n    //通过字段查询区域\n    getArea = (card) => {\n        let result;\n        this.props.areaList.forEach((val, index) => {\n            val.queryPropertyList.forEach((v, i) => {\n                if (card.areaid === v.areaid) {\n                    result = val;\n                    return;\n                }\n            });\n        });\n        return result;\n    };\n    //通过selectCard更新areaList对象\n    updateCardInArea = () => {\n        let { areaList, selectCard } = this.props;\n        if (_.isEmpty(selectCard)) {\n            return;\n        }\n        let targetAreaIndex = 0;\n        let targetCardIndex = 0;\n        areaList = _.cloneDeep(areaList);\n        //遍历arealist，找到selectCard所在的区域\n        _.forEach(areaList, (a, i) => {\n            _.forEach(a.queryPropertyList, (q, index) => {\n                if (\n                    q.areaid === selectCard.areaid &&\n                    q.pk_query_property === selectCard.pk_query_property\n                ) {\n                    targetAreaIndex = i;\n                    targetCardIndex = index;\n                    return false;\n                }\n            });\n        });\n        areaList[targetAreaIndex].queryPropertyList[\n            targetCardIndex\n        ] = selectCard;\n        this.props.updateAreaList(areaList);\n    };\n    /**\n     * 通过selectCard获取当前区域的所有卡片\n     * @param {Array} queryPropertyList 当前区域的所有卡片\n     */\n    getCardListInAreaBySelectCard = () => {\n        let { areaList, selectCard } = this.props;\n        let targetAreaIndex = 0;\n        _.forEach(areaList, (a, i) => {\n            if (a.pk_area === selectCard.areaid) {\n                targetAreaIndex = i;\n                return false;\n            }\n        });\n        return areaList[targetAreaIndex].queryPropertyList;\n    };\n    //按回车键，input失去焦点\n    onPressEnter = (value, property) => {\n        this[`${property}input`].blur();\n    };\n    /**\n     * 获得一个数字输入框组件\n     * @param {String} placeholder 文本显示值\n     * @param {String} property 属性主键\n     * @return {} 数字输入框组件\n     */\n    getMyNumberInput = (placeholder, property) => {\n        return (\n            <InputNumber\n                min={1}\n                value={this.props.selectCard[property]}\n                onChange={value => {\n                    this.changeValue(value, property);\n                }}\n                onBlur={e => {\n                    this.updateCardInArea();\n                }}\n                ref={input => (this[`${property}input`] = input)}\n                onPressEnter={e => {\n                    this.onPressEnter(e.target.value, property);\n                }}\n            />\n        );\n    };\n    /**\n     * 获得一个文本输入框组件\n     * @param {String} placeholder 文本显示值\n     * @param {String} property 属性主键\n     * @return {} 文本输入框组件\n     */\n    getMyInput(placeholder, property, notMeteData) {\n        let disabled = false;\n        //如果组件长度为null或者''时设置默认显示值为120\n        if (property == 'width') {\n            if (this.props.selectCard[property] == null || this.props.selectCard[property] == '') {\n                this.props.selectCard[property] = '120';\n            }\n        }\n        //非元数据 metapath为空并且是编码\n        if ((notMeteData == '' || notMeteData == null) && property == 'code') {\n            disabled = false;\n        } else { //元数据\n            //不是编码\n            if (property != 'code') {\n                disabled = false;\n            } else {//metapath不为空或者null 是编码\n                disabled = true;\n            }\n        }\n        //实施态查询区勾选固定条件时操作符编码、操作符名称、默认取值不可编辑\n        if (this.props.isImplement && this.props.selectCard.isfixedcondition == true) {\n            const disabledArr = ['opersign', 'opersignname', 'defaultvalue'];\n            if (disabledArr.includes(property)) {\n                disabled = true;\n            }\n        }\n        return (\n            <Input\n                disabled={disabled}\n                style={inputStyle}\n                value={this.props.selectCard[property]}\n                onChange={e => {\n                    this.changeValue(e.target.value, property);\n                }}\n                onBlur={e => {\n                    this.updateCardInArea();\n                }}\n                ref={input => (this[`${property}input`] = input)}\n                onPressEnter={e => {\n                    this.onPressEnter(e.target.value, property);\n                }}\n            />\n        );\n    }\n    /**\n     * 获得一个checkbox组件\n     * @param {String} property 属性主键\n     * @return {} checkbox组件\n     */\n    getMyCheckbox = (property, disabled = false) => {\n        return (\n            <Checkbox\n                disabled={false}\n                checked={Boolean(this.props.selectCard[property])}\n                onChange={e => {\n                    this.changeCheckboxValue(e.target.checked, property);\n                }}\n            />\n        );\n    };\n    //原用做下拉选择的事件处理,现用来先更新selectCard后更新areaList\n    handleSelectChange = (value, property) => {\n        let { selectCard } = this.props;\n        if (_.isEmpty(selectCard)) {\n            return;\n        }\n        selectCard = { ...selectCard };\n        //做个优化，第一个参数可以传对象 一次可以改selectCard多个字段\n        if (property === undefined){\n            selectCard = { ...selectCard, ...value };\n        }else{ //改变单个字段\n            selectCard[property] = value;\n            //进行业务相关的联动处理\n            if (property === 'datatype') {\n                selectCard.dataval = '';\n                selectCard.itemtype = utilService.getItemtypeByDatatype(\n                    selectCard.datatype\n                );\n                //小数或者金额\n                if (value === '31' || value === '52') {\n                    selectCard.dataval = '2,,';\n                }\n            }\n        }\n        this.asyncUpdataCardAndAreaList(selectCard, property);\n    };\n    //异步更新selectCard后更新areaList\n    async asyncUpdataCardAndAreaList(selectCard, property) {\n        await this.props.updateSelectCard(selectCard);\n        await this.updateCardInArea();\n    }\n    //获取下拉选择Dom\n    getMySelect = (mySelectObj, property) => {\n        // console.log(window.multiZoneSettingLang);\n        return (\n            <Select\n                value={\n                    _.isEmpty(this.props.selectCard[property])\n                        ? mySelectObj[0].value\n                        : this.props.selectCard[property]\n                }\n                onChange={value => {\n                    this.handleSelectChange(value, property);\n                }}\n                style={inputStyle}\n                // size={'small'}\n            // getPopupContainer={() => document.getElementById('fixSelect')}\n            >\n                {(() => {\n                    if (property === 'color') {\n                        return mySelectObj.map((c, index) => {\n                            return (\n                                <Option key={index} value={c.value}>\n                                    <span className=\"template-setting-color-select\">\n                                        <span>{c.name}</span>\n                                        <span\n                                            className=\"color-select-color\"\n                                            style={{ backgroundColor: c.value }}\n                                        />\n                                    </span>\n                                </Option>\n                            );\n                        });\n                    } else {\n                        return mySelectObj.map((c, index) => {\n                            return (\n                                <Option key={index} value={c.value}>\n                                    {c.name}\n                                </Option>\n                            );\n                        });\n                    }\n                })()}\n            </Select>\n        );\n    };\n    //判断是否为元数据\n    getMetaType = selectCard => {\n        if (!!selectCard.metapath) return true; // 是元数据\n        return false; // 不是元数据 默认没选的情况是false\n    };\n    // 获取当前区域的类型\n    getAreaType = (areaList, selectCard) => {\n        let result;\n        _.forEach(areaList, (val, index) => {\n            _.forEach(val.queryPropertyList, (v, i) => {\n                if (selectCard.areaid === v.areaid) {\n                    result = val.areatype;\n                    return;\n                }\n            });\n        });\n        return result;\n    };\n    // 设置不同弹框的显示和隐藏\n    setModalVisibel = (whichModalVisibel, val) => {\n        this.setState({ [whichModalVisibel]: val });\n    };\n    //获得普通的search框组件\n    getMySearch = (key, whichModalVisibel) => {\n        const { selectCard } = this.props;\n        let searchVal = selectCard[key];\n        let disabled = false;\n        //自定义档案显示参照名称\n        if (selectCard.datatype === '57'){ \n            if (key === 'dataval'){ //类型设置\n                searchVal = selectCard.refname;\n            } else if (key === 'defaultvalue') { //默认取值\n                let defaultValName = selectCard.defaultvalue && selectCard.defaultvalue.split(\"=\");\n                searchVal = defaultValName && defaultValName[0];\n            }\n        }\n        return (\n            <Search\n                disabled={this.getPropertyDisabled(key)}\n                style={inputStyle}\n                value={searchVal}\n                onChange={() => { }}\n                onSearch={() => {\n                    this.setState({ [whichModalVisibel]: true });\n                }}\n            />\n        );\n    };\n    //获得公式的search框组件\n    getMyFormulaSearch = key => {\n        const { selectCard, toggleFormula } = this.props;\n        return (\n            <Search\n                // size=\"small\"\n                style={inputStyle}\n                value={selectCard[key]}\n                onChange={() => { }}\n                onSearch={() => {\n                    //this.refs[key].setShow(true);\n                    handleFormula.call(this, selectCard);\n                    toggleFormula([key], true);\n                    //\tthis.refs[key].handleTextAreaChange(selectCard[key]);\n                }}\n            />\n        );\n    };\n\n    //1909新增字段\n    renderCanEditFields = () => {\n        const canEditFields = [\n            { key: '#a', name: langCheck('ZoneSetting-000192', 'pages', this.props.json) }, //能否修改属性\n            { key: '#b', name: langCheck('ZoneSetting-000193', 'pages', this.props.json) }, //能否修改可修改标志\n            { key: '#c', name: langCheck('ZoneSetting-000194', 'pages', this.props.json) }, //能否修改可见标志\n            { key: '#d', name: langCheck('ZoneSetting-000195', 'pages', this.props.json) }, //能否修改修订标志\n        ];\n        //实施态不显示这些字段\n        if (this.props.isImplement) return;\n        return canEditFields.map(item => (\n            [<li>{item.name}</li>,\n            <li>{this.getMyCheckbox(item.key)}</li>]\n        ))\n    }\n\n    //渲染自定义档案默认值参照\n    renderCustomDocRefer = () => {\n        const { selectCard, json } = this.props;\n        return <li>\n            {this.getMySearch('defaultvalue', 'customDocDefaultModalVisibel')}\n            <CusDocDefaultValueModal\n                docPk={selectCard.dataval}\n                refname={selectCard.refname}\n                isgrade={selectCard.isgrade}\n                handleSelectChange={this.handleSelectChange}\n                defaultvalue={selectCard.defaultvalue}\n                modalVisibel={this.state.customDocDefaultModalVisibel}\n                setModalVisibel={this.setModalVisibel}\n                json={json}\n            />\n        </li>\n    }\n\n    //渲染数字类类型设置\n    renderMoneyModal = () => {\n        const { selectCard } = this.props;\n        return <li>\n            {this.getMySearch(\n                'dataval',\n                'moneyModalVisibel'\n            )}\n            <MoneyModal\n                datatype={selectCard.datatype}\n                handleSelectChange={\n                    this.handleSelectChange\n                }\n                initVal={selectCard.dataval}\n                modalVisibel={\n                    this.state.moneyModalVisibel\n                }\n                setModalVisibel={\n                    this.setModalVisibel\n                }\n            />\n        </li>\n    }\n\n    //获取字段属性禁用状态\n    getPropertyDisabled = (property) => {\n        const { selectCard, isImplement } = this.props;\n        let disabled = false;\n        //默认取值\n        if (property === 'defaultvalue') { \n            //实施态查询区勾选固定条件时默认取值不可编辑\n            return isImplement && selectCard.isfixedcondition == true;\n        }\n        return disabled;\n    }\n\n    //查询预制模板固定条件是否勾选\n    queryFixedCondition = (params, callback) => {\n        Ajax({\n            url: '/nccloud/platform/templet/checkfixedconditionaction.do',\n            data: params,\n            success: (res) => {\n                let { success, data } = res.data;\n                if (success) {\n                    callback(data);\n                }\n            }\n        });\n    }\n\n    //查询区，元数据属性\n    getDom1 = () => {\n        const { selectCard, json } = this.props;\n        console.log('selectCard--', selectCard);\n        let meteDate = selectCard.metapath;//区分元数据和非元数据\n        // console.log('meteDate--', meteDate);\n        return (\n            <Tabs defaultActiveKey=\"1\" >\n                <TabPane tab={langCheck('ZoneSetting-000075', 'pages', json)} key=\"1\">\n                    {/* /* 国际化处理： 显示属性*/}\n                    <ul className=\"basic-property\">\n                        <li>{langCheck('ZoneSetting-000076', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000076', 'pages', json), 'label')}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{langCheck('ZoneSetting-000077', 'pages', json)}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000077', 'pages', json), 'resid')}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{langCheck('ZoneSetting-000078', 'pages', json)}</li>\n                        {/* /* 国际化处理： 数据类型*/}\n                        {/* 元数据，禁止设置datatype属性，除了56自定义项*/}\n                        {(() => {\n                            if (selectCard.isdefined) {\n                                //通过isdefined判断是否为自定义项，可以选择数据类型\n                                return (\n                                    <li>\n                                        {this.getMySelect(\n                                            dataTypeObj(),\n                                            'datatype'\n                                        )}\n                                    </li>\n                                );\n                            } else {\n                                let showDataTypeName = utilService.getObjNameByDatatype(\n                                    selectCard.datatype,\n                                    dataTypeObj()\n                                );\n                                showDataTypeName =\n                                    showDataTypeName === ''\n                                        ? selectCard.datatype\n                                        : showDataTypeName;\n                                return <li>{showDataTypeName}</li>;\n                            }\n                        })()}\n\n                        {\n                            (() => {\n                                return (\n                                    <li>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                                );\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32逻辑\n                                    return (\n                                        <li>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'showdataval')}</li>\n                                    );\n                                } else {\n                                        return (<li>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'dataval')}</li>\n                                    );\n                                }\n                            })()\n                        }\n\n                        {/* 枚举隐藏项 */}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32逻辑\n                                    return (\n                                        <li style={{ display: 'none' }}>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                                    );\n                                }\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32逻辑\n                                    return (<li style={{ display: 'none' }}>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'dataval')}</li>);\n                                }\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n\n                        <li>{langCheck('ZoneSetting-000032', 'pages', json)}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000032', 'pages', json), 'maxlength')}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{langCheck('ZoneSetting-000079', 'pages', json)}</li>\n                        {/* /* 国际化处理： 非元数据条件*/}\n                        <li>{this.getMyCheckbox('isnotmeta')}</li>\n                        <li>{langCheck('ZoneSetting-000080', 'pages', json)}</li>\n                        {/* /* 国际化处理： 使用*/}\n                        <li>{this.getMyCheckbox('isuse')}</li>\n                        <li>{langCheck('ZoneSetting-000081', 'pages', json)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000081', 'pages', json), 'code', meteDate)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        <li>{langCheck('ZoneSetting-000082', 'pages', json)}</li>\n                        {/* /* 国际化处理： 操作符编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000082', 'pages', json), 'opersign')}</li>\n                        {/* /* 国际化处理： 操作符编码*/}\n                        <li>{langCheck('ZoneSetting-000083', 'pages', json)}</li>\n                        {/* /* 国际化处理： 操作符名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000083', 'pages', json), 'opersignname')}</li>\n                        {/* /* 国际化处理： 操作符名称*/}\n                        <li>{langCheck('ZoneSetting-000084', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认取值*/}\n                        {(() => {\n                            if (\n                                selectCard.datatype === '204' &&\n                                selectCard.refname !== '-99'\n                            ) {\n                                return (\n                                    <li>\n                                        {this.getMySearch(\n                                            'defaultvalue',\n                                            'defaultValueModalVisibel'\n                                        )}\n                                        <DefaultValueModal\n                                            areatype=\"0\"\n                                            refcode={selectCard.refcode}\n                                            refname={selectCard.refname}\n                                            isMultiSelectedEnabled={Boolean(\n                                                selectCard.ismultiselectedenabled\n                                            )}\n                                            handleSelectChange={\n                                                this.handleSelectChange\n                                            }\n                                            defaultvalue={\n                                                selectCard.defaultvalue\n                                            }\n                                            modalVisibel={\n                                                this.state\n                                                    .defaultValueModalVisibel\n                                            }\n                                            setModalVisibel={\n                                                this.setModalVisibel\n                                            }\n                                        />\n                                    </li>\n                                );\n                            } else if (selectCard.datatype === '57' && selectCard.dataval) { //自定义档案\n                                return this.renderCustomDocRefer();\n                            } else {\n                                return (\n                                    <li>\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000084', 'pages', json),/* 国际化处理： 默认取值*/\n                                            'defaultvalue'\n                                        )}\n                                    </li>\n                                );\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000085', 'pages', json)}</li>\n                        {/* /* 国际化处理： 不可修改*/}\n                        <li>{this.getMyCheckbox('disabled', this.props.isImplement && (selectCard['#a'] === true || selectCard['#b'] === true))}</li>\n                        <li>{langCheck('ZoneSetting-000086', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认显示*/}\n                        <li>{this.getMyCheckbox('visible')}</li>\n                        {/* 如果默认显示为true才显示*/}\n                        {(() => {\n                            if (selectCard.visible) {\n                                return [\n                                    <li key=\"visibleposition0\">\n                                        {langCheck('ZoneSetting-000087', 'pages', json)}\n                                        {/* /* 国际化处理： 默认显示字段排序*/}\n                                    </li>,\n                                    <li key=\"visibleposition1\">\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000087', 'pages', json),/* 国际化处理： 默认显示字段排序*/\n                                            'visibleposition'\n                                        )}\n                                    </li>\n                                ];\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000088', 'pages', json)}</li>\n                        {/* /* 国际化处理： 多选*/}\n                        <li>{this.getMyCheckbox('ismultiselectedenabled')}</li>\n                        <li>{langCheck('ZoneSetting-000089', 'pages', json)}</li>\n                        {/* /* 国际化处理： 固定条件*/}\n                        <li>{this.getMyCheckbox('isfixedcondition')}</li>\n                        <li>{langCheck('ZoneSetting-000090', 'pages', json)}</li>\n                        {/* /* 国际化处理： 必输条件*/}\n                        <li>{this.getMyCheckbox('required')}</li>\n                        <li>{langCheck('ZoneSetting-000091', 'pages', json)}</li>\n                        {/* /* 国际化处理： 查询条件*/}\n                        <li>{this.getMyCheckbox('isquerycondition')}</li>\n                        <li>{langCheck('ZoneSetting-000030', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000030', 'pages', json), 'refname')}</li>\n                        {/* /* 国际化处理： 参照名称*/}\n                        <li>{langCheck('ZoneSetting-000092', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照包含下级*/}\n                        <li>{this.getMyCheckbox('containlower')}</li>\n                        <li>{langCheck('ZoneSetting-000093', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照自动检查*/}\n                        <li>{this.getMyCheckbox('ischeck')}</li>\n                        <li>{langCheck('ZoneSetting-000094', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照跨集团*/}\n                        <li>{this.getMyCheckbox('isbeyondorg')}</li>\n                        <li>{langCheck('ZoneSetting-000095', 'pages', json)}</li>\n                        {/* /* 国际化处理： 使用系统函数*/}\n                        <li>{this.getMyCheckbox('usefunc')}</li>\n                        <li>{langCheck('ZoneSetting-000096', 'pages', json)}</li>\n                        {/* /* 国际化处理： 表编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000096', 'pages', json), 'tablecode')}</li>\n                        {/* /* 国际化处理： 表编码*/}\n                        <li>{langCheck('ZoneSetting-000097', 'pages', json)}</li>\n                        {/* /* 国际化处理： 表名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000097', 'pages', json), 'querytablename')}</li>\n                        {/* /* 国际化处理： 表名称*/}\n                        <li>{langCheck('ZoneSetting-000098', 'pages', json)}</li>\n                        {/* /* 国际化处理： 组件类型*/}\n                        <li>\n                            {this.getMySelect(\n                                utilService.getItemtypeObjByDatatype(\n                                    selectCard.datatype\n                                ),\n                                'itemtype'\n                            )}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000099', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示类型*/}\n                        <li>\n                            {this.getMySelect(showType(), 'showtype')}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000100', 'pages', json)}</li>\n                        {/* /* 国际化处理： 返回类型*/}\n                        <li>\n                            {this.getMySelect(\n                                returnType(),\n                                'returntype'\n                            )}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000101', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000101', 'pages', json), 'define1')}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{langCheck('ZoneSetting-000102', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000102', 'pages', json), 'define2')}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{langCheck('ZoneSetting-000103', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000103', 'pages', json), 'define3')}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                        <li>{langCheck('ZoneSetting-000104', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义4*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000104', 'pages', json), 'define4')}</li>\n                        {/* /* 国际化处理： 自定义4*/}\n                        <li>{langCheck('ZoneSetting-000105', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义5*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000105', 'pages', json), 'define5')}</li>\n                        {/* /* 国际化处理： 自定义5*/}\n                        {/* 1909新增是否可修改字段 */}\n                        {/* {this.renderCanEditFields()} */}\n                    </ul>\n                </TabPane>\n            </Tabs>\n        );\n    };\n    //查询区，非元数据属性\n    getDom2 = () => {\n        const { selectCard, json } = this.props;\n        let meteDate = selectCard.metapath;//区分元数据和非元数据\n        // console.log('meteDate=', meteDate);\n        console.log('selectCard=', selectCard);\n        return (\n            <Tabs defaultActiveKey=\"1\" >\n                <TabPane tab={langCheck('ZoneSetting-000075', 'pages', json)} key=\"1\">\n                    {/* /* 国际化处理： 显示属性*/}\n                    <ul className=\"basic-property\">\n                        <li>{langCheck('ZoneSetting-000076', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000076', 'pages', json), 'label')}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{langCheck('ZoneSetting-000077', 'pages', json)}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000077', 'pages', json), 'resid')}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{langCheck('ZoneSetting-000079', 'pages', json)}</li>\n                        {/* /* 国际化处理： 非元数据条件*/}\n                        <li>{this.getMyCheckbox('isnotmeta')}</li>\n                        <li>{langCheck('ZoneSetting-000080', 'pages', json)}</li>\n                        {/* /* 国际化处理： 使用*/}\n                        <li>{this.getMyCheckbox('isuse')}</li>\n                        <li>{langCheck('ZoneSetting-000106', 'pages', json)}</li>\n                        {/* /* 国际化处理： 元数据属性*/}\n                        <li>\n                            {this.getMyInput(langCheck('ZoneSetting-000106', 'pages', json), 'metadataproperty')}\n                            {/* /* 国际化处理： 元数据属性*/}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000032', 'pages', json)}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000032', 'pages', json), 'maxlength')}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{langCheck('ZoneSetting-000081', 'pages', json)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000081', 'pages', json), 'code', meteDate)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        <li>{langCheck('ZoneSetting-000082', 'pages', json)}</li>\n                        {/* /* 国际化处理： 操作符编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000082', 'pages', json), 'opersign')}</li>\n                        {/* /* 国际化处理： 操作符编码*/}\n                        <li>{langCheck('ZoneSetting-000083', 'pages', json)}</li>\n                        {/* /* 国际化处理： 操作符名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000083', 'pages', json), 'opersignname')}</li>\n                        {/* /* 国际化处理： 操作符名称*/}\n                        <li>{langCheck('ZoneSetting-000084', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认取值*/}\n                        {(() => {\n                            if (\n                                selectCard.datatype === '204' &&\n                                selectCard.refname !== '-99'\n                            ) {\n                                return (\n                                    <li>\n                                        {this.getMySearch(\n                                            'defaultvalue',\n                                            'defaultValueModalVisibel'\n                                        )}\n                                        <DefaultValueModal\n                                            areatype=\"0\"\n                                            refcode={selectCard.refcode}\n                                            refname={selectCard.refname}\n                                            isMultiSelectedEnabled={Boolean(\n                                                selectCard.ismultiselectedenabled\n                                            )}\n                                            handleSelectChange={\n                                                this.handleSelectChange\n                                            }\n                                            defaultvalue={\n                                                selectCard.defaultvalue\n                                            }\n                                            modalVisibel={\n                                                this.state\n                                                    .defaultValueModalVisibel\n                                            }\n                                            setModalVisibel={\n                                                this.setModalVisibel\n                                            }\n                                        />\n                                    </li>\n                                );\n                            } else if (selectCard.datatype === '57' && selectCard.dataval) { //自定义档案\n                                return this.renderCustomDocRefer();\n                            } else {\n                                return (\n                                    <li>\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000084', 'pages', json),/* 国际化处理： 默认取值*/\n                                            'defaultvalue'\n                                        )}\n                                    </li>\n                                );\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000085', 'pages', json)}</li>\n                        {/* /* 国际化处理： 不可修改*/}\n                        <li>{this.getMyCheckbox('disabled', this.props.isImplement && (selectCard['#a'] === true || selectCard['#b'] === true))}</li>\n                        <li>{langCheck('ZoneSetting-000086', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认显示*/}\n                        <li>{this.getMyCheckbox('visible')}</li>\n                        {/* 如果默认显示为true才显示*/}\n                        {(() => {\n                            if (selectCard.visible) {\n                                return [\n                                    <li key=\"visibleposition0\">\n                                        {langCheck('ZoneSetting-000087', 'pages', json)}\n                                        {/* /* 国际化处理： 默认显示字段排序*/}\n                                    </li>,\n                                    <li key=\"visibleposition1\">\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000087', 'pages', json),/* 国际化处理： 默认显示字段排序*/\n                                            'visibleposition'\n                                        )}\n                                    </li>\n                                ];\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000088', 'pages', json)}</li>\n                        {/* /* 国际化处理： 多选*/}\n                        <li>{this.getMyCheckbox('ismultiselectedenabled')}</li>\n                        <li>{langCheck('ZoneSetting-000089', 'pages', json)}</li>\n                        {/* /* 国际化处理： 固定条件*/}\n                        <li>{this.getMyCheckbox('isfixedcondition')}</li>\n                        <li>{langCheck('ZoneSetting-000090', 'pages', json)}</li>\n                        {/* /* 国际化处理： 必输条件*/}\n                        <li>{this.getMyCheckbox('required')}</li>\n                        <li>{langCheck('ZoneSetting-000091', 'pages', json)}</li>\n                        {/* /* 国际化处理： 查询条件*/}\n                        <li>{this.getMyCheckbox('isquerycondition')}</li>\n                        <li>{langCheck('ZoneSetting-000030', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000030', 'pages', json), 'refname')}</li>\n                        {/* /* 国际化处理： 参照名称*/}\n                        <li>{langCheck('ZoneSetting-000092', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照包含下级*/}\n                        <li>{this.getMyCheckbox('containlower')}</li>\n                        <li>{langCheck('ZoneSetting-000093', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照自动检查*/}\n                        <li>{this.getMyCheckbox('ischeck')}</li>\n                        <li>{langCheck('ZoneSetting-000094', 'pages', json)}</li>\n                        {/* /* 国际化处理： 参照跨集团*/}\n                        <li>{this.getMyCheckbox('isbeyondorg')}</li>\n                        <li>{langCheck('ZoneSetting-000095', 'pages', json)}</li>\n                        {/* /* 国际化处理： 使用系统函数*/}\n                        <li>{this.getMyCheckbox('usefunc')}</li>\n                        <li>{langCheck('ZoneSetting-000096', 'pages', json)}</li>\n                        {/* /* 国际化处理： 表编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000096', 'pages', json), 'tablecode')}</li>\n                        {/* /* 国际化处理： 表编码*/}\n                        <li>{langCheck('ZoneSetting-000097', 'pages', json)}</li>\n                        {/* /* 国际化处理： 表名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000097', 'pages', json), 'querytablename')}</li>\n                        {/* /* 国际化处理： 表名称*/}\n                        <li>{langCheck('ZoneSetting-000099', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示类型*/}\n                        <li>\n                            {this.getMySelect(showType(), 'showtype')}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000100', 'pages', json)}</li>\n                        {/* /* 国际化处理： 返回类型*/}\n                        <li>\n                            {this.getMySelect(\n                                returnType(),\n                                'returntype'\n                            )}\n                        </li>\n                        {/* 1909新增是否可修改字段 */}\n                        {/* {this.renderCanEditFields()} */}\n                    </ul>\n                </TabPane>\n                <TabPane tab={langCheck('ZoneSetting-000107', 'pages', json)} key=\"2\">\n                    {/* /* 国际化处理： 高级属性*/}\n                    <ul className=\"basic-property\">\n                        <li>{langCheck('ZoneSetting-000078', 'pages', json)}</li>\n                        {/* /* 国际化处理： 数据类型*/}\n                        <li>\n                            {this.getMySelect(\n                                dataTypeObj(),\n                                'datatype'\n                            )}\n                        </li>\n\n                        {\n                            (() => {\n                                return (\n                                    <li>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                                );\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32为逻辑\n                                    return (\n                                        <li>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'showdataval')}</li>\n                                    );\n                                } else if (selectCard.datatype === '31' || selectCard.datatype === '52' || selectCard.datatype === '4') { //31小数、4整数、52金额\n                                    return this.renderMoneyModal();\n                                } else {\n                                    return (\n                                        <li>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'dataval')}</li>\n                                    );\n                                }\n                            })()\n                        }\n\n                        {/* 枚举隐藏项 */}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32为逻辑\n                                    return (\n                                        <li style={{ display: 'none' }}>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                                    );\n                                }\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举,32为逻辑\n                                    return (\n                                        <li style={{ display: 'none' }}>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'dataval')}</li>\n                                    );\n                                }\n                            })()\n                        }\n\n                        <li>{langCheck('ZoneSetting-000098', 'pages', json)}</li>\n                        {/* /* 国际化处理： 组件类型*/}\n                        <li>\n                            {this.getMySelect(\n                                utilService.getItemtypeObjByDatatype(\n                                    selectCard.datatype\n                                ),\n                                'itemtype'\n                            )}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000101', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000101', 'pages', json), 'define1')}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{langCheck('ZoneSetting-000102', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000102', 'pages', json), 'define2')}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{langCheck('ZoneSetting-000103', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000103', 'pages', json), 'define3')}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                        <li>{langCheck('ZoneSetting-000104', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义4*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000104', 'pages', json), 'define4')}</li>\n                        {/* /* 国际化处理： 自定义4*/}\n                        <li>{langCheck('ZoneSetting-000105', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义5*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000105', 'pages', json), 'define5')}</li>\n                        {/* /* 国际化处理： 自定义5*/}\n                    </ul>\n                </TabPane>\n            </Tabs>\n        );\n    };\n    //非查询区，元数据属性||非元数据\n    getDom3 = (areaType, isMetaData) => {\n        const { selectCard, json, formula } = this.props;\n        console.log('selectCard-------', selectCard);\n        const isShowRelateMeta =\n            selectCard.datatype === '204' ? 'block' : 'none'; //判断是否为参照\n        const areaCardList = this.getCardListInAreaBySelectCard();\n        let meteDate = selectCard.metapath;//区分元数据和非元数据\n        // console.log('meteDate--', meteDate);\n        let validateDataParm = { 'areacodes': formula.regionCode };\n        console.log('validateDataParm-----------', validateDataParm);\n        return (\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab={langCheck('ZoneSetting-000075', 'pages', json)} key=\"1\">\n                    {/* /* 国际化处理： 显示属性*/}\n                    <ul className=\"basic-property\">\n                        <li>{langCheck('ZoneSetting-000076', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000076', 'pages', json), 'label')}</li>\n                        {/* /* 国际化处理： 显示名称*/}\n                        <li>{langCheck('ZoneSetting-000077', 'pages', json)}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000077', 'pages', json), 'resid')}</li>\n                        {/* /* 国际化处理： 多语字段*/}\n                        <li>{langCheck('ZoneSetting-000081', 'pages', json)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000081', 'pages', json), 'code', meteDate)}</li>\n                        {/* /* 国际化处理： 编码*/}\n                        {(() => {\n                            if (!isMetaData) {\n                                return [\n                                    <li key=\"metadataproperty0\">{langCheck('ZoneSetting-000106', 'pages', json)}</li>,/* 国际化处理： 元数据属性*/\n                                    <li key=\"metadataproperty1\">\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000106', 'pages', json),/* 国际化处理： 元数据属性*/\n                                            'metadataproperty'\n                                        )}\n                                    </li>\n                                ];\n                            }\n                        })()}\n                        {(() => {\n                            if (areaType === '1') {\n                                //表单\n                                return [\n                                    <li key=\"colnum0\">{langCheck('ZoneSetting-000031', 'pages', json)}</li>,/* 国际化处理： 占用列数*/\n                                    <li key=\"colnum1\">\n                                        {this.getMyInput(langCheck('ZoneSetting-000031', 'pages', json), 'colnum')}\n                                        {/* /* 国际化处理： 占用列数*/}\n                                    </li>\n                                ];\n                            } else {\n                                return [\n                                    <li key=\"width0\">{langCheck('ZoneSetting-000108', 'pages', json)}</li>,/* 国际化处理： 组件长度*/\n                                    <li key=\"width1\">\n                                        {this.getMyInput(langCheck('ZoneSetting-000108', 'pages', json), 'width')}\n                                        {/* /* 国际化处理： 组件长度*/}\n                                    </li>\n                                ];\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000032', 'pages', json)}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000032', 'pages', json), 'maxlength')}</li>\n                        {/* /* 国际化处理： 最大长度*/}\n                        <li>{langCheck('ZoneSetting-000109', 'pages', json)}</li>\n                        {/* /* 国际化处理： 可修订*/}\n                        <li>{this.getMyCheckbox('isrevise', this.props.isImplement && (selectCard['#a'] === true || selectCard['#d'] === true))}</li>\n                        {(() => {\n                            if (areaType === '1') {\n                                //表单\n                                return [\n                                    <li key=\"nextrow0\">{langCheck('ZoneSetting-000110', 'pages', json)}</li>,/* 国际化处理： 另起一行*/\n                                    <li key=\"nextrow1\">\n                                        {this.getMyCheckbox('isnextrow')}\n                                    </li>\n                                ];\n                            } else {\n                                return [\n                                    <li key=\"istotal0\">{langCheck('ZoneSetting-000111', 'pages', json)}</li>,/* 国际化处理： 合计*/\n                                    <li key=\"istotal1\">\n                                        {this.getMyCheckbox('istotal', this.props.isImplement && selectCard['#a'] === true)}\n                                    </li>\n                                ];\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000112', 'pages', json)}</li>\n                        {/* /* 国际化处理： 可见*/}\n                        <li>{this.getMyCheckbox('visible', this.props.isImplement && (selectCard['#a'] === true || selectCard['#c'] === true))}</li>\n                        <li>{langCheck('ZoneSetting-000113', 'pages', json)}</li>\n                        {/* /* 国际化处理： 必输项*/}\n                        <li>{this.getMyCheckbox('required', this.props.isImplement && selectCard['#a'] === true)}</li>\n                        <li>{langCheck('ZoneSetting-000085', 'pages', json)}</li>\n                        {/* /* 国际化处理： 不可修改*/}\n                        <li>{this.getMyCheckbox('disabled', this.props.isImplement && (selectCard['#a'] === true || selectCard['#b'] === true))}</li>\n                        <li>{langCheck('ZoneSetting-000084', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认取值*/}\n                        {(() => {\n                            if (\n                                selectCard.datatype === '204' &&\n                                !_.isUndefined(selectCard.refcode) &&\n                                selectCard.refcode !== '' &&\n                                selectCard.refcode !== null\n                            ) {\n                                //参照\n                                return (\n                                    <li>\n                                        {this.getMySearch(\n                                            'defaultvalue',\n                                            'defaultValueModalVisibel'\n                                        )}\n                                        <DefaultValueModal\n                                            refcode={selectCard.refcode}\n                                            refname={selectCard.refname}//非查询区refname\n                                            isMultiSelectedEnabled={Boolean(\n                                                selectCard.ismultiselectedenabled\n                                            )}\n                                            handleSelectChange={\n                                                this.handleSelectChange\n                                            }\n                                            defaultvalue={\n                                                selectCard.defaultvalue\n                                            }\n                                            modalVisibel={\n                                                this.state\n                                                    .defaultValueModalVisibel\n                                            }\n                                            setModalVisibel={\n                                                this.setModalVisibel\n                                            }\n                                        />\n                                    </li>\n                                );\n                            } else if (selectCard.datatype === '57' && selectCard.dataval){ //自定义档案\n                                return this.renderCustomDocRefer();\n                            } else {\n                                return (\n                                    <li>\n                                        {this.getMyInput(\n                                            langCheck('ZoneSetting-000084', 'pages', json),/* 国际化处理： 默认取值*/\n                                            'defaultvalue'\n                                        )}\n                                    </li>\n                                );\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000114', 'pages', json)}</li>\n                        {/* /* 国际化处理： 默认系统变量*/}\n                        <li>\n                            {this.getMySelect(\n                                utilService.defaultvarObj,\n                                'defaultvar'\n                            )}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000115', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示颜色*/}\n                        <li>\n                            {this.getMySelect(colorObj(), 'color')}\n                        </li>\n                        {/* 1909新增是否可修改字段 */}\n                        {/* {this.renderCanEditFields()} */}\n                    </ul>\n                </TabPane>\n                <TabPane tab={langCheck('ZoneSetting-000107', 'pages', json)} key=\"2\">\n                    {/* /* 国际化处理： 高级属性*/}\n                    <ul className=\"basic-property\">\n                        <li>{langCheck('ZoneSetting-000078', 'pages', json)}</li>\n                        {/* /* 国际化处理： 数据类型*/}\n                        {/* 元数据，禁止设置datatype属性，除了56自定义项*/}\n                        {(() => {\n                            if (isMetaData) {\n                                if (selectCard.isdefined) {\n                                    //通过isdefined判断是否为自定义项，可以选择数据类型\n                                    return (\n                                        <li>\n                                            {this.getMySelect(\n                                                dataTypeObj(),\n                                                'datatype'\n                                            )}\n                                        </li>\n                                    );\n                                } else {\n                                    let showDataTypeName = utilService.getObjNameByDatatype(\n                                        selectCard.datatype,\n                                        dataTypeObj()\n                                    );\n                                    showDataTypeName =\n                                        showDataTypeName === ''\n                                            ? selectCard.datatype\n                                            : showDataTypeName;\n                                    return <li>{showDataTypeName}</li>;\n                                }\n                            } else {\n                                return (\n                                    <li>\n                                        {this.getMySelect(\n                                            dataTypeObj(),\n                                            'datatype'\n                                        )}\n                                    </li>\n                                );\n                            }\n                        })()}\n                        <li>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                        {/* /* 国际化处理： 类型设置*/}\n                        {(() => {\n                            switch (true) {\n                                case selectCard.datatype === '204': //参照\n                                    return (\n                                        <li>\n                                            {this.getMySearch(\n                                                'refname',\n                                                'referModalVisibel'\n                                            )}\n                                            <ReferModal\n                                                handleSelectChange={\n                                                    this.handleSelectChange\n                                                }\n\n                                                dataval={selectCard.dataval}\n                                                refname={selectCard.refname}\n                                                iscode={selectCard.iscode}\n                                                modalVisibel={\n                                                    this.state.referModalVisibel\n                                                }\n                                                setModalVisibel={\n                                                    this.setModalVisibel\n                                                }\n                                            />\n                                        </li>\n                                    );\n                                case selectCard.datatype === '31' ||\n                                    selectCard.datatype === '52' ||\n                                    selectCard.datatype === '4': //31小数、4整数、52金额\n                                    return this.renderMoneyModal();\n                                case selectCard.datatype === '57': //自定义档案\n                                    return (\n                                        <li>\n                                            {this.getMySearch(\n                                                'dataval',\n                                                'customModalVisibel'\n                                            )}\n                                            <CustomModal\n                                                handleSelectChange={\n                                                    this.handleSelectChange\n                                                }\n                                                initVal={selectCard.dataval}\n                                                refname={selectCard.refname}\n                                                iscodeVal={selectCard.iscode} //焦点离开后参照显示编码\n                                                // refname={this.refname.bind(this)}\n                                                modalVisibel={\n                                                    this.state.customModalVisibel\n                                                }\n                                                setModalVisibel={\n                                                    this.setModalVisibel\n                                                }\n                                            />\n                                        </li>\n                                    );\n                                case selectCard.datatype === '203': //枚举\n                                    return (\n                                        <li>\n                                            {this.getMyInput(\n                                                langCheck('ZoneSetting-000022', 'pages', json),/* 国际化处理： 类型设置*/\n                                                'showdataval'//枚举时显示'showdataval'为思康多语显示传值\n                                            )}\n                                        </li>\n                                    );\n                                case selectCard.datatype === '32': //逻辑\n                                    return (\n                                        <li>\n                                            {this.getMyInput(\n                                                langCheck('ZoneSetting-000022', 'pages', json),/* 国际化处理： 类型设置*/\n                                                'showdataval'//枚举时显示'showdataval'为思康多语显示传值\n                                            )}\n                                        </li>\n                                    );\n                                default:\n                                    return (\n                                        <li>\n                                            {this.getMyInput(\n                                                langCheck('ZoneSetting-000022', 'pages', json),/* 国际化处理： 类型设置*/\n                                                'dataval'\n                                            )}\n                                        </li>\n                                    );\n                            }\n                        })()}\n                        {/* 隐藏显示值 */}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举，32为逻辑\n                                    return (\n                                        <li style={{ display: 'none' }}>{langCheck('ZoneSetting-000022', 'pages', json)}</li>\n                                    );\n                                }\n                            })()\n                        }\n                        {/* /* 国际化处理： 类型设置*/}\n                        {\n                            (() => {\n                                if (selectCard.datatype == '203' || selectCard.datatype == '32') {//203为枚举，32为逻辑\n                                    return (\n                                        <li style={{ display: 'none' }}>{this.getMyInput(langCheck('ZoneSetting-000022', 'pages', json), 'dataval')}</li>\n                                    );\n                                }\n                            })()\n                        }\n\n                        {(() => {\n                            if (isMetaData) {\n                                //通过isdefined判断是否为自定义项，可以选择数据类型\n                                if (!selectCard.isdefined) {\n                                    return (\n                                        <li style={{ display: isShowRelateMeta }}>\n                                            {langCheck('ZoneSetting-000071', 'pages', json)}\n                                            {/* /* 国际化处理： 元数据编辑关联项*/}\n                                        </li>\n                                    );\n                                }\n                            }\n                        })()}\n                        {(() => {\n                            if (isMetaData) {\n                                //通过isdefined判断是否为自定义项，可以选择数据类型\n                                if (!selectCard.isdefined) {\n                                    return (\n                                        <li style={{ display: isShowRelateMeta }}>\n                                            {this.getMySearch(\n                                                'relatemeta',\n                                                'relateMetaModalVisibel'\n                                            )}\n                                            <RelateMetaModal\n                                                cards={areaCardList}\n                                                handleSelectChange={\n                                                    this.handleSelectChange\n                                                }\n                                                initVal={selectCard.relatemeta}\n                                                modalVisibel={\n                                                    this.state\n                                                        .relateMetaModalVisibel\n                                                }\n                                                setModalVisibel={\n                                                    this.setModalVisibel\n                                                }\n                                            />\n                                        </li>\n                                    );\n                                }\n                            }\n                        })()}\n\n                        <li>{langCheck('ZoneSetting-000098', 'pages', json)}</li>\n                        {/* /* 国际化处理： 组件类型*/}\n                        <li>\n                            {this.getMySelect(\n                                utilService.getItemtypeObjByDatatype(\n                                    selectCard.datatype\n                                ),\n                                'itemtype'\n                            )}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000116', 'pages', json)}</li>\n                        {/* /* 国际化处理： 显示公式*/}\n                        <li>{this.getMyFormulaSearch('showformula')}</li>\n                        <li>{langCheck('ZoneSetting-000117', 'pages', json)}</li>\n                        {/* /* 国际化处理： 编辑公式*/}\n                        <li>{this.getMyFormulaSearch('editformula')}</li>\n\n                        <li>{langCheck('ZoneSetting-000118', 'pages', json)}</li>\n                        {/* /* 国际化处理： 验证公式*/}\n                        <li>{this.getMyFormulaSearch('validateformula')}</li>\n\n                        <li>{langCheck('ZoneSetting-000119', 'pages', json)}</li>\n                        {/* /* 国际化处理： 超链接*/}\n                        <li>{this.getMyCheckbox('hyperlinkflag')}</li>\n                        <li>{langCheck('ZoneSetting-000120', 'pages', json)}</li>\n                        {/* /* 国际化处理： 元数据访问路径*/}\n                        <li title={selectCard.metapath} className=\"metapath\">\n                            {selectCard.metapath}\n                        </li>\n                        <li>{langCheck('ZoneSetting-000101', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000101', 'pages', json), 'define1')}</li>\n                        {/* /* 国际化处理： 自定义1*/}\n                        <li>{langCheck('ZoneSetting-000102', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000102', 'pages', json), 'define2')}</li>\n                        {/* /* 国际化处理： 自定义2*/}\n                        <li>{langCheck('ZoneSetting-000103', 'pages', json)}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                        <li>{this.getMyInput(langCheck('ZoneSetting-000103', 'pages', json), 'define3')}</li>\n                        {/* /* 国际化处理： 自定义3*/}\n                    </ul>\n                </TabPane>\n            </Tabs>\n        );\n    };\n\n    //批量设置修改单元格数据\n    onCellChange = (index, property) => {\n        return value => {\n            let { batchSource } = this.props;\n            batchSource = _.cloneDeep(batchSource);\n            let target = batchSource[index];\n            if (target) {\n                target[property] = value;\n                this.props.updateBatchSource(batchSource);\n            }\n        };\n    };\n\n    //公式编辑器确定事件\n    handleFormulaOkClick = (val, formulaType) => {\n        const { index, code } = this.props.currentBatchCell;\n        //批量设置中设置公式\n        if (_.isEmpty(this.props.selectCard)) {\n            this.onCellChange(index, code)(val);\n        } else { //高级属性中设置公式\n            this.handleSelectChange(val, formulaType);\n        }\n        this.props.toggleFormula(formulaType, false);\n    }\n    render() {\n        const { selectCard, areaList, formula, selectedArea, json } = this.props;\n        // console.log('selectCard======', selectCard);\n        // console.log('areaList======', areaList);\n\n        // 1 判断是否是元数据 2 判断所属的类型是否是查询区  默认是 不是元数据 不是查询区\n        // 处理公式编辑器\n        let result_div;\n        if(_.isEmpty(selectedArea) && _.isEmpty(selectCard)){\n            result_div = null;\n        }else if (!_.isEmpty(selectedArea)) {\n            result_div = <SetTemplateRight json={this.props.json} isImplement={this.props.isImplement}/>;\n        } else {\n            let isMetaData = this.getMetaType(selectCard);\n            let areaType = this.getAreaType(areaList, selectCard);\n            let isSearch = areaType === '0';\n            if (isSearch) {\n                //不区分显示属性和高级属性\n                if (isMetaData) {\n                    //元数据中metapath 和datatype和类型设置 为只读\n                    result_div = this.getDom1();\n                } else {\n                    //非元数据metapath为空且只读，datatype和类型设置 为可以设置\n                    result_div = this.getDom2();\n                }\n            } else {\n                //非查询区，元数据||非元数据\n                result_div = this.getDom3(areaType, isMetaData);\n            }\n        }\n\n        return (\n            <div className=\"template-setting-right-sider template-setting-sider\">\n                <div className=\"sider-content\">\n                    <div className=\"sider-tab\" >{result_div}</div>\n                </div>\n                {/* 显示公式弹框 */}\n                {\n                    formula.showformula && <FormulaEditor\n                        value={selectCard['showformula']}\n                        isValidateOnOK={true}\n                        validateUrl={\n                            '/nccloud/platform/formula/check.do'\n                        }\n                        validateData={{ 'areacodes': formula.regionCode }}\n                        formulaUrl={`/nccloud/platform/formula/control.do`}\n                        treeParam={{\n                            pk_billtype: 'CM02',\n                            bizmodelStyle: 'fip',\n                            classid: ''\n                        }}\n                        noShowAttr={[langCheck('ZoneSetting-000106', 'pages', json)]}/* 国际化处理： 元数据属性*/\n                        show={formula.showformula}\n                        onHide={() => {\n                            this.props.toggleFormula('showformula', false);\n                        }}\n                        attrConfig={formula.tab}\n                        onOk={val => this.handleFormulaOkClick(val, 'showformula')}\n                        onCancel={() => {\n                            this.props.toggleFormula('showformula', false);\n                        }}\n                    />\n                }\n                {/* 编辑公式弹框 */}\n                {\n                    formula.editformula && <FormulaEditor\n                        value={selectCard['editformula']}\n                        isValidateOnOK={true}\n                        validateUrl={\n                            '/nccloud/platform/formula/check.do'\n                        }\n                        validateData={{ 'areacodes': formula.regionCode }}\n                        formulaUrl={`/nccloud/platform/formula/control.do`}\n                        noShowAttr={[langCheck('ZoneSetting-000106', 'pages', json)]}/* 国际化处理： 元数据属性*/\n                        show={formula.editformula}\n                        onHide={() => {\n                            this.props.toggleFormula('editformula', false);\n                        }}\n                        attrConfig={formula.tab}\n                        onOk={val => this.handleFormulaOkClick(val, 'editformula')}\n                        onCancel={() => {\n                            this.props.toggleFormula('editformula', false);\n                        }}\n                    />\n                }\n                {/* 验证公式弹框 */}\n                {\n                    formula.validateformula && <FormulaEditor\n                        value={\n                            selectCard['validateformula']\n                        }\n                        isValidateOnOK={true}\n                        validateUrl={\n                            '/nccloud/platform/formula/check.do'\n                        }\n                        validateData={{ 'areacodes': formula.regionCode }}\n                        formulaUrl={`/nccloud/platform/formula/control.do`}\n                        noShowAttr={[langCheck('ZoneSetting-000106', 'pages', json)]}/* 国际化处理： 元数据属性*/\n                        show={formula.validateformula}\n                        onHide={() => {\n                            this.props.toggleFormula('validateformula', false);\n                        }}\n                        attrConfig={formula.tab}\n                        onOk={val => this.handleFormulaOkClick(val, 'validateformula')}\n                        onCancel={() => {\n                            this.props.toggleFormula('validateformula', false);\n                        }}\n                    />\n                }\n            </div>\n        );\n    }\n}\nexport default connect(\n    state => ({\n        areaList: state.zoneSettingData.areaList,\n        selectCard: state.zoneSettingData.selectCard,\n        formula: state.zoneSettingData.formula,\n        selectedArea: state.zoneSettingData.selectedArea,\n        currentBatchCell: state.zoneSettingData.currentBatchCell,\n        batchSource: state.zoneSettingData.batchSource,\n        zoneFormData: state.zoneSettingData.zoneFormData\n    }),\n    {\n        updateAreaList,\n        updateSelectCard,\n        updateBatchSource,\n        toggleFormula,\n        setFormulaInfo\n    }\n)(MyRightSider);\n","'use strict';\n\nmodule.exports = function isNegativeZero(number) {\n\treturn number === 0 && (1 / number) === -Infinity;\n};\n\n","\nvar content = require(\"!!../../../../_css-loader@1.0.1@css-loader/index.js!../../../../_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../_css-loader@1.0.1@css-loader/index.js!../../../../_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../_css-loader@1.0.1@css-loader/index.js!../../../../_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ant-input-number{font-family:Chinese Quote,-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-variant:tabular-nums;box-sizing:border-box;list-style:none;position:relative;width:100%;height:32px;font-size:14px;line-height:1.5;color:rgba(0,0,0,.65);background-color:#fff;background-image:none;transition:all .3s;margin:0;padding:0;display:inline-block;border:1px solid #d9d9d9;border-radius:4px;width:90px}.ant-input-number::-moz-placeholder{color:#bfbfbf;opacity:1}.ant-input-number:-ms-input-placeholder{color:#bfbfbf}.ant-input-number::-webkit-input-placeholder{color:#bfbfbf}.ant-input-number:focus{border-color:#40a9ff;outline:0;box-shadow:0 0 0 2px rgba(24,144,255,.2);border-right-width:1px!important}textarea.ant-input-number{max-width:100%;height:auto;vertical-align:bottom;transition:all .3s,height 0s;min-height:32px}.ant-input-number-lg{padding:6px 11px;height:40px}.ant-input-number-sm{padding:1px 7px;height:24px}.ant-input-number-handler{text-align:center;line-height:0;height:50%;overflow:hidden;color:rgba(0,0,0,.45);position:relative;transition:all .1s linear;display:block;width:100%;font-weight:700}.ant-input-number-handler:active{background:#f4f4f4}.ant-input-number-handler:hover .ant-input-number-handler-down-inner,.ant-input-number-handler:hover .ant-input-number-handler-up-inner{color:#40a9ff}.ant-input-number-handler-down-inner,.ant-input-number-handler-up-inner{font-style:normal;vertical-align:-.125em;text-align:center;text-transform:none;line-height:1;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;line-height:12px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:absolute;width:12px;height:12px;transition:all .1s linear;display:inline-block;font-size:12px;font-size:7px\\\\9;-webkit-transform:scale(.58333333) rotate(0deg);transform:scale(.58333333) rotate(0deg);right:4px;color:rgba(0,0,0,.45)}.ant-input-number-handler-down-inner svg,.ant-input-number-handler-up-inner svg{display:block}.ant-input-number-handler-down-inner:before,.ant-input-number-handler-up-inner:before{display:none}.ant-input-number-handler-down-inner .ant-input-number-handler-down-inner-icon,.ant-input-number-handler-down-inner .ant-input-number-handler-up-inner-icon,.ant-input-number-handler-up-inner .ant-input-number-handler-down-inner-icon,.ant-input-number-handler-up-inner .ant-input-number-handler-up-inner-icon{display:block}:root .ant-input-number-handler-down-inner,:root .ant-input-number-handler-up-inner{font-size:12px}.ant-input-number-focused,.ant-input-number:hover{border-color:#40a9ff;border-right-width:1px!important}.ant-input-number-focused{outline:0;box-shadow:0 0 0 2px rgba(24,144,255,.2)}.ant-input-number-disabled{background-color:#f5f5f5;opacity:1;cursor:not-allowed;color:rgba(0,0,0,.25)}.ant-input-number-disabled:hover{border-color:#e6d8d8;border-right-width:1px!important}.ant-input-number-disabled .ant-input-number-input{cursor:not-allowed}.ant-input-number-disabled .ant-input-number-handler-wrap{display:none}.ant-input-number-input{width:100%;text-align:left;outline:0;-moz-appearance:textfield;height:30px;transition:all .3s linear;background-color:transparent;border:0;border-radius:4px;padding:0 11px}.ant-input-number-input::-moz-placeholder{color:#bfbfbf;opacity:1}.ant-input-number-input:-ms-input-placeholder{color:#bfbfbf}.ant-input-number-input::-webkit-input-placeholder{color:#bfbfbf}.ant-input-number-lg{padding:0;font-size:16px}.ant-input-number-lg input{height:38px}.ant-input-number-sm{padding:0}.ant-input-number-sm input{height:22px;padding:0 7px}.ant-input-number-handler-wrap{border-left:1px solid #d9d9d9;width:22px;height:100%;background:#fff;position:absolute;top:0;right:0;opacity:0;border-radius:0 4px 4px 0;transition:opacity .24s linear .1s}.ant-input-number-handler-wrap:hover .ant-input-number-handler{height:40%}.ant-input-number:hover .ant-input-number-handler-wrap{opacity:1}.ant-input-number-handler-up{cursor:pointer}.ant-input-number-handler-up-inner{top:50%;margin-top:-5px;text-align:center}.ant-input-number-handler-up:hover{height:60%!important}.ant-input-number-handler-down{border-top:1px solid #d9d9d9;top:0;cursor:pointer}.ant-input-number-handler-down-inner{top:50%;margin-top:-6px;text-align:center}.ant-input-number-handler-down:hover{height:60%!important}.ant-input-number-handler-down-disabled,.ant-input-number-handler-up-disabled{cursor:not-allowed}.ant-input-number-handler-down-disabled:hover .ant-input-number-handler-down-inner,.ant-input-number-handler-up-disabled:hover .ant-input-number-handler-up-inner{color:rgba(0,0,0,.25)}\", \"\"]);\n\n// exports\n","import React, { Component } from \"react\";\nimport { InputNumber, Button, Tooltip } from \"antd\";\nimport HotKeysModal from \"Components/HotKeysModal\";\nimport Notice from \"Components/Notice\";\nimport { langCheck } from \"Pub/js/utils\";\nimport { getMulti } from \"Pub/js/getMulti\";\n//整数、小数、金融类型模态框组件类\nexport default class MoneyModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            initVal: this.props.initVal,\n            small: \"\",\n            big: \"\",\n            customScale: \"\",\n            json: {}\n        };\n    }\n    //模态框显示，进行数值的初始化\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.modalVisibel !== true) {\n            return;\n        } else {\n            this.setState({ initVal: nextProps.initVal }, () => {\n                let { datatype } = nextProps;\n                let { initVal } = this.state;\n                //如果初始值是空\n                if (initVal === \"\" || initVal === null) {\n                    this.setState({\n                        customScale: datatype === \"4\" ? 0 : 2,\n                        small: \"\",\n                        big: \"\"\n                    });\n                } else {\n                    let initArray = initVal && initVal.split(\",\");\n                    if (datatype === \"4\") {\n                        //数据类型为整数\n                        this.setState({\n                            customScale: 0,\n                            small: initArray && initVal.length === 3 ? initArray[1] : initVal.length === 2 ? initArray[0] : \"\", //兼容类型设置长度是3的情况\n                            big: initArray ? initArray[initArray.length - 1] : \"\"\n                        });\n                    } else {\n                        //小数、金额\n                        this.setState({\n                            customScale: initArray ? initArray[0] : 31,\n                            small: initArray ? initArray[1] : \"\",\n                            big: initArray ? initArray[2] : \"\"\n                        });\n                    }\n                }\n            });\n        }\n    }\n    //设置数值模态框的是否显示\n    showModalHidden = () => {\n        this.props.setModalVisibel(\"moneyModalVisibel\", false);\n    };\n    //设置dataval字段\n    onOkDialog = () => {\n        let { small, big, customScale, json } = this.state;\n        let { datatype } = this.props;\n        let result;\n        if (small !== \"\" && big !== \"\") {\n            if (Number(small) >= Number(big)) {\n                return Notice({\n                    status: \"error\",\n                    msg: langCheck(\n                        \"ZoneSetting-000056\",\n                        \"pages\",\n                        json\n                    ) /* 国际化处理： 所选的最小值与最大值不匹配*/\n                });\n            }\n        }\n        if (datatype === \"4\") {\n            //整数\n            result = `${small},${big}`;\n        } else {\n            result = `${customScale},${small},${big}`;\n        }\n        this.props.handleSelectChange(result, \"dataval\");\n        this.showModalHidden();\n    };\n    /**\n     * 数值输入框字符修改时\n     * @param {String} key\n     * @param {String} val\n     */\n    saveValue = (key, val) => {\n        if (_.isNull(val) || _.isUndefined(val)) {\n            val = \"\";\n        }\n        this.setState({ [key]: val });\n    };\n\n    componentDidMount() {\n        //多语\n        let callback = json => {\n            // console.log('json', json);\n            this.setState({\n                json: json\n            });\n        };\n        getMulti({\n            moduleId: \"ZoneSetting\",\n            // currentLocale: 'zh-CN',\n            domainName: \"workbench\",\n            callback\n        });\n    }\n\n    render() {\n        let { customScale, small, big, json } = this.state;\n        let { datatype } = this.props;\n        return (\n            <div className=\"myZoneModal\">\n                <HotKeysModal\n                    closable={false}\n                    customHeader={langCheck(\n                        \"ZoneSetting-000022\",\n                        \"pages\",\n                        json\n                    )} /* 国际化处理： 类型设置*/\n                    // mask={false}\n                    wrapClassName=\"zonesetting-moneyModal\"\n                    visible={this.props.modalVisibel}\n                    onOk={this.onOkDialog}\n                    destroyOnClose={true}\n                    onCancel={this.showModalHidden}\n                    footer={[\n                        <Tooltip\n                            placement=\"top\"\n                            overlayClassName=\"tootip-default\"\n                            title={`${langCheck(\n                                \"ZoneSetting-000005\",\n                                \"pages\",\n                                json\n                            )}(Alt + Y)`}\n                        >\n                            <Button\n                                key=\"submit\"\n                                type=\"primary\"\n                                onClick={this.onOkDialog}\n                            >\n                                {langCheck(\"ZoneSetting-000005\", \"pages\", json)}\n                                (<span className=\"underline\">Y</span>)\n                                {/* /* 国际化处理： 确定*/}\n                            </Button>\n                        </Tooltip>,\n                        <Tooltip\n                            placement=\"top\"\n                            overlayClassName=\"tootip-default\"\n                            title={`${langCheck(\n                                \"ZoneSetting-000006\",\n                                \"pages\",\n                                json\n                            )}(Alt + N)`}\n                        >\n                            <Button key=\"back\" onClick={this.showModalHidden}>\n                                {langCheck(\"ZoneSetting-000006\", \"pages\", json)}\n                                (<span className=\"underline\">N</span>)\n                                {/* /* 国际化处理： 取消*/}\n                            </Button>\n                        </Tooltip>\n                    ]}\n                >\n                    {(() => {\n                        if (datatype !== \"4\") {\n                            //不是整数时\n                            return (\n                                <div>\n                                    <div className=\"descrip_label\">\n                                        {langCheck(\n                                            \"ZoneSetting-000057\",\n                                            \"pages\",\n                                            json\n                                        )}{\" \"}\n                                        {/* /* 国际化处理： 精度设置*/}\n                                    </div>\n                                    <div className=\"mdcontent\">\n                                        <div>\n                                            <span className=\"money-label\">\n                                                {\" \"}\n                                                {langCheck(\n                                                    \"ZoneSetting-000058\",\n                                                    \"pages\",\n                                                    json\n                                                )}\n                                                {/* /* 国际化处理： 自定义精度:*/}\n                                            </span>\n                                            <InputNumber\n                                                precision={0}\n                                                min={0}\n                                                max={8}\n                                                value={customScale}\n                                                onChange={value => {\n                                                    this.saveValue(\n                                                        \"customScale\",\n                                                        value\n                                                    );\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        }\n                    })()}\n                    <div>\n                        <div className=\"descrip_label\">\n                            {langCheck(\"ZoneSetting-000059\", \"pages\", json)}{\" \"}\n                        </div>\n                        {/* /* 国际化处理： 取值设置*/}\n                        <div className=\"mdcontent\">\n                            <div>\n                                <span className=\"money-label\">\n                                    {langCheck(\n                                        \"ZoneSetting-000060\",\n                                        \"pages\",\n                                        json\n                                    )}\n                                </span>\n                                {/* /* 国际化处理： 最小值:*/}\n                                <InputNumber\n                                    precision={customScale}\n                                    value={small}\n                                    onChange={value => {\n                                        this.saveValue(\"small\", value);\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <span className=\"money-label\">\n                                    {langCheck(\n                                        \"ZoneSetting-000061\",\n                                        \"pages\",\n                                        json\n                                    )}\n                                </span>\n                                {/* /* 国际化处理： 最大值:*/}\n                                <InputNumber\n                                    value={big}\n                                    precision={customScale}\n                                    onChange={value => {\n                                        this.saveValue(\"big\", value);\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </HotKeysModal>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Ajax from \"Pub/js/ajax\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Select, Checkbox, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from \"Pub/js/getMulti\";\r\nconst Option = Select.Option;\r\n//参照模态框组件类\r\nclass ReferModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pk_refinfo: \"\",\r\n            refname: this.props.refname,\r\n            iscode: this.props.iscode,\r\n            option: [],\r\n            json: {}\r\n        };\r\n        this.onOkDialog = this.onOkDialog.bind(this);\r\n    }\r\n    //ajax查询所有的参照\r\n    componentWillReceiveProps(nextProps) {\r\n        let { json } = this.state;\r\n        if (nextProps.modalVisibel !== true) {\r\n            return;\r\n        } else {\r\n            let dataval = this.props.dataval;\r\n            if (!_.isEmpty(dataval)) {\r\n                let pk_refinfo = dataval.split(\",\")[0];\r\n                this.setState({\r\n                    pk_refinfo: pk_refinfo,\r\n                    refname: nextProps.refname,\r\n                    iscode: nextProps.iscode\r\n                });\r\n            }\r\n            let url, data;\r\n            url = \"/nccloud/platform/templet/queryrefinfo.do\";\r\n            data = {\r\n                defdoc: nextProps.selectCard && nextProps.selectCard.metaid\r\n            };\r\n            Ajax({\r\n                url: url,\r\n                data: data,\r\n                info: {\r\n                    name: langCheck(\r\n                        \"ZoneSetting-000062\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 参照*/,\r\n                    action: langCheck(\r\n                        \"ZoneSetting-000063\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 查询参照*/\r\n                },\r\n                success: ({ data }) => {\r\n                    if (data.success && data.data) {\r\n                        this.setState({ option: data.data });\r\n                    } else {\r\n                        Notice({ status: \"error\", msg: data.data.true });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //设置参照模态框隐藏\r\n    showModalHidden = () => {\r\n        this.props.setModalVisibel(\"referModalVisibel\", false);\r\n    };\r\n    async onOkDialog() {\r\n        let { refname, iscode, pk_refinfo, option, json } = this.state;\r\n        const mycode = iscode ? \"Y\" : \"N\";\r\n        const filterOption = _.filter(option, o => {\r\n            return o.pk_refinfo === pk_refinfo;\r\n        });\r\n        if (filterOption) {\r\n            await this.props.handleSelectChange(\r\n                filterOption[0].refpath,\r\n                \"refcode\"\r\n            );\r\n        }\r\n        //设置参照refname\r\n        await this.props.handleSelectChange(refname, \"refname\");\r\n        // 设置参照名称\r\n        await this.props.handleSelectChange(\r\n            `${pk_refinfo},code=${mycode}`,\r\n            \"dataval\"\r\n        );\r\n        // 设置iscode\r\n        await this.props.handleSelectChange(iscode, \"iscode\");\r\n        //classid传值\r\n        // let classid = this.props.selectCard.metaid;\r\n        Ajax({\r\n            url: `/nccloud/platform/templet/getMetaByRefName.do`,\r\n            info: {\r\n                scode: langCheck(\r\n                    \"ZoneSetting-000064\",\r\n                    \"pages\",\r\n                    json\r\n                ) /* 国际化处理： 关联元数据*/,\r\n                action: langCheck(\r\n                    \"ZoneSetting-000065\",\r\n                    \"pages\",\r\n                    json\r\n                ) /* 国际化处理： 获取元数据数据*/\r\n            },\r\n            data: {\r\n                iscode: mycode,\r\n                refname: refname\r\n                // classid: classid  todo\r\n            },\r\n            success: res => {\r\n                if (res) {\r\n                    let { data, success } = res.data;\r\n                    if (success && data) {\r\n                        // 设置元数据属性\r\n                        this.props.handleSelectChange(data, \"metadataproperty\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.showModalHidden();\r\n    }\r\n    //选择参照\r\n    handleSelectChange = (pk_refinfo, name) => {\r\n        this.setState({ pk_refinfo: pk_refinfo, refname: name });\r\n    };\r\n    //勾选设置iscode\r\n    checkboxChange = (e, type) => {\r\n        let val;\r\n        val = e.target.checked;\r\n        this.setState({ iscode: val });\r\n    };\r\n\r\n    componentDidMount() {\r\n        //多语\r\n        let callback = json => {\r\n            // console.log('json', json);\r\n            this.setState({\r\n                json: json\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: \"ZoneSetting\",\r\n            // currentLocale: 'zh-CN',\r\n            domainName: \"workbench\",\r\n            callback\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { iscode, option, refname, pk_refinfo, json } = this.state;\r\n        // console.log(refname, iscode, this.props.selectCard);\r\n        return (\r\n            <div className=\"myZoneModal\">\r\n                <HotKeysModal\r\n                    // closable={false}\r\n                    customHeader={langCheck(\r\n                        \"ZoneSetting-000066\",\r\n                        \"pages\",\r\n                        json\r\n                    )} /* 国际化处理： 参照类型设置*/\r\n                    // mask={false}\r\n                    wrapClassName=\"zonesetting-referModal\"\r\n                    visible={this.props.modalVisibel}\r\n                    onOk={this.onOkDialog}\r\n                    destroyOnClose={true}\r\n                    onCancel={this.showModalHidden}\r\n                    footer={[\r\n                        <Tooltip\r\n                            placement=\"top\"\r\n                            overlayClassName=\"tootip-default\"\r\n                            title={`${langCheck(\r\n                                \"ZoneSetting-000005\",\r\n                                \"pages\",\r\n                                json\r\n                            )}(Alt + Y)`}\r\n                        >\r\n                            <Button\r\n                                key=\"submit\"\r\n                                // disabled={}\r\n                                type=\"primary\"\r\n                                onClick={this.onOkDialog}\r\n                            >\r\n                                {langCheck(\"ZoneSetting-000005\", \"pages\", json)}\r\n                                (<span className=\"underline\">Y</span>)\r\n                                {/* /* 国际化处理： 确定*/}\r\n                            </Button>\r\n                        </Tooltip>,\r\n                        <Tooltip\r\n                            placement=\"top\"\r\n                            overlayClassName=\"tootip-default\"\r\n                            title={`${langCheck(\r\n                                \"ZoneSetting-000006\",\r\n                                \"pages\",\r\n                                json\r\n                            )}(Alt + N)`}\r\n                        >\r\n                            <Button key=\"back\" onClick={this.showModalHidden}>\r\n                                {langCheck(\"ZoneSetting-000006\", \"pages\", json)}\r\n                                (<span className=\"underline\">N</span>)\r\n                                {/* /* 国际化处理： 取消*/}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    ]}\r\n                >\r\n                    <div>\r\n                        <div className=\"descrip_label\">\r\n                            {langCheck(\"ZoneSetting-000067\", \"pages\", json)}{\" \"}\r\n                        </div>\r\n                        {/* /* 国际化处理： 参照设置*/}\r\n                        <div className=\"mdcontent\">\r\n                            <div>\r\n                                <span className=\"refer_label\">\r\n                                    {langCheck(\r\n                                        \"ZoneSetting-000068\",\r\n                                        \"pages\",\r\n                                        json\r\n                                    )}\r\n                                </span>\r\n                                {/* /* 国际化处理： 参照选择:*/}\r\n                                <Select\r\n                                    showSearch\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                    value={pk_refinfo}\r\n                                    onChange={(value, optionObj) => {\r\n                                        console.log(value, optionObj);\r\n                                        this.handleSelectChange(\r\n                                            value,\r\n                                            optionObj.props.children\r\n                                        );\r\n                                    }}\r\n                                    style={{ width: 200 }}\r\n                                >\r\n                                    {option.map((c, index) => {\r\n                                        return (\r\n                                            <Option\r\n                                                key={index}\r\n                                                value={c.pk_refinfo}\r\n                                            >\r\n                                                {c.name}\r\n                                            </Option>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"descrip_label\">\r\n                            {langCheck(\"ZoneSetting-000069\", \"pages\", json)}{\" \"}\r\n                        </div>\r\n                        {/* /* 国际化处理： 关联设置*/}\r\n                        <div className=\"mdcontent\">\r\n                            <div>\r\n                                <span className=\"refer_label\">\r\n                                    {langCheck(\r\n                                        \"ZoneSetting-000070\",\r\n                                        \"pages\",\r\n                                        json\r\n                                    )}\r\n                                    {/* /* 国际化处理： 焦点离开后参照显示编码:*/}\r\n                                </span>\r\n                                <Checkbox\r\n                                    checked={iscode}\r\n                                    onChange={e => {\r\n                                        this.checkboxChange(e);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </HotKeysModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        selectCard: state.zoneSettingData.selectCard\r\n    }),\r\n    {}\r\n)(ReferModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Checkbox, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport DefdocListGridRef from \"Components/Refers/DefdocListGridRef\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from \"Pub/js/getMulti\";\r\n//自定义档案模态框组件类\r\nclass CustomModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initVal: this.props.initVal,\r\n            refname: this.props.refname,\r\n            iscodeVal: this.props.iscodeVal,\r\n            isgrade: \"\", //用于判断自定义档案默认值显示树参照还是列表参照 Y:树参照 N:列表参照\r\n            json: {}\r\n        };\r\n    }\r\n    //更新自定义档案取值\r\n    componentWillReceiveProps(nextProps) {\r\n        // porps发生变化时执行,初始化render时不执行\r\n        this.setState({\r\n            initVal: nextProps.initVal,\r\n            refname: nextProps.refname,\r\n            iscodeVal: nextProps.iscodeVal\r\n        });\r\n    }\r\n    //设置模态框隐藏\r\n    showModalHidden = () => {\r\n        this.props.setModalVisibel(\"customModalVisibel\", false);\r\n    };\r\n    //更新dataval字段\r\n    onOkDialog = () => {\r\n        let { initVal, iscodeVal, refname, isgrade } = this.state;\r\n        this.props.handleSelectChange({\r\n            dataval: initVal,\r\n            iscode: iscodeVal,\r\n            refname,\r\n            defaultvalue: \"\",\r\n            isgrade\r\n        });\r\n        this.showModalHidden();\r\n    };\r\n\r\n    componentDidMount() {\r\n        //多语\r\n        let callback = json => {\r\n            // console.log('json', json);\r\n            this.setState({\r\n                json: json\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: \"ZoneSetting\",\r\n            // currentLocale: 'zh-CN',\r\n            domainName: \"workbench\",\r\n            callback\r\n        });\r\n    }\r\n\r\n    //勾选设置iscode\r\n    checkboxChange = e => {\r\n        let val = e.target.checked;\r\n        this.setState({ iscodeVal: val });\r\n    };\r\n\r\n    render() {\r\n        let { initVal, iscodeVal, refname, json } = this.state;\r\n        return (\r\n            <div className=\"myZoneModal\">\r\n                <HotKeysModal\r\n                    closable={false}\r\n                    title={langCheck(\r\n                        \"ZoneSetting-000022\",\r\n                        \"pages\",\r\n                        json\r\n                    )} /* 国际化处理： 类型设置*/\r\n                    // mask={false}\r\n                    wrapClassName=\"zonesetting-customModal\"\r\n                    visible={this.props.modalVisibel}\r\n                    onOk={this.onOkDialog}\r\n                    destroyOnClose={true}\r\n                    onCancel={this.showModalHidden}\r\n                    // onChange={this.props.refname}\r\n                    footer={[\r\n                        <Tooltip\r\n                            placement=\"top\"\r\n                            overlayClassName=\"tootip-default\"\r\n                            title={`${langCheck(\r\n                                \"ZoneSetting-000005\",\r\n                                \"pages\",\r\n                                json\r\n                            )}(Alt + Y)`}\r\n                        >\r\n                            <Button\r\n                                key=\"submit\"\r\n                                type=\"primary\"\r\n                                onClick={this.onOkDialog}\r\n                            >\r\n                                {langCheck(\"ZoneSetting-000005\", \"pages\", json)}\r\n                                (<span className=\"underline\">Y</span>)\r\n                                {/* /* 国际化处理： 确定*/}\r\n                            </Button>\r\n                        </Tooltip>,\r\n                        <Tooltip\r\n                            placement=\"top\"\r\n                            overlayClassName=\"tootip-default\"\r\n                            title={`${langCheck(\r\n                                \"ZoneSetting-000006\",\r\n                                \"pages\",\r\n                                json\r\n                            )}(Alt + N)`}\r\n                        >\r\n                            <Button key=\"back\" onClick={this.showModalHidden}>\r\n                                {langCheck(\"ZoneSetting-000006\", \"pages\", json)}\r\n                                (<span className=\"underline\">N</span>)\r\n                                {/* /* 国际化处理： 取消*/}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    ]}\r\n                >\r\n                    <div className=\"def-refer\">\r\n                        <DefdocListGridRef\r\n                            value={{\r\n                                refpk: initVal,\r\n                                refname: refname,\r\n                                refcode: \"\"\r\n                            }}\r\n                            placeholder={langCheck(\r\n                                \"ZoneSetting-000023\",\r\n                                \"pages\",\r\n                                json\r\n                            )} /* 国际化处理： 自定义档案*/\r\n                            onChange={val => {\r\n                                this.setState({\r\n                                    initVal: val && val.refpk,\r\n                                    refname: val && val.refname,\r\n                                    isgrade: val && val.values && val.values.isgrade && val.values.isgrade.value\r\n                                });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mdcontent\">\r\n                        <span className=\"refer_label\">\r\n                            {langCheck(\"ZoneSetting-000070\", \"pages\", json)}\r\n                            {/* /* 国际化处理： 焦点离开后参照显示编码:*/}\r\n                        </span>\r\n                        <Checkbox\r\n                            checked={iscodeVal}\r\n                            onChange={this.checkboxChange}\r\n                        />\r\n                    </div>\r\n                </HotKeysModal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        selectCard: state.zoneSettingData.selectCard\r\n    }),\r\n    {}\r\n)(CustomModal);\r\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000061'),/* 国际化处理： 自定义档案定义*/\r\n        placeholder: langCheck('0000PUB-000061'),/* 国际化处理： 自定义档案定义*/\r\n        refCode: \"uapbd.refer.userdef.DefdocListGridRef\",\r\n        queryGridUrl: \"/nccloud/uapbd/userdef/DefdocListGridRef.do\",\r\n        isMultiSelectedEnabled: false,\r\n        columnConfig: [\r\n            {\r\n                name: [langCheck('0000PUB-000062'), langCheck('0000PUB-000063')],/* 国际化处理： 自定义档案编码,自定义档案名称*/\r\n                code: [\"code\", \"name\"]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Ajax from \"Pub/js/ajax\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Tree, Button, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport Svg from \"Components/Svg\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from \"Pub/js/getMulti\";\r\nimport {\r\n    PageLayout,\r\n    PageLayoutLeft,\r\n    PageLayoutRight\r\n} from \"Components/PageLayout\";\r\nconst TreeNode = Tree.TreeNode;\r\n//元数据编辑关联项模态框组件类\r\nclass RelateMetaModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metaTree: [],\r\n            selectTreeNodes: [],\r\n            json: {}\r\n        };\r\n    }\r\n    //异步元数据树的展开请求\r\n    onLoadData = treeNode => {\r\n        let { json } = this.state;\r\n        return new Promise(resolve => {\r\n            if (treeNode.props.children) {\r\n                resolve();\r\n                return;\r\n            }\r\n            Ajax({\r\n                url: `/nccloud/platform/templet/querymetapro.do`,\r\n                info: {\r\n                    name: langCheck(\r\n                        \"ZoneSetting-000017\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 单据模板设置*/,\r\n                    action: langCheck(\r\n                        \"ZoneSetting-000020\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 元数据树结构查询*/\r\n                },\r\n                data: {\r\n                    // metaid: metaid\r\n                    metaid: treeNode.props.refpk\r\n                },\r\n                success: res => {\r\n                    if (res) {\r\n                        let { data, success } = res.data;\r\n                        if (\r\n                            success &&\r\n                            data &&\r\n                            data.rows &&\r\n                            data.rows.length > 0\r\n                        ) {\r\n                            let metaTree = [];\r\n                            data.rows.map((r, index) => {\r\n                                metaTree.push({\r\n                                    ...r,\r\n                                    title: `${r.refcode} ${r.refname}`,\r\n                                    key: `${treeNode.props.myUniqID}.${\r\n                                        r.refcode\r\n                                    }`,\r\n                                    myUniqID: `${treeNode.props.myUniqID}.${\r\n                                        r.refcode\r\n                                    }`,\r\n                                    isLeaf: r.isleaf\r\n                                });\r\n                            });\r\n                            treeNode.props.dataRef.children = [].concat(\r\n                                metaTree\r\n                            );\r\n                            this.setState({\r\n                                metaTree: [...this.state.metaTree]\r\n                            });\r\n                            resolve();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    //进行字符串分割，分割出模态框右侧列表中的的key和value值\r\n    componentWillReceiveProps(nextProps) {\r\n        let { json } = this.state;\r\n        if (nextProps.modalVisibel !== true) {\r\n            return;\r\n        } else {\r\n            const { metaid, relatemeta } = this.props.selectCard;\r\n            let { cards } = this.props;\r\n            if (relatemeta && relatemeta !== \"\") {\r\n                let tmpArr1 = relatemeta.split(\",\");\r\n                let tmpArr2 = [];\r\n                //循环分割出来的数据，再次分割出列表需要的数据{列表code和元数据路径myMetaPath}\r\n                _.forEach(tmpArr1, t => {\r\n                    let tmpArr = t.split(\"=\");\r\n                    tmpArr2.push({\r\n                        code: tmpArr[0],\r\n                        myMetaPath: tmpArr[1]\r\n                    });\r\n                });\r\n                //循环遍历所有列表中每行数据，设置上元数据路径；\r\n                _.forEach(cards, (c, index) => {\r\n                    _.forEach(tmpArr2, t => {\r\n                        if (t.code === c.code) {\r\n                            c.myMetaPath = t.myMetaPath;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            Ajax({\r\n                url: `/nccloud/platform/templet/querymetapro.do`,\r\n                info: {\r\n                    name: langCheck(\r\n                        \"ZoneSetting-000017\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 单据模板设置*/,\r\n                    action: langCheck(\r\n                        \"ZoneSetting-000020\",\r\n                        \"pages\",\r\n                        json\r\n                    ) /* 国际化处理： 元数据树结构查询*/\r\n                },\r\n                data: {\r\n                    metaid: metaid\r\n                },\r\n                success: res => {\r\n                    if (res) {\r\n                        let { data, success } = res.data;\r\n                        if (\r\n                            success &&\r\n                            data &&\r\n                            data.rows &&\r\n                            data.rows.length > 0\r\n                        ) {\r\n                            let metaTree = [];\r\n                            data.rows.map((r, index) => {\r\n                                metaTree.push({\r\n                                    ...r,\r\n                                    title: `${r.refcode} ${r.refname}`,\r\n                                    key: `${r.refcode}`,\r\n                                    myUniqID: `${r.refcode}`,\r\n                                    isLeaf: r.isleaf\r\n                                });\r\n                            });\r\n                            this.setState({ metaTree: metaTree });\r\n                        } else {\r\n                            if (\r\n                                success &&\r\n                                data &&\r\n                                data.rows &&\r\n                                !data.rows.length\r\n                            ) {\r\n                                Notice({\r\n                                    status: \"warning\",\r\n                                    msg: langCheck(\r\n                                        \"ZoneSetting-000021\",\r\n                                        \"pages\",\r\n                                        json\r\n                                    ) /* 国际化处理： 元数据树为空*/\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //隐藏元数据编辑关联项模态框\r\n    showModalHidden = () => {\r\n        let { cards } = this.props;\r\n        _.forEach(cards, (c, i) => {\r\n            if (c.myMetaPath && c.myMetaPath !== \"\") {\r\n                c.myMetaPath = \"\";\r\n            }\r\n        });\r\n        this.props.setModalVisibel(\"relateMetaModalVisibel\", false);\r\n    };\r\n    //字符串拼接，设置relatemeta，{卡片编码，元数据路径}\r\n    onOkDialog = () => {\r\n        let result = \"\";\r\n        let { cards } = this.props;\r\n        _.forEach(cards, (c, i) => {\r\n            if (c.myMetaPath && c.myMetaPath !== \"\") {\r\n                if (result === \"\") {\r\n                    result = `${c.code}=${c.myMetaPath}`;\r\n                } else {\r\n                    result = `${result},${c.code}=${c.myMetaPath}`;\r\n                }\r\n            }\r\n        });\r\n        this.props.handleSelectChange(result, \"relatemeta\");\r\n        this.showModalHidden();\r\n    };\r\n    //递归拼接树结构\r\n    renderTreeNodes = data => {\r\n        return data.map(item => {\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode\r\n                        icon={({ expanded }) => {\r\n                            return (\r\n                                <Svg\r\n                                    width={20}\r\n                                    height={20}\r\n                                    xlinkHref={\r\n                                        expanded\r\n                                            ? \"#icon-wenjianjiadakai\"\r\n                                            : \"#icon-wenjianjia\"\r\n                                    }\r\n                                />\r\n                            );\r\n                        }}\r\n                        switcherIcon={({ expanded }) => {\r\n                            return (\r\n                                <i\r\n                                    className={`font-size-18 iconfont ${\r\n                                        expanded\r\n                                            ? \"icon-shu_zk\"\r\n                                            : \"icon-shushouqi\"\r\n                                    }`}\r\n                                />\r\n                            );\r\n                        }}\r\n                        title={item.title}\r\n                        key={item.key}\r\n                        dataRef={item}\r\n                    >\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            if (item.isLeaf) {\r\n                return (\r\n                    <TreeNode\r\n                        icon={<span className=\"tree-dot\" />}\r\n                        {...item}\r\n                        dataRef={item}\r\n                    />\r\n                );\r\n            } else {\r\n                return (\r\n                    <TreeNode\r\n                        {...item}\r\n                        icon={({ expanded }) => {\r\n                            return (\r\n                                <Svg\r\n                                    width={20}\r\n                                    height={20}\r\n                                    xlinkHref={\r\n                                        expanded\r\n                                            ? \"#icon-wenjianjiadakai\"\r\n                                            : \"#icon-wenjianjia\"\r\n                                    }\r\n                                />\r\n                            );\r\n                        }}\r\n                        switcherIcon={({ expanded }) => {\r\n                            return (\r\n                                <i\r\n                                    className={`font-size-18 iconfont ${\r\n                                        expanded\r\n                                            ? \"icon-shu_zk\"\r\n                                            : \"icon-shushouqi\"\r\n                                    }`}\r\n                                />\r\n                            );\r\n                        }}\r\n                        dataRef={item}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n    };\r\n    //选择某一个树节点\r\n    onSelect = (selectedKeys, info) => {\r\n        this.setState({ selectedKeys, selectTreeNodes: info.selectedNodes });\r\n    };\r\n    //点击模态框右侧的列表某一行，如果数据类型左右侧相等，进行列表中元数据路径的设置\r\n    cardClick = card => {\r\n        let { selectTreeNodes } = this.state;\r\n\r\n        if (selectTreeNodes.length > 0) {\r\n            const tmpDataRef = selectTreeNodes[0].props.dataRef;\r\n            if (tmpDataRef.datatype === card.datatype) {\r\n                card.myMetaPath = tmpDataRef.myUniqID;\r\n            } else {\r\n                return;\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        this.setState({ selectedKeys: [], selectTreeNodes: [] });\r\n    };\r\n    //删除模态框右侧列表的某一行值\r\n    deleteMyMetaPath = (card, index) => {\r\n        card.myMetaPath = \"\";\r\n        this.setState({ selectedKeys: [], selectTreeNodes: [] });\r\n    };\r\n    /**\r\n     * 左侧元数据树的选中节点与右侧列表的每一行进行数据类型比对，设置不同透明度\r\n     * @param {String} cardDataType 右侧列表某一行数据的数据类型\r\n     * @param {String} selectTreeDataType 元数据树中被选中的节点的数据类型\r\n     * @return {Number} result 透明度\r\n     */\r\n    getOpacity = (cardDataType, selectTreeDataType) => {\r\n        let result = 1;\r\n        if (selectTreeDataType !== \"\") {\r\n            if (cardDataType !== selectTreeDataType) {\r\n                result = 0.5;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    componentDidMount() {\r\n        //多语\r\n        let callback = json => {\r\n            // console.log('json', json);\r\n            this.setState({\r\n                json: json\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: \"ZoneSetting\",\r\n            // currentLocale: 'zh-CN',\r\n            domainName: \"workbench\",\r\n            callback\r\n        });\r\n    }\r\n    render() {\r\n        const { metaTree, selectTreeNodes, json } = this.state;\r\n        const { cards } = this.props;\r\n        let selectTreeNodeDatatype = \"\";\r\n        if (selectTreeNodes.length > 0) {\r\n            selectTreeNodeDatatype = selectTreeNodes[0].props.dataRef.datatype;\r\n        }\r\n        return (\r\n            <HotKeysModal\r\n                // closable={false}\r\n                title={\r\n                    <div>\r\n                        {langCheck(\"ZoneSetting-000071\", \"pages\", json)}\r\n                        {/* /* 国际化处理： 元数据编辑关联项*/}\r\n                        <span style={{ fontSize: \"13px\", marginLeft: \"10px\" }}>\r\n                            {langCheck(\"ZoneSetting-000072\", \"pages\", json)}\r\n                            {/* /* 国际化处理： 请在点击选择左侧树，然后点击选择右侧列表*/}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                // mask={false}\r\n                wrapClassName=\"realate-meta-modal\"\r\n                visible={this.props.modalVisibel}\r\n                onOk={this.onOkDialog}\r\n                destroyOnClose={true}\r\n                onCancel={this.showModalHidden}\r\n                width={\"80%\"}\r\n                bodyHeight={`${document.body.clientHeight * 0.72}px`}\r\n                // style={{ top: 20 }}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000005\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            // disabled={}\r\n                            type=\"primary\"\r\n                            onClick={this.onOkDialog}\r\n                        >\r\n                            {langCheck(\"ZoneSetting-000005\", \"pages\", json)}(\r\n                            <span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/}\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000006\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck(\"ZoneSetting-000006\", \"pages\", json)}(\r\n                            <span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <PageLayout>\r\n                    <PageLayoutLeft>\r\n                        <div className=\"sider-tree\">\r\n                            <Tree\r\n                                loadData={this.onLoadData}\r\n                                showLine\r\n                                showIcon\r\n                                onSelect={this.onSelect}\r\n                                selectedKeys={this.state.selectedKeys}\r\n                            >\r\n                                {this.renderTreeNodes(metaTree)}\r\n                            </Tree>\r\n                        </div>\r\n                    </PageLayoutLeft>\r\n                    <PageLayoutRight>\r\n                        <div className=\"sider-list\">\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            {langCheck(\r\n                                                \"ZoneSetting-000073\",\r\n                                                \"pages\",\r\n                                                json\r\n                                            )}\r\n                                        </th>\r\n                                        {/* /* 国际化处理： 列*/}\r\n                                        <th>\r\n                                            {langCheck(\r\n                                                \"ZoneSetting-000074\",\r\n                                                \"pages\",\r\n                                                json\r\n                                            )}\r\n                                        </th>\r\n                                        {/* /* 国际化处理： 元数据路径*/}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {cards.map((c, i) => {\r\n                                        //必须是元数据并且不包含.,也就是根节点或者子表的根节点\r\n                                        //注意：最新逻辑去掉只显示根节点或者子表的根节点的逻辑\r\n                                        if (c.metapath && c.metapath !== \"\") {\r\n                                            return (\r\n                                                <tr\r\n                                                    key={i}\r\n                                                    onClick={e => {\r\n                                                        this.cardClick(c);\r\n                                                    }}\r\n                                                    style={{\r\n                                                        opacity: this.getOpacity(\r\n                                                            c.datatype,\r\n                                                            selectTreeNodeDatatype\r\n                                                        )\r\n                                                    }}\r\n                                                >\r\n                                                    <td>{c.label}</td>\r\n                                                    {(() => {\r\n                                                        if (\r\n                                                            c.myMetaPath &&\r\n                                                            c.myMetaPath !== \"\"\r\n                                                        ) {\r\n                                                            return (\r\n                                                                <td>\r\n                                                                    <div className=\"close-and-text\">\r\n                                                                        <Icon\r\n                                                                            type=\"close\"\r\n                                                                            onClick={() => {\r\n                                                                                this.deleteMyMetaPath(\r\n                                                                                    c,\r\n                                                                                    i\r\n                                                                                );\r\n                                                                            }}\r\n                                                                        />\r\n                                                                        &nbsp;\r\n                                                                        {\r\n                                                                            c.myMetaPath\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            );\r\n                                                        } else {\r\n                                                            return <td />;\r\n                                                        }\r\n                                                    })()}\r\n                                                </tr>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </PageLayoutRight>\r\n                </PageLayout>\r\n            </HotKeysModal>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        selectCard: state.zoneSettingData.selectCard\r\n    }),\r\n    {}\r\n)(RelateMetaModal);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport * as platform from \"nc-lightapp-front\";\r\nimport Ajax from \"Pub/js/ajax\";\r\nimport * as utilService from \"./utilService\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from \"Pub/js/getMulti\";\r\nconst { high } = platform;\r\nconst { Refer } = high;\r\n//默认取值模态框组件类\r\nexport default class DefaultValueModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultvalueObj: {},\r\n            json: {}\r\n        };\r\n        this.onOkDialog = this.onOkDialog.bind(this);\r\n    }\r\n    //传入的字符串进行分割，更新模态框内的默认取值对象\r\n    componentWillReceiveProps(nextProps) {\r\n        let { json } = this.state;\r\n        if (nextProps.modalVisibel !== true) {\r\n            return;\r\n        } else {\r\n            let defaultvalueObj = {};\r\n            const { defaultvalue, isMultiSelectedEnabled, refname } = nextProps;\r\n            //如果默认取值不为空，进行等号分割字符串\r\n            if (defaultvalue) {\r\n                const tmpDefaultvalueList = defaultvalue.split(\"=\");\r\n                defaultvalueObj = {\r\n                    display: tmpDefaultvalueList[0],\r\n                    value: tmpDefaultvalueList[1]\r\n                };\r\n            }\r\n            //如果是查询区域，发送ajax请求获取参照的默认值\r\n            if (nextProps.areatype === \"0\") {\r\n                Ajax({\r\n                    url: `/nccloud/platform/templet/getRefDefaultSel.do`,\r\n                    info: {\r\n                        name: langCheck(\r\n                            \"ZoneSetting-000017\",\r\n                            \"pages\",\r\n                            json\r\n                        ) /* 国际化处理： 单据模板设置*/,\r\n                        action: langCheck(\r\n                            \"ZoneSetting-000024\",\r\n                            \"pages\",\r\n                            json\r\n                        ) /* 国际化处理： 查询参照默认下拉选项*/\r\n                    },\r\n                    data: [refname],\r\n                    success: res => {\r\n                        if (res) {\r\n                            let { data, success } = res.data;\r\n                            let refcode;\r\n                            if (success && data) {\r\n                                _.forEach(data, d => {\r\n                                    refcode = d.refpath;\r\n                                    //给code赋值\r\n                                    // this.setState({\r\n                                    //     code: d.code\r\n                                    // });\r\n                                });\r\n                                this.setState({\r\n                                    refcode: refcode,\r\n                                    defaultvalueObj: defaultvalueObj,\r\n                                    isMultiSelectedEnabled: isMultiSelectedEnabled\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    refcode: nextProps.refcode,\r\n                    defaultvalueObj: defaultvalueObj,\r\n                    isMultiSelectedEnabled: isMultiSelectedEnabled\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //设置模态框的隐藏\r\n    showModalHidden = () => {\r\n        this.props.setModalVisibel(\"defaultValueModalVisibel\", false);\r\n    };\r\n    //进行字符串拼接，设置defaultvalue字段\r\n    onOkDialog = () => {\r\n        let defaultvalueObj = this.state.defaultvalueObj;\r\n        const display = defaultvalueObj.display;\r\n        const value = defaultvalueObj.value;\r\n        let defaultvalue = \"\";\r\n        //原来参照ref和pk值\r\n        if (display !== \"\" && value !== \"\") {\r\n            defaultvalue = `${display}=${value}`;\r\n        }\r\n        // if(display !== \"\" && this.state.code !==\"\"){\r\n        //     defaultvalue = `${display}=${this.state.code}`\r\n        // }\r\n\r\n        this.props.handleSelectChange(defaultvalue, \"defaultvalue\");\r\n        this.showModalHidden();\r\n    };\r\n    componentDidMount() {\r\n        //把nc-lightapp-front暴露给全局，供全局使用（艺轩）\r\n        window[\"nc-lightapp-front\"] = platform;\r\n        //多语\r\n        let callback = json => {\r\n            // console.log('json', json);\r\n            this.setState({\r\n                json: json\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: \"ZoneSetting\",\r\n            // currentLocale: 'zh-CN',\r\n            domainName: \"workbench\",\r\n            callback\r\n        });\r\n    }\r\n    render() {\r\n        let { json } = this.state;\r\n        if (!this.state.refcode) {\r\n            return null;\r\n        }\r\n        // console.log('defaultvalueObj', this.state.defaultvalueObj);\r\n        return (\r\n            <HotKeysModal\r\n                customHeader={langCheck(\r\n                    \"ZoneSetting-000025\",\r\n                    \"pages\",\r\n                    json\r\n                )} /* 国际化处理： 参照默认值设置*/\r\n                // mask={false}\r\n                wrapClassName=\"zonesetting-defaultValueModal\"\r\n                visible={this.props.modalVisibel}\r\n                onOk={this.onOkDialog}\r\n                destroyOnClose={true}\r\n                onCancel={this.showModalHidden}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000005\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            type=\"primary\"\r\n                            onClick={this.onOkDialog}\r\n                        >\r\n                            {langCheck(\"ZoneSetting-000005\", \"pages\", json)}(\r\n                            <span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/}\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000006\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck(\"ZoneSetting-000006\", \"pages\", json)}(\r\n                            <span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <div className=\"mdcontent\">\r\n                    {(() => {\r\n                        if (this.state[`myRefDom${this.state.refcode}`]) {\r\n                            //参照的特殊写法，有问题联系艺轩\r\n                            const myRefDom = this.state[\r\n                                `myRefDom${this.state.refcode}`\r\n                            ];\r\n                            const tmpRefDom = myRefDom();\r\n                            return (\r\n                                <Refer\r\n                                    isMultiSelectedEnabled={\r\n                                        this.state.isMultiSelectedEnabled\r\n                                    }\r\n                                    {...tmpRefDom.props}\r\n                                    foolValue={this.state.defaultvalueObj}\r\n                                    onChange={(ref, foolValue) => {\r\n                                        this.setState({\r\n                                            defaultvalueObj: foolValue\r\n                                            // defaultvalueObj: {...ref, ...foolValue}//艺轩参照传值\r\n                                        });\r\n                                    }}\r\n                                    functions={[\r\n                                        {\r\n                                            name: langCheck(\r\n                                                \"ZoneSetting-000026\",\r\n                                                \"pages\",\r\n                                                json\r\n                                            ) /* 国际化处理： 默认主组织*/,\r\n                                            code: \"#mainorg#\"\r\n                                        },\r\n                                        {\r\n                                            name: langCheck(\r\n                                                \"ZoneSetting-000027\",\r\n                                                \"pages\",\r\n                                                json\r\n                                            ) /* 国际化处理： 当前操作员*/,\r\n                                            code: \"#operator#\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            );\r\n                        } else {\r\n                            utilService.createScript.call(\r\n                                this,\r\n                                //参照默认取值相对路径改为绝对路径\r\n                                `${this.state.refcode}`\r\n                            );\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </HotKeysModal>\r\n        );\r\n    }\r\n}\r\n","/* \r\n    自定义档案设置默认值组件\r\n    created by:liyaoh\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Checkbox, Tooltip } from \"antd\";\r\nimport HotKeysModal from \"Components/HotKeysModal\";\r\nimport DefdocGridRef from \"Components/Refers/DefdocGridRef\";\r\nimport DefdocTreeRef from \"Components/Refers/DefdocTreeRef\";\r\nimport { langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from \"Pub/js/getMulti\";\r\n\r\nclass CusDocDefaultValueModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultvalueObj: {}\r\n        };\r\n    }\r\n    //传入的字符串进行分割，更新模态框内的默认取值对象\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.modalVisibel !== true) {\r\n            return;\r\n        }\r\n        let defaultvalueObj = {};\r\n        const { defaultvalue, refname } = nextProps;\r\n        //如果默认取值不为空，进行等号分割字符串\r\n        if (defaultvalue) {\r\n            const tmpDefaultvalueList = defaultvalue.split(\"=\");\r\n            defaultvalueObj = {\r\n                display: tmpDefaultvalueList[0],\r\n                value: tmpDefaultvalueList[1]\r\n            };\r\n        }\r\n        this.setState({ defaultvalueObj });\r\n    }\r\n\r\n    //设置模态框隐藏\r\n    showModalHidden = () => {\r\n        this.props.setModalVisibel(\"customDocDefaultModalVisibel\", false);\r\n    };\r\n    //更新dataval字段\r\n    onOkDialog = () => {\r\n        let { defaultvalueObj } = this.state;\r\n        const display = defaultvalueObj.display;\r\n        const value = defaultvalueObj.value;\r\n        let defaultvalue = \"\";\r\n        //原来参照ref和pk值\r\n        if (display !== \"\" && value !== \"\") {\r\n            defaultvalue = `${display}=${value}`;\r\n        }\r\n        this.props.handleSelectChange(defaultvalue, \"defaultvalue\");\r\n        this.showModalHidden();\r\n    };\r\n\r\n    //根据isgrand渲染不同参照\r\n    renderDocRefer = () => {\r\n        const { isgrade, docPk, refname, json } = this.props;\r\n        const { defaultvalueObj } = this.state;\r\n        const referProps = {\r\n            foolValue: defaultvalueObj,\r\n            queryCondition: () => ({\r\n                pk_defdoclist: docPk\r\n            }),\r\n            refName: refname,\r\n            placeholder: refname,\r\n            onChange: (ref, foolValue) => {\r\n                this.setState({\r\n                    defaultvalueObj: foolValue\r\n                });\r\n            }\r\n        }\r\n        \r\n        //渲染树形参照\r\n        if(isgrade === 'Y') {\r\n            return <DefdocTreeRef {...referProps}/>;\r\n        } else { //渲染列表参照\r\n            return <DefdocGridRef {...referProps}/>;\r\n        }\r\n    }\r\n    render(){\r\n        const { json } = this.props;\r\n        return <HotKeysModal\r\n                closable={false}\r\n                title={langCheck(\"ZoneSetting-000227\", \"pages\", json)} /* 国际化处理： 自定义档案默认值设置*/\r\n                // mask={false}\r\n                wrapClassName=\"zonesetting-defaultValueModal\"\r\n                visible={this.props.modalVisibel}\r\n                onOk={this.onOkDialog}\r\n                destroyOnClose={true}\r\n                onCancel={this.showModalHidden}\r\n                footer={[\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000005\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + Y)`}\r\n                    >\r\n                        <Button\r\n                            key=\"submit\"\r\n                            type=\"primary\"\r\n                            onClick={this.onOkDialog}\r\n                        >\r\n                            {langCheck(\"ZoneSetting-000005\", \"pages\", json)}\r\n                            (<span className=\"underline\">Y</span>)\r\n                            {/* /* 国际化处理： 确定*/}\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlayClassName=\"tootip-default\"\r\n                        title={`${langCheck(\r\n                            \"ZoneSetting-000006\",\r\n                            \"pages\",\r\n                            json\r\n                        )}(Alt + N)`}\r\n                    >\r\n                        <Button key=\"back\" onClick={this.showModalHidden}>\r\n                            {langCheck(\"ZoneSetting-000006\", \"pages\", json)}\r\n                            (<span className=\"underline\">N</span>)\r\n                            {/* /* 国际化处理： 取消*/}\r\n                        </Button>\r\n                    </Tooltip>\r\n                ]}\r\n            >\r\n                <div className=\"mdcontent\">\r\n                    {this.renderDocRefer()}\r\n                </div>\r\n            </HotKeysModal>\r\n    }\r\n}\r\n\r\nexport default CusDocDefaultValueModal;","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000060'),/* 国际化处理： 自定义档案*/\r\n        placeholder: langCheck('0000PUB-000060'),/* 国际化处理： 自定义档案*/\r\n        refCode: \"uapbd.refer.userdef.DefdocGridRef\",\r\n        queryGridUrl: \"/nccloud/uapbd/userdef/DefdocGridRef.do\",\r\n        isMultiSelectedEnabled: false,\r\n        columnConfig: [{ name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"code\", \"name\"] }]/* 国际化处理： 编码,名称*/\r\n    };\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refType: \"tree\",\r\n        refName: langCheck('0000PUB-000060'),/* 国际化处理： 自定义档案*/\r\n        placeholder: langCheck('0000PUB-000060'),/* 国际化处理： 自定义档案*/\r\n        refCode: \"uapbd.refer.userdef.DefdocTreeRef\",\r\n        queryTreeUrl: \"/nccloud/uapbd/userdef/DefdocTreeRef.do\",\r\n        isMultiSelectedEnabled: false,\r\n        columnConfig: [{ name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"code\", \"name\"] }]/* 国际化处理： 编码,名称*/\r\n    };\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Tabs, Input, Select, Radio } from \"antd\";\nimport { areatype, isunfold, areastatus } from \"../utilService\";\nimport { updateAreaList, updateSelectArea } from \"Store/ZoneSetting/action\";\nimport { langCheck } from \"Pub/js/utils\";\nimport { ControlTip } from \"Components/ControlTip\";\nimport MdDefaultClassEntityRef from \"Components/Refers/mdDefaultClassEntityRef\";\nconst Option = Select.Option;\nconst TabPane = Tabs.TabPane;\nconst RadioGroup = Radio.Group;\nlet formItemStyle = { height: 28, width: '100%' };\nclass SetTemplateRight extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    // 获取关联区域编码\n    relationcode = () => {\n        let { areaList, selectedArea } = this.props;\n        return (\n            areaList &&\n            areaList.length &&\n            areaList\n                .filter(e => {\n                    return e.pk_area !== selectedArea.pk_area;\n                })\n                .map((e, i) => {\n                    return { name: e.code, value: e.code };\n                })\n        );\n    };\n    /**\n     * 按回车键，input失去焦点\n     * @param {String} value 设置的value值\n     * @param {String} propertyKey 属性主键\n     */\n    onPressEnter = (value, property) => {\n        this[`${property}input`].blur();\n    };\n    /**\n     * input数据变化，更新redux中selectedArea/areaList对象\n     * @param {String} value 设置的value值\n     * @param {String} propertyKey 属性主键\n     */\n    changeTemplateValue = (value, propertyKey) => {\n        let { selectedArea, areaList, json } = this.props;\n        areaList = _.cloneDeep(areaList);\n        if (_.isEmpty(selectedArea)) {\n            return;\n        }\n        let oldValue = _.cloneDeep(selectedArea);\n        selectedArea = { ...selectedArea };\n        if (propertyKey === \"metaObj\") { \n            let currAreaIndex = areaList.findIndex(item => item.pk_area === selectedArea.pk_area);//当前选中区域index\n            if (!_.isEmpty(areaList[currAreaIndex].queryPropertyList)) { //有字段再给提示\n                ControlTip({\n                    status: \"warning\",\n                    title: langCheck(\n                        \"102202APP-000021\",\n                        \"pages\",\n                        json\n                    ) /* 国际化处理： 确认*/,\n                    msg: langCheck(\n                        \"102202APP-000071\",\n                        \"pages\",\n                        json\n                    ) /* 国际化处理： 修改或清空该字段后,会清空该区域已配置的元数据*/,\n                    onOk: () => {\n                        setMetaData.call(this);\n                    },\n                    onCancel: () => {\n                        selectedArea[\"metaname\"] = oldValue.metaname;\n                        selectedArea[\"metaid\"] = \"root\";\n                        selectedArea[\"refcode\"] = oldValue.refcode;\n                        this.props.updateSelectArea(selectedArea); //更新选中区域\n                    }\n                });\n                return;\n            }\n            setMetaData.call(this);\n        } else {\n            selectedArea[propertyKey] = value;\n            areaList.map(item => {\n                if (item.pk_area == selectedArea.pk_area) {\n                    item[propertyKey] = value;\n                }\n            });\n            this.props.updateSelectArea(selectedArea); //更新选中区域\n            this.props.updateAreaList(areaList); //更新整个数组\n        }\n\n        //设置元数据\n        function setMetaData(){\n            selectedArea[\"metaname\"] = value.refname;\n            selectedArea[\"metaid\"] = value.refpk;\n            selectedArea[\"refcode\"] = value.refcode;\n            selectedArea[\"queryPropertyList\"] = [];\n            selectedArea[\"formPropertyList\"] = [];\n            areaList.map(item => {\n                if (item.code == selectedArea.code) {\n                    item[\"metaname\"] = value.refname;\n                    item[\"metaid\"] = value.refpk;\n                    item[\"refcode\"] = value.refcode;\n                    item[\"queryPropertyList\"] = [];\n                    item[\"formPropertyList\"] = [];\n                }\n            });\n            this.props.updateSelectArea(selectedArea); //更新选中区域\n            this.props.updateAreaList(areaList); //更新整个数组\n        }\n    };\n    /**\n     * 获得一个文本输入框组件（列表区-区域属性）\n     * @param {String} placeholder 文本显示值\n     * @param {String} property 属性主键\n     * @return {} 文本输入框组件\n     */\n    getTemplateInput = (placeholder, property) => {\n        let inputStyle = formItemStyle;\n        const { areaList, selectedArea, validate } = this.props;\n        const areaIndex = areaList.findIndex(item => item.pk_area === selectedArea.pk_area);\n        const curArea = areaList[areaIndex];\n        if (validate === false && curArea && ['code', 'name'].includes(property) && curArea[property] === ''){\n            inputStyle = { ...formItemStyle, ...{ borderColor: '#f5222d' } };\n        }\n        return (\n            <Input\n                style={inputStyle}\n                value={this.props.selectedArea[property]}\n                onChange={e => {\n                    this.changeTemplateValue(e.target.value, property);\n                }}\n                onBlur={e => {\n                    this.changeTemplateValue(e.target.value, property);\n                }}\n                ref={input => (this[`${property}input`] = input)}\n                onPressEnter={e => {\n                    this.onPressEnter(e.target.value, property);\n                }}\n                disabled={this.getItemDisabled(property)}\n            />\n        );\n    };\n    /**\n     * 获得一个下拉组件（列表区-区域属性）\n     * @param {String} mySelectObj option\n     * @param {String} property 属性主键\n     * @return {} 文本输入框组件\n     */\n    getTemplateSelect = (mySelectObj, property) => {\n        return (\n            <Select\n                showSearch\n                optionFilterProp=\"children\"\n                filterOption={(input, option) =>\n                    option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                }\n                value={this.props.selectedArea[property]}\n                onChange={value => {\n                    this.changeTemplateValue(value, property);\n                }}\n                style={formItemStyle}\n                disabled={this.getItemDisabled(property)}\n            >\n                {(() => {\n                    return (\n                        mySelectObj &&\n                        mySelectObj.map((c, index) => {\n                            return (\n                                <Option key={index} value={c.value}>\n                                    {c.name}\n                                </Option>\n                            );\n                        })\n                    );\n                })()}\n            </Select>\n        );\n    };\n    /**\n     * 获得一个参照组件（列表区-区域属性）\n     * @param {String} placeholder 文本显示值\n     * @return {} 文本输入框组件\n     */\n    getTemplateRefer = placeholder => {\n        let { selectedArea } = this.props;\n        let initialValue = {\n            refcode: selectedArea ? selectedArea.refcode : \"\",\n            refname: selectedArea ? selectedArea.metaname : \"\",\n            refpk: selectedArea ? selectedArea.metaid : \"\"\n        };\n        return (\n            <MdDefaultClassEntityRef\n                value={initialValue}\n                onChange={value => {\n                    this.changeTemplateValue(value, \"metaObj\");\n                }}\n                disabled={this.props.isImplement} //实施态不能编辑\n            />\n        );\n    };\n    /**\n     * 获得一个单选组件（列表区-区域属性）\n     * @param {String} mySelectObj option\n     * @param {String} property 属性主键\n     * @return {} 文本输入框组件\n     */\n    getTemplateRadio = (mySelectObj, property) => {\n        return (\n            <RadioGroup\n                defaultValue={\n                    this.props.selectedArea[property]\n                        ? this.props.selectedArea[property]\n                        : null\n                }\n                value={this.props.selectedArea[property]}\n                onChange={event => {\n                    this.changeTemplateValue(event.target.value, property);\n                }}\n                style={formItemStyle}\n                disabled={this.getItemDisabled(property)}\n            >\n                <Radio value={true}>\n                    {langCheck(\"102202APP-000069\", \"pages\", this.props.json)}\n                </Radio>\n                <Radio value={false}>\n                    {langCheck(\"102202APP-000070\", \"pages\", this.props.json)}\n                </Radio>\n            </RadioGroup>\n        );\n    };\n\n    //判断字段是否禁用\n    getItemDisabled = (key) => {\n        const enableItems = ['name', 'isunfold'];//实施态区域名称和展开/收起可以编辑\n        return this.props.isImplement && !enableItems.includes(key);\n    }\n    render() {\n        let { json, selectedArea } = this.props;\n        return (\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane\n                    tab={langCheck(\"102202APP-000067\", \"pages\", json)}\n                    key=\"1\"\n                >\n                    <ul className=\"basic-property rightTemplate\">\n                        <li className=\"required\">\n                            {langCheck(\"102202APP-000038\", \"pages\", json)}\n                        </li>\n                        {/* /* 国际化处理： 区域编码*/}\n                        <li>\n                            {this.getTemplateInput(\n                                langCheck(\"102202APP-000038\", \"pages\", json),\n                                \"code\"\n                            )}\n                        </li>\n                        <li className=\"required\">\n                            {langCheck(\"102202APP-000039\", \"pages\", json)}\n                        </li>\n                        {/* /* 国际化处理： 区域名称*/}\n                        <li>\n                            {this.getTemplateInput(\n                                langCheck(\"102202APP-000039\", \"pages\", json),\n                                \"name\"\n                            )}\n                        </li>\n                        <li>{langCheck(\"102202APP-000040\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 区域类型*/}\n                        <li>\n                            {this.getTemplateSelect(areatype(json), \"areatype\")}\n                        </li>\n                        <li>{langCheck(\"102202APP-000064\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 展开/收起*/}\n                        <li>\n                            {this.getTemplateSelect(isunfold(json), \"isunfold\")}\n                        </li>\n                        <li>{langCheck(\"102202APP-000041\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 区域描述*/}\n                        <li>\n                            {this.getTemplateInput(\n                                langCheck(\"102202APP-000041\", \"pages\", json),\n                                \"areadesc\"\n                            )}\n                        </li>\n                        <li>{langCheck(\"102202APP-000042\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 关联区域编码*/}\n                        <li>\n                            {this.getTemplateSelect(\n                                this.relationcode(),\n                                \"relationcode\"\n                            )}\n                        </li>\n                        <li>{langCheck(\"102202APP-000043\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 设置类*/}\n                        <li>\n                            {this.getTemplateInput(\n                                langCheck(\"102202APP-000043\", \"pages\", json),\n                                \"clazz\"\n                            )}\n                        </li>\n                        <li>{langCheck(\"102202APP-000044\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 区域状态*/}\n                        <li>\n                            {this.getTemplateSelect(\n                                areastatus(json),\n                                \"areastatus\"\n                            )}\n                        </li>\n                        <li>{langCheck(\"102202APP-000036\", \"pages\", json)}</li>\n                        {/* /* 国际化处理： 关联元数据*/}\n                        <li>\n                            {this.getTemplateRefer(\n                                langCheck(\"102202APP-000036\", \"pages\", json)\n                            )}\n                        </li>\n                        {selectedArea.areatype &&\n                            selectedArea.areatype == \"2\" && (\n                                <li>\n                                    {langCheck(\n                                        \"102202APP-000072\",\n                                        \"pages\",\n                                        json\n                                    )}\n                                </li>\n                            )}\n                        {/* /* 国际化处理： 是否孙表*/}\n                        {selectedArea.areatype &&\n                            selectedArea.areatype == \"2\" && (\n                                <li className=\"isgrandsonRadio\">\n                                    {this.getTemplateRadio(\n                                        langCheck(\n                                            \"102202APP-000072\",\n                                            \"pages\",\n                                            json\n                                        ),\n                                        \"isgrandson\"\n                                    )}\n                                </li>\n                            )}\n                    </ul>\n                </TabPane>\n            </Tabs>\n        );\n    }\n}\nSetTemplateRight.PropTypes = {};\nexport default connect(\n    state => ({\n        areaList: state.zoneSettingData.areaList,\n        selectedArea: state.zoneSettingData.selectedArea,\n        validate: state.zoneSettingData.validate\n    }),\n    {\n        updateAreaList,\n        updateSelectArea\n    }\n)(SetTemplateRight);\n","/* \n    模板设置左侧区域组件\n    created by: liyaoh 2019-04-10\n*/\nimport React, { Component } from 'react';\nimport withDragDropContext from \"Pub/js/withDragDropContext\";\nimport AreaType from \"./components/AreaType\";\nimport NotMetaData from \"./components/NotMetaData\";\nimport SetTemplateLeft from \"./SetTemplate/setTemplateLeft\";\n\nclass MyLeftSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    \n    render(){\n        const { show } = this.props;\n        return (\n            <div className=\"template-setting-left-sider-container\">\n                <div \n                    className={`toggle-left-btn ${show ? 'hide' : 'show'}`} \n                    style={{ left: show ? 257 : -11 }}\n                    onClick={this.props.onToggleBtnClick} \n                >\n                    <i className={`iconfont ${show ? 'icon-jiantouzuo' : 'icon-jiantouyou'}`}></i>\n                </div>\n                <div className=\"template-setting-sider template-setting-left-sider\" style={{display: show ? 'block': 'none'}}>\n                    <SetTemplateLeft isImplement={this.props.status}/>\n                    {!this.props.status && <AreaType json={this.props.json}/>}\n                    <NotMetaData json={this.props.json}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withDragDropContext(MyLeftSider);","/* \r\n    可选区域组件\r\n    created by: liyaoh 2019-04-11\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport { connect } from 'react-redux';\r\nimport DragArea from '../DragArea';\r\nimport AreaTypeItem from './AreaTypeItem';\r\nimport { updateAreaList, updateSelectArea } from 'Store/ZoneSetting/action';\r\nimport { addNewAreaItem } from '../../events';\r\n\r\nclass AreaType extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render(){\r\n        const { json } = this.props;\r\n        const areaTypeMap = [\r\n            { areacode: '0', name: langCheck('102202APP-000033', 'pages', json), icon: 'ncc-pt-cxq' },/* 国际化处理： 查询区*/\r\n            { areacode: '1', name: langCheck('102202APP-000032', 'pages', json), icon: 'ncc-pt-bdq' },/* 国际化处理： 表单区*/\r\n            { areacode: '2', name: langCheck('102202APP-000031', 'pages', json), icon: 'ncc-pt-bgq' } /* 国际化处理： 表格区*/\r\n        ];\r\n        const areaTypeHeader = (\r\n            <div>\r\n                <div className=\"tip\">\r\n                    <i className=\"iconfont icon-zhuyi1\" />\r\n                    {/* 国际化处理： 请点击/拖拽以下区域至右侧页面 */}\r\n                    {langCheck('ZoneSetting-000197', 'pages', json)}\r\n                </div> \r\n                <span className=\"title\">{langCheck('ZoneSetting-000196', 'pages', json)}</span> {/* 国际化处理： 可选区域 */}\r\n            </div>\r\n        );\r\n        return (\r\n            <DragArea\r\n                renderHeader={areaTypeHeader}\r\n                onDragItemClick={(item) => addNewAreaItem(this.props, {\r\n                    items: { areatype: item.items.areacode },\r\n                    isExpand: true\r\n                })}\r\n            >\r\n                {\r\n                    areaTypeMap.map(item => {\r\n                        return <AreaTypeItem items={item}/>\r\n                    })\r\n                }\r\n            </DragArea>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    areaList: state.zoneSettingData.areaList\r\n}),\r\n    {\r\n        updateAreaList,\r\n        updateSelectArea\r\n    }\r\n)(AreaType);","import React, { Component } from 'react';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nconst dragItemSource = {\r\n    beginDrag(props) {\r\n        return {\r\n            type: 'area',\r\n            from: 'left',\r\n            areaCode: props.items.areacode\r\n        };\r\n    },\r\n\r\n};\r\n\r\nconst DragItem = ({ items, connectDragSource, onDragItemClick }) => {\r\n    const { areacode, name, icon } = items;\r\n    return connectDragSource(\r\n        <div className=\"drag-item-wrapper area\" key={areacode} onClick={onDragItemClick}>\r\n            <div className=\"drag-item\" title={name}>\r\n                <i className={`iconfont icon-${icon}`}/>\r\n                <span className=\"name\">{name}</span>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default DragSource('area', dragItemSource, (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n}))(DragItem)","/* \r\n    非元数据组件\r\n    created by: liyaoh 2019-04-30\r\n*/\r\nimport React, { Component } from 'react';\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport DragArea from '../DragArea';\r\nimport NotMetaItem from './NotMetaItem';\r\nimport { dataTypeObj } from \"../../utilService\";\r\n\r\nclass NotMetaData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        const { json } = this.props;\r\n        const notMetaData = dataTypeObj();\r\n        return (\r\n            <DragArea \r\n                headerTitle={langCheck('ZoneSetting-000202', 'pages', json)}/* 国际化处理： 非元数据 */\r\n            >\r\n                {\r\n                    notMetaData.map(item => {\r\n                        return <NotMetaItem items={item}/>\r\n                    })\r\n                }\r\n            </DragArea>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotMetaData;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragSource } from 'react-dnd';\r\n\r\nconst dragItemSource = {\r\n    beginDrag(props) {\r\n        return {\r\n            type: 'card',\r\n            from: 'left',\r\n            datatype: props.items.value\r\n        };\r\n    },\r\n\r\n};\r\n\r\nconst DragItem = ({ items, connectDragSource, onDragItemClick }) => {\r\n    const { datatype, name, icon, nowrap } = items;\r\n    return connectDragSource(\r\n        <div className=\"drag-item-wrapper\" key={datatype} onClick={onDragItemClick} style={nowrap && {padding: '6px 2px'}}>\r\n            <div className=\"drag-item\" title={name}>\r\n                <i className={`iconfont icon-${icon}`}/>\r\n                <span className=\"name\">{name}</span>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default DragSource('area', dragItemSource, (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n}))(DragItem)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Row, Form, Select } from \"antd\";\nimport { setZoneDataFun, updateAreaList } from \"Store/ZoneSetting/action\";\nimport { createForm } from \"./CreatForm\";\nimport { langCheck } from \"Pub/js/utils\";\nimport { getMulti } from \"Pub/js/getMulti\";\nconst Option = Select.Option;\n\nclass SetTemplateLeft extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {};\n    }\n    /**\n     * 传递 表单的值\n     */\n    getFromData = () => {\n        const { getFieldsValue, validateFields } = this.props.form;\n        let flag = false;\n        validateFields((err, values) => {\n            if (!err) {\n                flag = true;\n            }\n        });\n        return flag ? getFieldsValue() : null;\n    };\n    componentDidMount() {\n        this.props.setZoneDataFun(this.getFromData);\n    }\n    /**\n     * @param {*} DOMDATA\n     * 添加表头,最新的逻辑为如果出现Form表单区域，就出现设置表头字段\n     */\n    getFormItem = DOMDATA => {\n        let { areaList } = this.props,\n            form = [],\n            table = [];\n        areaList &&\n            areaList.map((v, i) => {\n                if (v.areatype === \"1\") {\n                    //表单\n                    form.push(v);\n                } else if (v.areatype === \"2\") {\n                    //表格\n                    table.push(v);\n                }\n            });\n        //模板设置显示模板名称\n        if (this.props.isImplement) {\n            DOMDATA = DOMDATA.filter((v, i) => v.code === \"name\");\n        }else{\n            //过滤掉表头列,当页面不存在Form表单区域\n            if (form.length !== 0 || table.length !== 0) {\n                let item = DOMDATA.find(item => item.code === \"headcode\");\n                if (item) {\n                    item.options = creatOption();\n                }\n            } else {\n                DOMDATA =\n                    DOMDATA && DOMDATA.filter((v, i) => v.code !== \"headcode\");\n            }\n        }\n        function creatOption() {\n            let newArray =\n                areaList &&\n                areaList.filter((v, i) => {\n                    return v.areatype !== \"0\";\n                });\n            return (\n                newArray &&\n                newArray.map((item, i) => {\n                    return (\n                        <Option key={item.code} value={item.code}>\n                            {item.name}\n                        </Option>\n                    );\n                })\n            );\n        }\n        return DOMDATA;\n    };\n    render() {\n        let { json } = this.props;\n        let DOMDATA = [\n            {\n                lable: langCheck(\n                    \"102202APP-000005\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 模板编码*/,\n                type: \"input\",\n                code: \"code\",\n                required: true\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000006\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 模板名称*/,\n                type: \"input\",\n                code: \"name\",\n                required: true,\n                disabled: this.props.isImplement\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000007\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 多语字段*/,\n                type: \"input\",\n                code: \"resid\"\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000008\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 模板描述*/,\n                type: \"input\",\n                code: \"templetdesc\",\n                required: false\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000009\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 聚合类*/,\n                type: \"input\",\n                code: \"clazz\",\n                required: false\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000010\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 设置表头*/,\n                type: \"select\",\n                code: \"headcode\",\n                options: [],\n                required: true\n            },\n            {\n                lable: langCheck(\n                    \"102202APP-000068\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 设为默认模板*/,\n                type: \"radio\",\n                code: \"isdefault\"\n            }\n        ];\n        DOMDATA = this.getFormItem(DOMDATA);\n        return (\n            <Form className=\"from-card\">\n                <Row gutter={24}>{createForm(DOMDATA, this.props)}</Row>\n            </Form>\n        );\n    }\n}\nSetTemplateLeft = Form.create()(SetTemplateLeft); // 必须要包装才能用form的方法\nSetTemplateLeft.PropTypes = {\n    zoneArr: PropTypes.object.isRequired,\n    zoneDatas: PropTypes.object.isRequired,\n    setZoneDataFun: PropTypes.func.isRequired\n};\nexport default connect(\n    state => {\n        let { zoneDatas, json } = state.zoneRegisterData;\n        let { areaList, zoneFormData } = state.zoneSettingData;\n        return { zoneDatas, json, areaList, zoneFormData };\n    },\n    {\n        setZoneDataFun,\n        updateAreaList\n    }\n)(SetTemplateLeft);\n","import { Col, Form, Input, Select, Radio } from \"antd\";\nimport React from \"react\";\nimport { langCheck } from \"Pub/js/utils\";\nimport Notice from \"Components/Notice\";\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\n/**\n * 创建表单\n * @param {*} propsData\n * @param {*} DOMDATA\n * @param {*} nodeData\n */\nexport const createForm = (DOMDATA, propsData) => {\n    const children = [];\n    DOMDATA &&\n        DOMDATA.map((item, index) => {\n            let { lable, md = 24, lg = 12, xl = 8 } = item;\n            children.push(\n                <Col md={md} lg={lg} xl={xl} key={index}>\n                    {createFormItem(propsData, item)}\n                </Col>\n            );\n        });\n\n    return children.filter(item => {\n        return item.props.children;\n    });\n};\n/**\n * 创建表单\n * @param {*} props\n * @param {*} itemInfo\n */\nconst createFormItem = (props, itemInfo) => {\n    let nodeData = props.zoneDatas;\n    let { json, zoneFormData } = props;\n    const { getFieldDecorator, getFieldsValue } = props.form;\n    let { lable, type, code, required, check, search, disabled } = itemInfo;\n    const formItemChange = (e) => {\n        let formData = {...zoneFormData};\n        let val = typeof e === 'string' ? e : e.target.value;\n        let newFormData = {...formData, ...{[code]: val}}\n        props.setZoneDataFun(newFormData);\n        //改变表头重新渲染areaList\n        if(code === 'headcode') {\n            props.updateAreaList(props.areaList);\n        }\n    }\n    switch (type) {\n        case \"select\":\n            if (nodeData.areaList && nodeData.areaList.length > 0) {\n                nodeData.areaList.map(item => {\n                    if (nodeData[code] === item.code && item.areatype === \"0\") {\n                        Notice({\n                            status: \"error\",\n                            msg: langCheck(\"102202APP-000000\", \"pages\", json)\n                        }); /* 国际化处理： 数据有误*/\n                        return;\n                    }\n                });\n            }\n            return (\n                <FormItem label={lable}>\n                    {getFieldDecorator(code, {\n                        initialValue: nodeData[code] ? nodeData[code] + \"\" : \"\",\n                        rules: [\n                            {\n                                required: required,\n                                message: langCheck(\n                                    \"102202APP-000001\",\n                                    \"pages\",\n                                    json\n                                ) /* 国际化处理： 此字段为必输项或请补充此表单区编码！*/\n                            },\n                            {\n                                validator: check ? check : null\n                            }\n                        ]\n                    })(<Select onChange={formItemChange}>{itemInfo.options}</Select>)}\n                </FormItem>\n            );\n            break;\n        case \"radio\":\n            return (\n                <FormItem label={lable}>\n                    {getFieldDecorator(code, {\n                        initialValue: nodeData[code] ? nodeData[code] : false,\n                        rules: [\n                            {\n                                required: required\n                            },\n                            {\n                                type: \"boolean\",\n                                validator: check ? check : null\n                            }\n                        ]\n                    })(\n                        <RadioGroup onChange={formItemChange}>\n                            <Radio value={true}>\n                                {langCheck(\n                                    \"102202APP-000069\",\n                                    \"pages\",\n                                    json\n                                ) /* 国际化处理：是*/}\n                            </Radio>\n                            <Radio value={false}>\n                                {langCheck(\n                                    \"102202APP-000070\",\n                                    \"pages\",\n                                    json\n                                ) /* 国际化处理：否*/}\n                            </Radio>\n                        </RadioGroup>\n                    )}\n                </FormItem>\n            );\n            break;\n        default:\n            return (\n                <FormItem label={lable}>\n                    {\n                        disabled ? <span>{nodeData[code]}</span> : \n                        getFieldDecorator(code, {\n                            initialValue: nodeData[code] ? nodeData[code] + \"\" : \"\",\n                            rules: [\n                                {\n                                    required: required,\n                                    message: `${langCheck(\n                                        \"102202APP-000002\",\n                                        \"pages\",\n                                        json\n                                    )}${lable}` /* 国际化处理： 请输入*/\n                                },\n                                {\n                                    validator: check ? check : null\n                                }\n                            ]\n                        })(\n                            <Input onChange={formItemChange} />\n                        )\n                    }\n                </FormItem>\n            );\n            break;\n    }\n};\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./index.less\";\r\nimport MyHeader from \"./header\";\r\nimport MyContent from \"./content\";\r\nimport MyRightSider from \"./rightSider\";\r\nimport MyLeftSider from \"./leftSider\";\r\nimport { Steps } from \"antd\";\r\nimport { GetQuery, langCheck } from \"Pub/js/utils\";\r\nimport { getMulti } from 'Pub/js/getMulti';\r\nimport { queryAllArea, queryTemplateProperty } from './events';\r\nimport { setZoneDataFun, updateAreaList } from \"Store/ZoneSetting/action\";\r\nimport { setZoneData, setZoneTempletid, setJson } from 'Store/Zone/action';\r\nimport Ajax from 'Pub/js/ajax';\r\nconst Step = Steps.Step;\r\n//模板配置首页\r\nclass ZoneSetting extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.urlRequestObj = GetQuery(this.props.location.search);\r\n        this.state = {\r\n            templetid: this.urlRequestObj.templetid,\r\n            status: this.urlRequestObj.status, // status\r\n            pcode: this.urlRequestObj.pcode,\r\n            appcode: this.urlRequestObj.appcode,\r\n            json: {},\r\n            isLang:false,\r\n            leftSiderShow: true, //显示左侧栏\r\n            isImplement: this.urlRequestObj.status === 'templateSetting' || this.urlRequestObj.status === 'templateSetting-unit' //实施态\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        let callback = (json) => {\r\n            // console.log('json', json);\r\n            window.multiZoneSettingLang = json;\r\n            this.props.setJson(json);\r\n            this.setState({\r\n                json:json,\r\n                isLang:true\r\n            });\r\n        };\r\n        getMulti({\r\n            moduleId: ['ZoneSetting','102202APP'],\r\n            // currentLocale: 'zh-CN',\r\n            domainName: 'workbench',\r\n            callback\r\n        });\r\n    }\r\n    //多语\r\n\tcomponentDidMount() {\r\n        let param = GetQuery(this.props.location.search);\r\n        this.props.setZoneTempletid(param.templetid);\r\n        //请求完模板数据后在请求字段\r\n        queryAllArea.call(this).then(() => {\r\n            queryTemplateProperty.call(this);\r\n        });\r\n    }\r\n    \r\n    //切换左侧栏显隐\r\n    toggleLeftSider = () => {\r\n        const { leftSiderShow } = this.state;\r\n        this.setState({\r\n            leftSiderShow: !leftSiderShow\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        let { json } = this.state;\r\n        console.log('pcode', this.state.pcode);/* 国际化处理： 实施态pcode,实施态*/\r\n        console.log('appcode', this.state.appcode);/* 国际化处理： 实施态appcode,实施态*/\r\n\t\t//实时态，status控制steps是否显示\r\n        // let show = this.urlRequestObj.status\r\n        //     ? \"display_none\"\r\n        //     : \"template-setting-steps\";\r\n        return (\r\n            <div className=\"template-setting-page\">\r\n                {/* <div className={show}>\r\n                    <Steps size=\"small\" current={1}>\r\n                        <Step title={langCheck('ZoneSetting-000052', 'pages', json)} description={langCheck('ZoneSetting-000053', 'pages', json)} />\r\n                        <Step title={langCheck('ZoneSetting-000035', 'pages', json)} description={langCheck('ZoneSetting-000054', 'pages', json)} />\r\n                        <Step title={langCheck('ZoneSetting-000055', 'pages', json)} description=\"\" />\r\n                    </Steps>\r\n                </div> */}\r\n                <MyHeader\r\n                    templetid={this.state.templetid}\r\n                    status={this.state.status}\r\n                    pcode={this.state.pcode}\r\n                    appcode={this.state.appcode}\r\n                    json={this.state.json}\r\n                    isImplement={this.state.isImplement}\r\n                />\r\n                <div className=\"template-setting-container\">\r\n                    <MyLeftSider \r\n                        json={this.state.json} \r\n                        status={this.state.status}\r\n                        show={this.state.leftSiderShow}\r\n                        onToggleBtnClick={this.toggleLeftSider}\r\n                    />\r\n                    <MyContent\r\n                        templetid={this.state.templetid}\r\n                        status={this.state.status}\r\n                        json={this.state.json}\r\n                        isImplement={this.state.isImplement}\r\n                    />\r\n                    {\r\n                        this.state.isLang ? \r\n                            <MyRightSider \r\n                                json={this.state.json} \r\n                                status={this.state.status}\r\n                                isImplement={this.state.isImplement}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        \r\n    }),\r\n    { setJson, setZoneData, setZoneTempletid, setZoneDataFun, updateAreaList}\r\n)(ZoneSetting);\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./index.less\";\nimport platform from \"Pub/js/platform\";\nconst { NCDiv } = platform.base;\n/**\n * 工作桌面中页面布局组件\n * @param {Number} height 距离浏览器顶部的距离\n */\nlet isMouseDown = false;\n/**\n * 单页基本布局容器\n */\nclass PageLayout extends Component {\n    static defaultProps = {\n        className: \"\"\n    };\n    constructor(props) {\n        super(props);\n    }\n    handleMouseUp = () => {\n        isMouseDown = false;\n    };\n    handleMouseMove = e => {\n        if (isMouseDown) {\n            let mouseLeft = e.clientX;\n            let layoutLeft = document.querySelector(\"#layoutLeft\");\n            let blockLeft = layoutLeft.getBoundingClientRect().left;\n            // console.log(blockLeft);\n            let w = parseInt(mouseLeft - blockLeft) + 3;\n            if (w < 200) {\n                return;\n            } else {\n                layoutLeft.style.width = `${w}px`;\n            }\n        } else {\n            return;\n        }\n    };\n    render() {\n        return (\n            <div className=\"nc-workbench-page\">\n                {this.props.header ? this.props.header : null}\n                <div\n                    onMouseMove={this.handleMouseMove}\n                    onMouseUp={this.handleMouseUp}\n                    className={`nc-workbench-ownpage ${\n                        this.props.children.length === 2\n                            ? \"nc-workbench-ownpage-all\"\n                            : \"\"\n                    } ${this.props.className}`}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * 单页滚动基本布局容器\n */\nclass PageScrollLayout extends Component {\n    static defaultProps = {\n        className: \"\"\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            suck: false\n        };\n        this.initScrollContainerTop;\n    }\n    handleMouseUp = () => {\n        isMouseDown = false;\n    };\n    handleMouseMove = e => {\n        if (isMouseDown) {\n            let mouseLeft = e.clientX;\n            let layoutLeft = document.querySelector(\"#layoutLeft\");\n            let blockLeft = layoutLeft.getBoundingClientRect().left;\n            let w = parseInt(mouseLeft - blockLeft) + 3;\n            if (w < 200) {\n                return;\n            } else {\n                layoutLeft.style.width = `${w}px`;\n            }\n        } else {\n            return;\n        }\n    };\n    handleScroll = e => {\n        let { y, width } = this.refs[\n            \"ncWorkbenchPageScroll\"\n        ].getBoundingClientRect();\n        // console.log(y, width);\n        // console.log(this.initScrollContainerTop);\n        if (y == this.initScrollContainerTop) {\n            this.setState({\n                suck: false\n            });\n        }\n        if (y < this.initScrollContainerTop) {\n            if (this.state.suck) {\n                return;\n            }\n            this.containerWidthChange();\n            this.setState({\n                suck: true\n            });\n        }\n    };\n    containerWidthChange = () => {\n        let { width } = this.refs[\n            \"ncWorkbenchPageOwnpage\"\n        ].getBoundingClientRect();\n        document.getElementsByClassName(\n            \"nc-workbench-page-header\"\n        )[0].style.width = `${width}px`;\n        if (document.getElementById(\"suckTableHeader\")) {\n            document.getElementById(\n                \"suckTableHeader\"\n            ).style.width = `${width}px`;\n        }\n    };\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.containerWidthChange);\n        let { y } = this.refs[\"ncWorkbenchPageScroll\"].getBoundingClientRect();\n        this.initScrollContainerTop = y;\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.containerWidthChange);\n    }\n    render() {\n        let suck = this.state.suck;\n        return (\n            <div\n                className=\"nc-workbench-page-scroll\"\n                onScroll={this.handleScroll}\n            >\n                <div className=\" nc-workbench-page \">\n                    <div\n                        className={`nc-workbench-page-container ${\n                            suck ? \"nc-workbench-suck\" : \"\"\n                        }`}\n                        ref=\"ncWorkbenchPageScroll\"\n                    >\n                        {this.props.header ? this.props.header : null}\n                        <div\n                            onMouseMove={this.handleMouseMove}\n                            onMouseUp={this.handleMouseUp}\n                            ref=\"ncWorkbenchPageOwnpage\"\n                            className={`nc-workbench-ownpage ${\n                                this.props.children.length === 2\n                                    ? \"nc-workbench-ownpage-all\"\n                                    : \"\"\n                            } ${this.props.className}`}\n                        >\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/**\n * 单页左侧基本布局容器\n */\nclass PageLayoutLeft extends Component {\n    static defaultProps = {\n        className: \"\"\n    };\n    constructor(props) {\n        super(props);\n    }\n    handleMouseDown = () => {\n        isMouseDown = true;\n    };\n\n    render() {\n        return (\n            <div\n                id=\"layoutLeft\"\n                className={`nc-workbench-ownpage-left ${this.props.className}`}\n            >\n                <span\n                    className=\"layout-drag-block\"\n                    onMouseDown={this.handleMouseDown}\n                />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n/**\n * 单页左侧基本布局容器\n */\nclass PageLayoutHeader extends Component {\n    static defaultProps = {\n        className: \"\"\n    };\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <NCDiv\n                areaCode={NCDiv.config.HEADER}\n                className={`nc-workbench-page-header ${this.props.className}`}\n            >\n                {this.props.children}\n            </NCDiv>\n        );\n    }\n}\n/**\n * 单页右侧基本布局容器\n */\nclass PageLayoutRight extends Component {\n    static defaultProps = {\n        className: \"\"\n    };\n    render() {\n        return (\n            <div\n                className={`nc-workbench-ownpage-right ${this.props.className}`}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nPageLayout.propTypes = {\n    // breadcrumb: PropTypes.array,\n    children: PropTypes.any.isRequired\n};\nPageLayoutLeft.propTypes = {\n    // breadcrumb: PropTypes.array,\n    children: PropTypes.any.isRequired\n};\nPageLayoutRight.propTypes = {\n    // breadcrumb: PropTypes.array,\n    children: PropTypes.any.isRequired\n};\n\nexport {\n    PageLayout,\n    PageScrollLayout,\n    PageLayoutHeader,\n    PageLayoutLeft,\n    PageLayoutRight\n};\n","\nvar content = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".nc-workbench-page{position:absolute;top:0;z-index:10;height:100%;width:100%;padding:8px 0 0;display:flex;flex-direction:column}.nc-workbench-page .nc-workbench-page-header{flex:0 0 45px;display:flex;justify-content:space-between;align-items:center;border-bottom:1px solid #d9d9d9;border-radius:3px 3px 0 0;background:#fff;padding:0 20px}.nc-workbench-page .nc-workbench-page-header .pageLayoutHeaderOwn{font-size:16px;color:#111;font-weight:700}.nc-workbench-page .nc-workbench-page-header .pageLayoutHeaderOwn .iconfont{margin-right:6px;border-radius:50%;font-size:16px;padding:4px;font-weight:400;cursor:pointer}.nc-workbench-page .nc-workbench-page-header .pageLayoutHeaderOwn .iconfont:hover{background:#e8e8e8}.nc-workbench-page .nc-workbench-page-header .pageLayoutHeaderOwn span[type=ncdiv]{font-size:inherit}.nc-workbench-page .nc-workbench-page-header .header_in_icon{display:flex;font-weight:700;font-size:16px;color:#111;line-height:24px}.nc-workbench-page .nc-workbench-page-header .header_in_icon span[type=ncdiv]{font-size:inherit}.nc-workbench-page .nc-workbench-ownpage{min-width:800px;border-radius:0 0 3px 3px}.nc-workbench-page .nc-workbench-ownpage-all{height:100%;display:flex;justify-content:flex-start;background:#fff;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nc-workbench-page .nc-workbench-ownpage-left{position:relative;height:100%;min-width:280px}.nc-workbench-page .nc-workbench-ownpage-left .layout-drag-block{position:absolute;right:-3px;z-index:10;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);display:block;padding:0 3px;height:100%;border-radius:3px;cursor:w-resize}.nc-workbench-page .nc-workbench-ownpage-left .layout-drag-block:after{content:\\\"\\\";display:block;width:1px;height:100%;background:#d9d9d9}.nc-workbench-page .nc-workbench-ownpage-left .layout-drag-block:hover:after{width:2px;background:rgba(0,0,0,.54)}.nc-workbench-page .nc-workbench-ownpage-right{min-width:50%;flex:1}.nc-workbench-page-scroll{height:100%;width:100%;overflow-y:auto}.nc-workbench-page-scroll .nc-workbench-page-container{margin-top:0;min-height:100%;background:#fff;border-radius:3px}.nc-workbench-page-scroll .nc-workbench-page-container .nc-workbench-page-header{position:static;transition:top .7s ease;height:46px}.nc-workbench-page-scroll .nc-workbench-page-container .suck-table-header{position:static;transition:top .7s ease}.nc-workbench-page-scroll .nc-workbench-suck{padding-top:80px}.nc-workbench-page-scroll .nc-workbench-suck .nc-workbench-page-header{position:fixed;z-index:1;top:44px}.nc-workbench-page-scroll .nc-workbench-suck .suck-table-header{position:fixed;z-index:1;top:94px}@media screen and (min-width:1280px){.nc-workbench-page{padding:8px 16px 0}}@media screen and (min-width:1440px){.nc-workbench-page{padding:8px 16px 0}}@media screen and (min-width:1600px){.nc-workbench-page{padding:8px 16px 0}}\", \"\"]);\n\n// exports\n","import * as zonesetting from './action-type';\r\n\r\n// 设置 区域参数信息 数据\r\nexport const setZoneData = (data) => {\r\n\treturn {\r\n\t\ttype: zonesetting.ZONESETTING,\r\n\t\tdata\r\n\t};\r\n};\r\nexport const updateSelectCard = (selectCard) => {\r\n\treturn {\r\n\t\ttype: zonesetting.UPDATESELECTCARD,\r\n\t\tselectCard: selectCard\r\n\t};\r\n};\r\n//更新areaList init：是否为初始化，第一次进页面时传\r\nexport const updateAreaList = (areaList, init = false) => {\r\n\treturn {\r\n\t\ttype: zonesetting.UPDATEAREALIST,\r\n\t\tareaList: areaList,\r\n\t\tinit\r\n\t};\r\n};\r\n\r\n//当前选中区域\r\nexport const updateSelectArea = selectedArea => {\r\n\treturn {\r\n\t\ttype: zonesetting.UPDATESELECTAREA,\r\n\t\tselectedArea: selectedArea\r\n\t}\r\n}\r\n\r\nexport const updatePreviewData = (previewData) => {\r\n\treturn {\r\n\t\ttype: zonesetting.PREVIEWDATA,\r\n\t\tpreviewData: previewData\r\n\t};\r\n};\r\n// 清空数据\r\nexport const clearData = () => {\r\n\treturn {\r\n\t\ttype: zonesetting.CLEARDATA\r\n\t};\r\n};\r\n\r\n//打开公式编辑器\r\nexport const toggleFormula = (type, flag) => {\r\n\treturn {\r\n\t\ttype: zonesetting.TOGGLEFORMULA,\r\n\t\tformula: {\r\n\t\t\t[type]: flag\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//设置公式编辑器信息\r\nexport const setFormulaInfo = (formulaInfo) => {\r\n\treturn {\r\n\t\ttype: zonesetting.SETFORMULAINFO,\r\n\t\tformulaInfo\r\n\t}\r\n}\r\n\r\n//设置批量设置表格dataSource\r\nexport const updateBatchSource = (batchSource) => {\r\n\treturn {\r\n\t\ttype: zonesetting.UPDATEBATCHSOURCE,\r\n\t\tbatchSource\r\n\t}\r\n}\r\n//更新批量设置表格dataSource\r\nexport const setCurrentBatchCell = (cell) => {\r\n\treturn {\r\n\t\ttype: zonesetting.SETCURRENTBATCHCELL,\r\n\t\tcurrentBatchCell: cell\r\n\t}\r\n}\r\n// 传递 区域 form 的区域值 \r\nexport const setZoneDataFun = (getFromData) => {\r\n\treturn {\r\n\t\ttype: zonesetting.SETZONEFORMFUN,\r\n\t\tgetFromData\r\n\t};\r\n};\r\n\r\n//更新是否保存标示\r\nexport const updateSaveFlag = (flag) => {\r\n\treturn {\r\n\t\ttype: zonesetting.UPDATESAVEFLAG,\r\n\t\tisSave: flag\r\n\t};\r\n};\r\n\r\n//更新是否校验成功标示\r\nexport const updateAreaValidate = (validate) => {\r\n\treturn {\r\n\t\ttype: zonesetting.SETAREAVALIDATE,\r\n\t\tvalidate\r\n\t};\r\n};","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import '../../style/index.less';\nimport '../../grid/style/index.less';","import '../../style/index.less';\nimport '../../grid/style/index.less';","import React from \"react\";\r\nimport AppIcons from \"Pub/js/appIcons\";\r\nimport DefaultAppIcon from \"Assets/images/default.svg\"; // 默认图标\r\nimport { getStore } from \"Pub/js/storageUtils\";\r\n\r\nconst AppIcon = ({ appCode }) => {\r\n    let AppIconStore = getStore(\"APPICONSSTORE\");\r\n    let iconName = AppIconStore && AppIconStore[appCode];\r\n    let icon = AppIcons[iconName] ? AppIcons[iconName] : DefaultAppIcon;\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"24px\",\r\n                height: \"24px\",\r\n                marginRight: \"10px\",\r\n                background: `url(${icon}) no-repeat 0px 0px`,\r\n                backgroundSize: \"contain\"\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AppIcon;\r\n","import React, { Component } from \"react\";\r\nimport NoData from \"Assets/images/nodata.png\";\r\nimport IDEA from \"Assets/images/idea.png\";\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport \"./index.less\";\r\nclass CoverPosition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    /**\r\n     * 站位图片选择\r\n     * @param {String} type 站位图片类型 不传走默认\r\n     * 数卡表格站位图片 treeCardTable\r\n     */\r\n    switchImg = (type, langCheck) => {\r\n        switch (type) {\r\n            case \"treeCardTable\":\r\n                return (\r\n                    <div className=\"CoverPosition-content-treeCardTable\">\r\n                        <img src={IDEA} />\r\n                        <span>{langCheck('0000PUB-000002')}</span>{/* 国际化处理： 暂无数据*/}\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div className=\"CoverPosition-content\">\r\n                        <img src={NoData} />\r\n                        <span>{langCheck('0000PUB-000002')}</span>{/* 国际化处理： 暂无数据*/}\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n    render() {\r\n        // let { langCheck } = window;\r\n        return (\r\n            <div className=\"CoverPosition-container\">\r\n                {this.switchImg(this.props.type, langCheck)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CoverPosition;\r\n","import { DragDropContext } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\n\r\nexport default DragDropContext(HTML5Backend);\r\n","module.exports = __webpack_public_path__ + \"images/nodata.png\";","module.exports = __webpack_public_path__ + \"images/idea.png\";","\nvar content = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".CoverPosition-container .CoverPosition-content{display:flex;flex-direction:column;justify-content:center;align-items:center}.CoverPosition-container .CoverPosition-content-treeCardTable{display:flex;flex-direction:row;justify-content:center;align-items:center}.CoverPosition-container .CoverPosition-content-treeCardTable img{width:25px;height:25px}.CoverPosition-container .CoverPosition-content-treeCardTable span{margin-left:8px;font-size:13px;color:#aeaeae}\", \"\"]);\n\n// exports\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updatePreviewData } from \"Store/ZoneSetting/action\";\nimport { createPage } from \"nc-lightapp-front\";\nimport Ajax from 'Pub/js/ajax';\nimport { langCheck } from \"Pub/js/utils\";\nimport { getMulti } from \"Pub/js/getMulti\";\nimport HotKeysModal from \"Components/HotKeysModal\";\nimport Loading from \"Components/Loading\";\nimport { sortBy } from 'lodash';\nimport \"./index.less\";\n\n//加载模板\nfunction initTemplate(json) {\n    const { requestUrl, requestData, templetData } = this.props;\n    const { pagecode, appcode, templetid } = templetData;\n    let url = requestUrl || '/nccloud/platform/templet/querypage.do';\n    let data = requestData || {\n        pagecode,\n        appcode,\n        templetid\n    };\n    Ajax({\n        url,\n        data,\n        info: {\n            name: langCheck('ZoneSetting-000028', \"pages\", json),/* 国际化处理： 模板*/\n            action: langCheck('ZoneSetting-000029', \"pages\", json)/* 国际化处理： 模板预览*/\n        },\n        success: ({ data: { data } }) => {\n            if (data) {\n                this.props.meta.setMeta(data);\n                //增加position排序\n                requestData && requestData.forEach(area => {\n                    if(data[area.code]) data[area.code].position = area.position;\n                });\n                this.props.updatePreviewData(data);\n            }\n        }\n    });\n}\n\n//预览模态框组件类1909版\nclass PreviewModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            all_keys: [],\n            json: {}\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.previewData) {\n            let reviewData = nextProps.previewData;\n            let all_keys = [];\n            for (const [k, v] of Object.entries(reviewData)) {\n                let key = v.moduletype;\n                let areaId = v.code;\n                let formrelation = reviewData.formrelation;\n                if (key === \"table\" || key === \"form\" || key === \"search\") {\n                    //不渲染表单分组\n                    if (key === \"form\" && formrelation && v.relationcode in formrelation) {\n\n                    }else{\n                        all_keys.push({\n                            id: areaId,\n                            name: v.name,\n                            myAreaType: key,\n                            position: v.position\n                        });\n                    }\n                }\n                if(key === \"form\"){\n                    this.props.form.setFormStatus(areaId, \"edit\");\n                }\n                //表格区默认新增一行\n                if (key === \"table\") {\n                    // this.props.editTable.setStatus(areaId, \"edit\");\n                    if (this.refs[areaId]) {\n                        this.props.editTable.addRow(areaId);\n                        this.refs[areaId] = null;\n                    }\n                }\n            }\n            if (all_keys && all_keys[0] && all_keys[0].position) {\n                all_keys = sortBy(all_keys, item => item.position); //按照position排序\n            }\n            //  更新state;\n            this.setState({\n                all_keys: all_keys\n            });\n        }\n    }\n    //隐藏预览模态框\n    showModalHidden = () => {\n        this.props.setModalVisibel(false);\n    };\n    //创建预览内容的DOM结构\n    createDom = () => {\n        let { editTable, form, search } = this.props;\n        let { createForm } = form;\n        let { createEditTable } = editTable;\n        let { NCCreateSearch } = search;\n        let { all_keys } = this.state;\n        let result = [];\n        // 所有预览\n        if (all_keys.length) {\n            all_keys.map((val, i) => {\n                switch (val.myAreaType) {\n                    case \"form\":\n                        result.push(\n                            <div className=\"viewTemplateArea\" key={`form${i}`}>\n                                <div className=\"descrip\">\n                                    <span key={`forms${i}`}> ▼ </span>\n                                    {`${val.name}`}\n                                </div>\n                                {createForm(val.id)}\n                            </div>\n                        );\n                        break;\n                    case \"table\":\n                        result.push(\n                            <div\n                                className=\"viewTemplateArea\"\n                                key={`table${i}`}\n                                ref={`${val.id}`}\n                            >\n                                <div className=\"descrip\">\n                                    <span key={`tables${i}`}> ▼ </span>\n                                    {`${val.name}`}\n                                </div>\n                                {createEditTable(val.id, {})}\n                            </div>\n                        );\n                        break;\n                    case \"search\":\n                        result.push(\n                            <div\n                                className=\"viewTemplateArea\"\n                                key={`search${i}`}\n                            >\n                                <div className=\"descrip\">\n                                    <span key={`searchs${i}`}> ▼ </span>\n                                    {`${val.name}`}\n                                </div>\n                                {NCCreateSearch(val.id)}\n                            </div>\n                        );\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n        return all_keys.length == 0 ? <Loading style={{ width: '100%', height: 50 }}/> : result;\n    };\n\n    componentDidMount() {\n        //多语\n        let callback = json => {\n            this.setState({\n                json: json\n            });\n            initTemplate.call(this, json);\n        };\n        getMulti({\n            moduleId: \"ZoneSetting\",\n            domainName: \"workbench\",\n            callback\n        });\n    }\n    render() {\n        let { json } = this.state;\n        return (\n            <HotKeysModal\n                maskClosable={false}\n                customHeader={langCheck(\n                    \"ZoneSetting-000121\",\n                    \"pages\",\n                    json\n                )} /* 国际化处理： 预览区*/\n                // mask={false}\n                visible={this.props.previewVisibel}\n                onOk={this.onOkDialog}\n                onCancel={this.showModalHidden}\n                width=\"98%\"\n                className=\"viewPageTem\"\n                centered={true}\n                footer={null}\n                fieldid=\"preview\"\n            >\n                {this.createDom()}\n            </HotKeysModal>\n        );\n    }\n}\n\nPreviewModal = createPage({})(PreviewModal);\n\nexport default connect(\n    state => {\n        return {\n            areaList: state.zoneSettingData.areaList,\n            previewData: state.zoneSettingData.previewData\n        };\n    },\n    {\n        updatePreviewData\n    }\n)(PreviewModal);\n","\nvar content = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".viewPageTem .u-modal-content .u-modal-body{overflow:auto;padding:20px 0}.viewPageTem .u-modal-content .u-modal-body .printContent{padding:20px}.viewPageTem .u-modal-content .viewTemplateArea{padding:0 20px}\", \"\"]);\n\n// exports\n","import * as ZoneRegister from './action-type';\r\n\r\n// 设置 区域数据 \r\nexport const setZoneData = (data) => { \r\n\treturn {\r\n\t\ttype: ZoneRegister.SETZONEDATA,\r\n\t\tdata\r\n\t};\r\n};\r\n\r\n// 设置 区域对应的模板id \r\nexport const setZoneTempletid = (data) => {\r\n\treturn { \r\n\t\ttype: ZoneRegister.ZONETEMPLATID ,\r\n\t\tdata\r\n\t};\r\n};\r\n// 设置 区域单据的模板状态 \r\nexport const setZoneState= (data) => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.ZONESTATE,\r\n\t\tdata\r\n\t};\r\n};\r\n\r\n// 传递 区域单据的模板数组 \r\nexport const setNewList = (data) => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.SETNEWLIST,\r\n\t\tdata\r\n\t};\r\n};\r\n\r\n// 传递 区域 form 的区域值 \r\nexport const setZoneDataFun = (getFromData) => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.ZONEDATAFUN,\r\n\t\tgetFromData\r\n\t};\r\n};\r\n// 传递 区域 form 的区域值 \r\nexport const setTemplateDataFun = (getTemplateFromData) => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.SETTEMPLATEFUN,\r\n\t\tgetTemplateFromData\r\n\t};\r\n};\r\n// 清空数据\r\nexport const clearZoneData = () => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.CLEARDATA\r\n\t};\r\n};\r\n// setJson\r\nexport const setJson = (data) => {\r\n\treturn {\r\n\t\ttype: ZoneRegister.JSON,\r\n\t\tdata\r\n\t};\r\n};"],"sourceRoot":""}