{"version":3,"sources":["webpack:///./pages/Customize/SubjectSetting.js","webpack:///./assets/images/black1.jpg","webpack:///./assets/images/black2.jpg","webpack:///./assets/images/black3.jpg","webpack:///./assets/images/red1.jpg","webpack:///./assets/images/red2.jpg","webpack:///./assets/images/red3.jpg","webpack:///./assets/images/blue1.jpg","webpack:///./assets/images/blue2.jpg","webpack:///./assets/images/blue3.jpg","webpack:///./assets/images/green1.jpg","webpack:///./assets/images/green2.jpg","webpack:///./assets/images/green3.jpg","webpack:///./assets/images/yellow1.jpg","webpack:///./assets/images/yellow2.jpg","webpack:///./assets/images/yellow3.jpg","webpack:///./assets/images/default1.jpg","webpack:///./assets/images/default2.jpg","webpack:///./assets/images/default3.jpg"],"names":["platform","base","NCDiv","NCButton","colorMap","colorNameMap","langCheck","SubjectSetting","props","getDefaultColor","colorArr","state","url","data","noNeedShowError","success","map","e","color","checked","setState","checkedColor","error","checkItem","key","item","defaultShow","getAllData","json","name","defaultshow","info","action","document","getElementById","className","setTheme","call","window","top","nccColor","setStore","status","msg","console","log","showModalHidden","modalVis","showModalVis","handleColorChange","event","handleChangeComplete","addColor","hex","handleModalOk","colorObj","disabled","this","fieldid","areaCode","config","Area","index","onClick","style","background","src","default1","red1","blue1","green1","yellow1","black1","default2","red2","blue2","green2","yellow2","black2","default3","red3","blue3","green3","yellow3","black3","BOTTOM","colors","closable","title","mask","visible","onOk","onOkMoveDialog","onCancel","footer","placement","overlayClassName","type","SketchPicker","onChange","onChangeComplete","Component","connect","module","exports"],"mappings":"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","file":"20.1c6f6795.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { connect } from \"react-redux\";\nimport setTheme from \"./setTheme\";\nimport { langCheck } from \"Pub/js/utils.js\";\nimport { setStore } from \"Pub/js/storageUtils\";\nimport Ajax from \"Pub/js/ajax\";\nimport HotKeysModal from \"Components/HotKeysModal\";\nimport { SketchPicker } from \"react-color\";\nimport Notice from \"Components/Notice\";\nimport black1 from \"Assets/images/black1.jpg\";\nimport black2 from \"Assets/images/black2.jpg\";\nimport black3 from \"Assets/images/black3.jpg\";\nimport red1 from \"Assets/images/red1.jpg\";\nimport red2 from \"Assets/images/red2.jpg\";\nimport red3 from \"Assets/images/red3.jpg\";\nimport blue1 from \"Assets/images/blue1.jpg\";\nimport blue2 from \"Assets/images/blue2.jpg\";\nimport blue3 from \"Assets/images/blue3.jpg\";\nimport green1 from \"Assets/images/green1.jpg\";\nimport green2 from \"Assets/images/green2.jpg\";\nimport green3 from \"Assets/images/green3.jpg\";\nimport yellow1 from \"Assets/images/yellow1.jpg\";\nimport yellow2 from \"Assets/images/yellow2.jpg\";\nimport yellow3 from \"Assets/images/yellow3.jpg\";\nimport default1 from \"Assets/images/default1.jpg\";\nimport default2 from \"Assets/images/default2.jpg\";\nimport default3 from \"Assets/images/default3.jpg\";\nimport platform from \"Pub/js/platform\";\nconst { NCDiv, NCButton } = platform.base;\n\nconst colorMap = {\n    \"#BF381A\": \"red\",\n    \"#1561CD\": \"blue\",\n    \"#138346\": \"green\",\n    \"#A47238\": \"yellow\",\n    \"#2E2C2C\": \"black\"\n};\nconst colorNameMap = {\n    \"#F1F1F1\": langCheck(\"0000PUB-000282\"),\n    \"#BF381A\": langCheck(\"0000PUB-000283\"),\n    \"#1561CD\": langCheck(\"0000PUB-000284\"),\n    \"#138346\": langCheck(\"0000PUB-000285\"),\n    \"#A47238\": langCheck(\"0000PUB-000286\"),\n    \"#2E2C2C\": langCheck(\"0000PUB-000287\")\n};\nclass SubjectSetting extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colorObj: {\n                name: \"\",\n                color: \"\"\n            }, //新增颜色对象\n            disabled: true, //应用按钮禁用\n            checkedColor: \"\",\n            colorArr: [\n                {\n                    key: 0,\n                    color: \"#F1F1F1\",\n                    name: langCheck(\"0000PUB-000282\"),\n                    defaultShow: false,\n                    checked: false\n                },\n                {\n                    key: 1,\n                    color: \"#BF381A\",\n                    name: langCheck(\"0000PUB-000283\"),\n                    defaultShow: false,\n                    checked: false\n                },\n                {\n                    key: 2,\n                    color: \"#1561CD\",\n                    name: langCheck(\"0000PUB-000284\"),\n                    defaultShow: false,\n                    checked: false\n                },\n                {\n                    key: 3,\n                    color: \"#138346\",\n                    name: langCheck(\"0000PUB-000285\"),\n                    defaultShow: false,\n                    checked: false\n                },\n                {\n                    key: 4,\n                    color: \"#A47238\",\n                    name: langCheck(\"0000PUB-000286\"),\n                    defaultShow: false,\n                    checked: false\n                },\n                {\n                    key: 5,\n                    color: \"#2E2C2C\",\n                    name: langCheck(\"0000PUB-000287\"),\n                    defaultShow: false,\n                    checked: false\n                }\n            ],\n            modalVis: false,\n            addColor: \"\"\n        };\n    }\n    componentDidMount() {\n        this.getDefaultColor();\n    }\n    /**\n     * 获取存取颜色\n     */\n    getDefaultColor = () => {\n        let { colorArr } = this.state;\n        Ajax({\n            url: \"/nccloud/platform/appregister/querythemecolor.do\",\n            data: {},\n            noNeedShowError: true,\n            success: ({ data }) => {\n                if (data.success && data.data) {\n                    colorArr.map(e => {\n                        if (e.color == data.data.color) {\n                            e.checked = true;\n                        }\n                    });\n                    this.setState({\n                        checkedColor: data.data.color,\n                        colorArr\n                    });\n                } else {\n                    colorArr[0].checked = true;\n                    this.setState({\n                        colorArr\n                    });\n                }\n            },\n            error: error => {\n                colorArr[0].checked = true;\n                this.setState({\n                    colorArr\n                });\n            }\n        });\n    };\n    /**\n     * 选择事件\n     */\n    checkItem = (key, item) => {\n        this.state[item].map(e => {\n            e.defaultShow = false;\n        });\n        this.state[item][key].defaultShow = true;\n        let checkedColor = this.state[item][key].color;\n        this.setState({\n            [item]: this.state[item],\n            disabled: false,\n            checkedColor: checkedColor\n        });\n    };\n    /**\n     * 应用-更换主题\n     */\n    getAllData = () => {\n        let { checkedColor, colorArr } = this.state;\n        let { json } = this.props;\n        Ajax({\n            url: \"/nccloud/platform/appregister/addthemecolor.do\",\n            data: {\n                color: checkedColor,\n                name: colorNameMap[checkedColor],\n                defaultshow: true,\n                checked: true\n            },\n            info: {\n                name: langCheck(\"0000PUB-000258\") /* 国际化处理： 主题设置*/,\n                action: langCheck(\n                    \"0000PUB-000340\"\n                ) /* 国际化处理： 回写主题设置*/\n            },\n            noNeedShowError: true,\n            success: ({ data }) => {\n                if (data.success && data.data) {\n                    colorArr.map(e => {\n                        e.checked = false;\n                        if (e.color === data.data.color) {\n                            e.checked = true;\n                        }\n                    });\n                    this.setState({\n                        colorArr\n                    });\n                    if (checkedColor == \"#F1F1F1\") {\n                        document.getElementById(\n                            \"workbench\"\n                        ).className = `workbench-default nc-lightapp-front-default`;\n                        setTheme.call(this, `nc-lightapp-front-default`);\n                        window.top.nccColor = \"\";\n                        setStore(\"nccColor\", \"\");\n                        Notice({\n                            status: \"success\",\n                            msg: langCheck(\n                                \"Customize-000044\",\n                                \"pages\",\n                                json\n                            ) /* 国际化处理： 应用成功*/\n                        });\n                        return;\n                    }\n                    if (window.top) {\n                        window.top.nccColor = colorMap[checkedColor];\n                    }\n                    // 更换plantform.css\n                    setTheme.call(\n                        this,\n                        `nc-lightapp-front-${colorMap[checkedColor]}`\n                    );\n                    // 更换body class\n                    document.getElementById(\n                        \"workbench\"\n                    ).className = `workbench-${\n                        colorMap[checkedColor]\n                    } nc-lightapp-front-${colorMap[checkedColor]}`;\n                    // localStorage存颜色\n                    setStore(\n                        \"nccColor\",\n                        colorMap[checkedColor]\n                    );\n                    Notice({\n                        status: \"success\",\n                        msg: langCheck(\n                            \"Customize-000044\",\n                            \"pages\",\n                            json\n                        ) /* 国际化处理： 应用成功*/\n                    });\n                } else {\n                }\n            },\n            error: error => {\n                console.log(error);\n            }\n        });\n    };\n    showModalHidden = () => {\n        this.setState({\n            modalVis: false\n        });\n    };\n    showModalVis = () => {\n        this.setState({\n            modalVis: true\n        });\n    };\n    handleColorChange = (color, event) => {\n        console.log(color, event);\n    };\n    handleChangeComplete = (color, event) => {\n        this.setState({ addColor: color.hex });\n    };\n    handleModalOk = () => {\n        this.showModalHidden();\n    };\n    render() {\n        let { colorArr, disabled, checkedColor } = this.state;\n        let { json } = this.props;\n        return (\n            <div className=\"subjectSetting\">\n                <NCDiv className=\"subjectSettingLeft\" fieldid=\"left\" areaCode={NCDiv.config.Area}>\n                    <article>{langCheck(\"0000PUB-000288\")}</article>\n                    <div className=\"colorAlter\">\n                        {colorArr.map((item, index) => {\n                            let { defaultShow, key, color, checked } = item;\n                            return (\n                                <div\n                                    className=\"subjectItem\"\n                                    onClick={() =>\n                                        this.checkItem(key, \"colorArr\")\n                                    }\n                                >\n                                    <div\n                                        className={\n                                            defaultShow\n                                                ? \"itemObj checkedItem\"\n                                                : \"itemObj\"\n                                        }\n                                        style={{\n                                            background:\n                                                color == \"#F1F1F1\"\n                                                    ? \"#DFE6E6\"\n                                                    : color\n                                        }}\n                                    >\n                                        {color == \"#F1F1F1\" && (\n                                            <div className=\"defaultItemObj\" />\n                                        )}\n                                        {checked ? (\n                                            <i className=\"iconfont icon-liucheng1\" />\n                                        ) : defaultShow ? (\n                                            <i className=\"iconfont icon-yulan\" />\n                                        ) : null}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                        {/*新增开始*/}\n                        {/*<div\n                            className=\"subjectItem\"\n                            onClick={this.showModalVis}\n                        >\n                            <div\n                                className=\"itemObj\"\n                                style={{ background: \"pink\" }}\n                            >\n                                123\n                            </div>\n                            <div className=\"itemName\">新增</div>\n                        </div>*/}\n                    </div>\n                    <div className=\"colorAlter\">\n                        {colorArr.map((item, index) => {\n                            let { name } = item;\n                            return <div className=\"itemName\">{name}</div>;\n                        })}\n                    </div>\n                </NCDiv>\n                <div className=\"subjectSettingRight\">\n                    <div className=\"previewTitle\">\n                        {langCheck(\"0000PUB-000019\")}:\n                        <span>{`${\n                            colorNameMap[checkedColor]\n                                ? colorNameMap[checkedColor]\n                                : \"\"\n                        }`}</span>\n                    </div>\n                    {checkedColor !== \"\" && (\n                        <div className=\"previewPic\">\n                            <img\n                                src={\n                                    checkedColor == \"#F1F1F1\"\n                                        ? default1\n                                        : checkedColor == \"#BF381A\"\n                                        ? red1\n                                        : checkedColor == \"#1561CD\"\n                                        ? blue1\n                                        : checkedColor == \"#138346\"\n                                        ? green1\n                                        : checkedColor == \"#A47238\"\n                                        ? yellow1\n                                        : black1\n                                }\n                            />\n                            <img\n                                src={\n                                    checkedColor == \"#F1F1F1\"\n                                        ? default2\n                                        : checkedColor == \"#BF381A\"\n                                        ? red2\n                                        : checkedColor == \"#1561CD\"\n                                        ? blue2\n                                        : checkedColor == \"#138346\"\n                                        ? green2\n                                        : checkedColor == \"#A47238\"\n                                        ? yellow2\n                                        : black2\n                                }\n                            />\n                            <img\n                                src={\n                                    checkedColor == \"#F1F1F1\"\n                                        ? default3\n                                        : checkedColor == \"#BF381A\"\n                                        ? red3\n                                        : checkedColor == \"#1561CD\"\n                                        ? blue3\n                                        : checkedColor == \"#138346\"\n                                        ? green3\n                                        : checkedColor == \"#A47238\"\n                                        ? yellow3\n                                        : black3\n                                }\n                            />\n                        </div>\n                    )}\n                </div>\n                <NCDiv className=\"default-footer\" areaCode={NCDiv.config.BOTTOM}>\n                    <NCButton\n                        colors=\"primary\"\n                        disabled={disabled}\n                        onClick={this.getAllData}\n                        fieldid=\"apply\"\n                    >\n                        {langCheck(\n                            \"Customize-000020\",\n                            \"pages\",\n                            json\n                        ) /* 国际化处理： 应用*/}\n                    </NCButton>\n                </NCDiv>\n                <HotKeysModal\n                    closable={false}\n                    title={123}\n                    mask={false}\n                    visible={this.state.modalVis}\n                    onOk={this.onOkMoveDialog}\n                    onCancel={this.showModalHidden}\n                    footer={[\n                        <Tooltip\n                            placement=\"top\"\n                            overlayClassName=\"tootip-default\"\n                            // title={`${\n                            //     this.props.json[\"DesktopSetting-000015\"]\n                            // }(Alt + Y)`}\n                        >\n                            <Button\n                                key=\"submit\"\n                                type=\"primary\"\n                                onClick={this.handleModalOk}\n                            >\n                                确定(<span className=\"underline\">Y</span>)\n                                {/* /* 国际化处理： 确定*/}\n                            </Button>\n                        </Tooltip>,\n                        <Tooltip\n                            placement=\"top\"\n                            overlayClassName=\"tootip-default\"\n                            // title={`${\n                            //     this.props.json[\"DesktopSetting-000009\"]\n                            // }(Alt + Y)`}\n                        >\n                            <Button key=\"back\" onClick={this.showModalHidden}>\n                                取消(<span className=\"underline\">Y</span>)\n                                {/* /* 国际化处理： 取消*/}\n                            </Button>\n                        </Tooltip>\n                    ]}\n                >\n                    <SketchPicker\n                        onChange={this.handleColorChange}\n                        onChangeComplete={this.handleChangeComplete}\n                    />\n                </HotKeysModal>\n            </div>\n        );\n    }\n}\nexport default connect(state => {\n    return {};\n})(SubjectSetting);\n","module.exports = __webpack_public_path__ + \"images/black1.jpg\";","module.exports = __webpack_public_path__ + \"images/black2.jpg\";","module.exports = __webpack_public_path__ + \"images/black3.jpg\";","module.exports = __webpack_public_path__ + \"images/red1.jpg\";","module.exports = __webpack_public_path__ + \"images/red2.jpg\";","module.exports = __webpack_public_path__ + \"images/red3.jpg\";","module.exports = __webpack_public_path__ + \"images/blue1.jpg\";","module.exports = __webpack_public_path__ + \"images/blue2.jpg\";","module.exports = __webpack_public_path__ + \"images/blue3.jpg\";","module.exports = __webpack_public_path__ + \"images/green1.jpg\";","module.exports = __webpack_public_path__ + \"images/green2.jpg\";","module.exports = __webpack_public_path__ + \"images/green3.jpg\";","module.exports = __webpack_public_path__ + \"images/yellow1.jpg\";","module.exports = __webpack_public_path__ + \"images/yellow2.jpg\";","module.exports = __webpack_public_path__ + \"images/yellow3.jpg\";","module.exports = __webpack_public_path__ + \"images/default1.jpg\";","module.exports = __webpack_public_path__ + \"images/default2.jpg\";","module.exports = __webpack_public_path__ + \"images/default3.jpg\";"],"sourceRoot":""}