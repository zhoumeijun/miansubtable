{"version":3,"sources":["webpack:///./pages/Customize/DefaultSetting.js","webpack:///./components/Refers/BusinessUnitTreeRef/index.js","webpack:///./components/Refers/AccountBookTreeRef/index.js","webpack:///./components/Refers/AccountBookTreeRef/index.less?f9f3","webpack:///./components/Refers/AccountBookTreeRef/index.less","webpack:///./components/Refers/CreditCtlRegionGridRef/index.js","webpack:///./components/Refers/CostRegionDefaultGridRef/index.js","webpack:///./components/Refers/ContentLangRef/index.js","webpack:///./components/Refers/DataFormatRef/index.js","webpack:///./components/Refers/LiabilityBookDefaultRef/index.js","webpack:///./pages/Customize/ComLayout.js"],"names":["platform","base","NCDiv","NCButton","INITDATA","org_df_biz","refcode","refname","refpk","org_df_credit","org_df_cost","org_df_fa","org_df_res","dataFormat","contentLang","DefaultSetting","props","getAllData","json","individualPropertyVOs","propertyname","value","reqData","map","item","state","url","data","info","name","langCheck","action","success","status","msg","defaultRefValueInit","length","historyData","setState","disabled","handdleRefChange","type","console","log","obj","flag","DataCheck","Object","key","deepClone","this","newData","title","className","fieldid","areaCode","config","Area","placeholder","onChange","tabIndex","isMultiSelectedEnabled","queryCondition","TreeRefActionExt","BOTTOM","colors","onClick","Component","Refer","conf","high","refType","refName","refCode","rootNode","queryTreeUrl","treeConfig","code","isShowUnit","isTreelazyLoad","showGroup","showInCludeChildren","disabledDataShow","treeid","Ref","PopRefer","Radio","NCRadio","NCTree","NCMenu","NCDropdown","NCFormControl","NCCheckbox","RadioGroup","NCRadioGroup","ReferTree","NCTreeNode","datas","searchValue","undefined","nextProps","otherProps","textValue","renderTreeTitle","icon","isLeaf","children","isExpand","expandedKeys","includes","drawTitleString","indexOf","start","end","style","margin","padding","substring","color","transition","nodeData","nodetitle","nodecode","loop","pdata","filter","needShow","needExpand","treeNodeData","class","defaultProps","defaultExpandAll","onTreeTypeChange","treetype","loadTreeData","getParam","then","root","setTreeData","show","isShow","isFirstShow","dropDownShow","isSelectedShow","searchVal","treeSearchVal","selectedShow","idKey","selectedValues","treeData","selectedKeys","activeKey","document","body","overflow","isCacheable","queryGridUrl","pageSize","tableData","param","isSearch","isTreeSearch","__getParam","pageInfo","page","loadAndSetTableData","pid","pageIndex","loadAndSetTreeData","rows","groupParam","refpkGroup","refGroup","isshow","mshowoff","checked","resolve","loading","currentLevel","referVal","ajax","res","Error","error","message","datarows","forEach","e","nodeid","setCacheData","toast","content","onTreeNodeCheck","checkedKeys","node","checkedNodes","event","onlyLeafCanSelect","getSelectTreeValuesThroughIncludeChildrenforme","includeChildren","treeNodeId","eventKey","isClassNode","nodedata","mapFunc","set","delete","func","call","_path","Array","isArray","selectRootKeys","k","target","parentNode","cb","_display","expandkeyAll","loopNode","nodes","push","search","renderPopoverHeaderExtend","width","paddingLeft","renderPopoverLeft","handler","laybtns","i","maxlaynumber","nodenumber","parseInt","laynumber","Item","expandLay","createNumberBtns","onMenuSelect","domEvent","layno","renderSearch","valueTemp","display","marginTop","justifyContent","marginBottom","position","right","top","marginLeft","paddingTop","subOrg","trigger","overlay","onSelect","NCSubMenu","animation","selectedValue","bind","height","checkStrictly","checkable","showLine","onTreeNodeSelectWapper","onExpand","onTreeNodeExpand","onCheck","onTreeNodeCheckWapper","keys","autoExpandParent","onDoubleClick","onTreeNodeDoubleClickWapper","interval","defaultChecked","val","Date","getTime","s","setTimeout","onSearch","clearTimeout","expandKeys","loopsearch","parendExpand","child","expand","selected","selectedNodes","nodeKey","rest","onTreeNodeSelect","onTreeNodeDoubleClick","module","options","transform","locals","exports","columnConfig","ComLayout"],"mappings":"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","file":"23.fce6193e.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport ComLayout from \"./ComLayout\";\n// 业务单元\nimport BusinessUnitTreeRef from \"Components/Refers/BusinessUnitTreeRef\";\n// 财务核算账簿\nimport AccountBookTreeRef from \"Components/Refers/AccountBookTreeRef\";\n// 默认信用控制域\nimport CreditCtlRegionGridRef from \"Components/Refers/CreditCtlRegionGridRef\";\n// 默认成本域\nimport CostRegionDefaultGridRef from \"Components/Refers/CostRegionDefaultGridRef\";\n// 默认内容语种参照\nimport ContentLangRef from \"Components/Refers/ContentLangRef\";\n// 默认数据格式参照\nimport DataFormatRef from \"Components/Refers/DataFormatRef\";\n// 责任核算账簿参照\nimport LiabilityBookDefaultRef from \"Components/Refers/LiabilityBookDefaultRef\";\nimport Notice from \"Components/Notice\";\nimport Ajax from \"Pub/js/ajax\";\nimport { langCheck, deepClone } from \"Pub/js/utils.js\";\nimport platform from \"Pub/js/platform\";\nconst { NCDiv, NCButton } = platform.base;\nconst INITDATA = {\n    // 默认业务单元\n    org_df_biz: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 信用控制域\n    org_df_credit: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 默认成本域\n    org_df_cost: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 默认财务核算账簿\n    org_df_fa: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 责任核算账簿\n    org_df_res: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 默认数据格式参照\n    dataFormat: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    },\n    // 默认内容语种参照\n    contentLang: {\n        refcode: \"\",\n        refname: \"\",\n        refpk: \"\"\n    }\n};\nclass DefaultSetting extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...deepClone(INITDATA),\n            // 应用按钮是否可用\n            disabled: true\n        };\n        this.historyData = deepClone(INITDATA);\n    }\n    getAllData = () => {\n        let { json } = this.props;\n        let individualPropertyVOs = [\n            {\n                propertyname: \"org_df_biz\",\n                value: \"\"\n            },\n            {\n                propertyname: \"org_df_fa\",\n                value: \"\"\n            },\n            {\n                propertyname: \"org_df_credit\",\n                value: \"\"\n            },\n            {\n                propertyname: \"org_df_cost\",\n                value: \"\"\n            },\n            {\n                propertyname: \"org_df_res\",\n                value: \"\"\n            }\n        ];\n        individualPropertyVOs = individualPropertyVOs.map(item => {\n            item.value = this.state[item.propertyname][\"refpk\"];\n            return item;\n        });\n        let reqData = {\n            individualPropertyVOs,\n            dataFormat: this.state[\"dataFormat\"][\"refpk\"],\n            contentLang: this.state[\"contentLang\"][\"refpk\"]\n        };\n        Ajax({\n            url: `/nccloud/platform/appregister/saveindividualpro.do`,\n            data: reqData,\n            info: {\n                name: langCheck(\n                    \"Customize-000032\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 个性化-默认设置*/,\n                action: langCheck(\n                    \"Customize-000003\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 保存*/\n            },\n            success: ({ data: { data } }) => {\n                if (data) {\n                    Notice({\n                        status: \"success\",\n                        msg: langCheck(\n                            \"Customize-000044\",\n                            \"pages\",\n                            json\n                        ) /* 国际化处理： 应用成功*/\n                    });\n                    data = this.defaultRefValueInit(data);\n                    let DataArray = Object.keys(data);\n                    if (DataArray.length > 0) {\n                        this.historyData = { ...INITDATA, ...data };\n                    }\n                    this.setState({ ...data, disabled: false });\n                }\n            }\n        });\n    };\n    handdleRefChange = (value, type) => {\n        console.log(value, type);\n        let { refname = \"\", refcode = \"\", refpk = null } = value;\n        let obj = {};\n        obj[type] = {};\n        obj[type][\"refname\"] = refname;\n        obj[type][\"refcode\"] = refcode;\n        obj[type][\"refpk\"] = refpk;\n        this.setState({ ...obj }, () => {\n            let flag = this.DataCheck();\n            this.setState({\n                disabled: flag\n            });\n        });\n    };\n    // 数据检查\n    DataCheck = () => {\n        let Object = this.historyData;\n        for (let key in Object) {\n            if (Object[key][\"refpk\"] !== this.state[key][\"refpk\"]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * 初始化默认参照的数据\n     */\n    defaultRefValueInit = Object => {\n        for (const key in Object) {\n            if (!Object[key]) {\n                Object[key] = {\n                    refcode: \"\",\n                    refname: \"\",\n                    refpk: null\n                };\n            }\n        }\n        return Object;\n    };\n    componentDidMount() {\n        let { json } = this.props;\n        Ajax({\n            url: `/nccloud/platform/appregister/queryindividualpro.do`,\n            info: {\n                name: langCheck(\n                    \"Customize-000032\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 个性化-默认设置*/,\n                action: langCheck(\n                    \"Customize-000005\",\n                    \"pages\",\n                    json\n                ) /* 国际化处理： 查询*/\n            },\n            success: ({ data: { data } }) => {\n                if (data) {\n                    data = this.defaultRefValueInit(data);\n                    let newData = { ...INITDATA, ...data };\n                    this.historyData = newData;\n                    this.setState({ ...newData });\n                } else {\n                    let {\n                        org_df_biz,\n                        org_df_credit,\n                        org_df_cost,\n                        org_df_res,\n                        org_df_fa,\n                        dataFormat,\n                        contentLang\n                    } = this.state;\n                    this.historyData = {\n                        org_df_biz,\n                        org_df_credit,\n                        org_df_cost,\n                        org_df_res,\n                        org_df_fa,\n                        dataFormat,\n                        contentLang\n                    };\n                }\n            }\n        });\n    }\n    render() {\n        let {\n            org_df_biz,\n            org_df_credit,\n            org_df_cost,\n            org_df_res,\n            org_df_fa,\n            contentLang,\n            dataFormat,\n            disabled\n        } = this.state;\n        let { json } = this.props;\n        return (\n            <ComLayout title={this.props.title}>\n                <div className=\"defaultSetting workbench-auto-scroll\">\n                    <div className=\"customizeContent\">\n                        <div className=\"default-title\">\n                            {langCheck(\n                                \"Customize-000039\",\n                                \"pages\",\n                                json\n                            ) /* 国际化处理： 默认设置*/}\n                        </div>\n                        <NCDiv className=\"default-form-container\" fieldid=\"defaultSetting\" areaCode={NCDiv.config.Area}>\n                            <div className=\"default-form\">\n                                <label className=\"default-label\">\n                                    {langCheck(\n                                        \"Customize-000033\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认业务单元*/}\n                                </label>\n                                <BusinessUnitTreeRef\n                                    value={org_df_biz}\n                                    // placeholder={langCheck('Customize-000033', 'pages', json)}/* 国际化处理： 默认业务单元*/\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        this.handdleRefChange(\n                                            value,\n                                            \"org_df_biz\"\n                                        );\n                                    }}\n                                    tabIndex=\"0\"\n                                    fieldid=\"businessUnit\"\n                                />\n                            </div>\n                            <div className=\"default-form\">\n                                <label className=\"default-label\">\n                                    {langCheck(\n                                        \"Customize-000034\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认财务核算账簿*/}\n                                </label>\n                                <AccountBookTreeRef\n                                    isMultiSelectedEnabled={false}\n                                    value={org_df_fa}\n                                    // placeholder={langCheck('Customize-000034', 'pages', json)}/* 国际化处理： 默认财务核算账簿*/\n                                    placeholder=\"\"\n                                    queryCondition={() => {\n                                        return {\n                                            TreeRefActionExt:\n                                                \"nccloud.web.platform.workbench.ref.filter.AccountBookRefPermissionFilter\"\n                                        };\n                                    }}\n                                    onChange={value => {\n                                        this.handdleRefChange(\n                                            value,\n                                            \"org_df_fa\"\n                                        );\n                                    }}\n                                    tabIndex=\"1\"\n                                    fieldid=\"accountBook\"\n                                />\n                            </div>\n                            <div className=\"default-form\">\n                                <label className=\"default-label\">\n                                    {langCheck(\n                                        \"Customize-000035\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认信用控制域*/}\n                                </label>\n                                <CreditCtlRegionGridRef\n                                    value={org_df_credit}\n                                    // placeholder={langCheck('Customize-000035', 'pages', json)}/* 国际化处理： 默认信用控制域*/\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        this.handdleRefChange(\n                                            value,\n                                            \"org_df_credit\"\n                                        );\n                                    }}\n                                    tabIndex=\"2\"\n                                    fieldid=\"creditCtlRegion\"\n                                />\n                            </div>\n                            <div className=\"default-form\">\n                                <label className=\"default-label\">\n                                    {langCheck(\n                                        \"Customize-000036\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认成本域*/}\n                                </label>\n                                <CostRegionDefaultGridRef\n                                    value={org_df_cost}\n                                    // placeholder={langCheck('Customize-000036', 'pages', json)}/* 国际化处理： 默认成本域*/\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        this.handdleRefChange(\n                                            value,\n                                            \"org_df_cost\"\n                                        );\n                                    }}\n                                    tabIndex=\"3\"\n                                    fieldid=\"costRegionDefault\"\n                                />\n                            </div>\n                            <div className=\"default-form\">\n                                <label className=\"default-label\">\n                                    {langCheck(\n                                        \"Customize-000045\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 责任核算账簿*/}\n                                </label>\n                                <LiabilityBookDefaultRef\n                                    value={org_df_res}\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        this.handdleRefChange(\n                                            value,\n                                            \"org_df_res\"\n                                        );\n                                    }}\n                                    tabIndex=\"4\"\n                                    fieldid=\"liabilityBookDefault\"\n                                />\n                            </div>\n                        </NCDiv>\n                        <div className=\"default-title margin-top-20\">\n                            {langCheck(\n                                \"Customize-000040\",\n                                \"pages\",\n                                json\n                            ) /* 国际化处理： 默认语言格式*/}\n                        </div>\n                        <NCDiv className=\"default-form-container\" fieldid=\"defaultLanguage\" areaCode={NCDiv.config.Area}>\n                            <div className=\"default-form\">\n                                <label className=\"default-label item-required\">\n                                    {langCheck(\n                                        \"Customize-000037\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认数据格式*/}\n                                </label>\n                                <DataFormatRef\n                                    value={dataFormat}\n                                    // placeholder={langCheck('Customize-000037', 'pages', json)}/* 国际化处理： 默认数据格式*/\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        if (value.refcode) {\n                                            this.handdleRefChange(\n                                                value,\n                                                \"dataFormat\"\n                                            );\n                                        } else {\n                                            return;\n                                        }\n                                    }}\n                                    tabIndex=\"5\"\n                                    fieldid=\"dataFormat\"\n                                />\n                            </div>\n                            <div className=\"default-form\">\n                                <label className=\"default-label item-required\">\n                                    {langCheck(\n                                        \"Customize-000038\",\n                                        \"pages\",\n                                        json\n                                    ) /* 国际化处理： 默认内容语种*/}\n                                </label>\n                                <ContentLangRef\n                                    value={contentLang}\n                                    // placeholder={langCheck('Customize-000038', 'pages', json)}/* 国际化处理： 默认内容语种*/\n                                    placeholder=\"\"\n                                    onChange={value => {\n                                        if (value.refcode) {\n                                            this.handdleRefChange(\n                                                value,\n                                                \"contentLang\"\n                                            );\n                                        } else {\n                                            return;\n                                        }\n                                    }}\n                                    tabIndex=\"6\"\n                                    fieldid=\"contentLang\"\n                                />\n                            </div>\n                        </NCDiv>\n                    </div>\n                    <NCDiv className=\"default-footer\" areaCode={NCDiv.config.BOTTOM}>\n                        <NCButton\n                            colors=\"primary\"\n                            disabled={disabled}\n                            onClick={this.getAllData}\n                            fieldid=\"apply\"\n                        >\n                            {langCheck(\n                                \"Customize-000020\",\n                                \"pages\",\n                                json\n                            ) /* 国际化处理： 应用*/}\n                        </NCButton>\n                    </NCDiv>\n                </div>\n            </ComLayout>\n        );\n    }\n}\nexport default DefaultSetting;\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport var conf = {\r\n    refType: \"tree\",\r\n    refName: langCheck('0000PUB-000055'),/* 国际化处理： 业务单元*/\r\n    refCode: \"uapbd.refer.org.BusinessUnitTreeRef\",\r\n    rootNode: { refname: langCheck('0000PUB-000055'), refpk: \"root\" },/* 国际化处理： 业务单元*/\r\n    placeholder: langCheck('0000PUB-000055'),/* 国际化处理： 业务单元*/\r\n    queryTreeUrl: \"/nccloud/uapbd/org/BusinessUnitTreeRef.do\",\r\n    treeConfig: { name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"refcode\", \"refname\"] },/* 国际化处理： 编码,名称*/\r\n    isMultiSelectedEnabled: false,\r\n    isShowUnit: false,\r\n    queryCondition: () => {\r\n        return {\r\n            TreeRefActionExt:\r\n                \"nccloud.web.platform.workbench.ref.filter.OrgRefPermissionFilter\"\r\n        };\r\n    }\r\n    // unitProps:{\r\n    //     queryTreeUrl: \"/nccloud/riart/ref/groupRefTreeAction.do\",\r\n    //     refType: \"tree\",\r\n    //     //isMultiSelectedEnabled:true\r\n    //     refName: \"集团\",\r\n    //     rootNode: { refname: \"集团\", refpk: \"root\" }\r\n    // }\r\n};\r\n\r\nexport default function(props = {}) {\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { base, high, ajax, toast } from 'nc-lightapp-front';\r\nconst { Refer } = high;\r\nconst { PopRefer } = high.Refer, // 引入PopRefer类\r\n    { NCRadio: Radio, NCTree, NCMenu, NCDropdown, NCButton, NCFormControl, NCCheckbox } = base,\r\n    { NCRadioGroup: RadioGroup } = Radio;\r\nconst TreeNode = NCTree.NCTreeNode;\r\nimport { langCheck } from 'Pub/js/utils';\r\nimport './index.less';\r\nclass ReferTree extends Component {\r\n    static defaultProps = {\r\n        defaultExpandAll: false\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datas: [],\r\n            searchValue: undefined\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.state.datas = this.props.data;\r\n        this.setState(this.state);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.state.datas = nextProps.data;\r\n        this.state.searchValue = nextProps.searchValue;\r\n        this.setState(this.state);\r\n    }\r\n    onExpand() {\r\n        console.log('onExpand');\r\n    }\r\n    render() {\r\n        // var renderTitle = (item) => {\r\n        // \treturn item.refpk == 'root' ? item.refname :  item.nodeData.nodecode + ' ' + item.nodeData.nodetitle;\r\n        // }\r\n        // const { data, ...otherProps } = this.props;\r\n        // const loop = (datas) => datas.map((item) => {\r\n        // \tvar children = item.children || [];\r\n        //     return (<NCTree.NCTreeNode title={renderTitle(item)} key={item.refpk} isLeaf={children.length == 0}  treeNodeData={item.nodeData|| {}} nodeData={item.nodeData|| {}} >{children.length == 0? '' :loop(children)}</NCTree.NCTreeNode>)\r\n        // });\r\n        // return (\r\n        // \t<NCTree{...otherProps}>{loop(this.state.datas)}</NCTree>\r\n        // );\r\n        //---------------------------------------------------------------\r\n        const { data, ...otherProps } = this.props;\r\n        var textValue = this.state.searchValue;\r\n        var renderTreeTitle = (item, icon) => {\r\n            var isLeaf = !item.children || item.children == 0,\r\n                isExpand = this.props.expandedKeys.includes(item.refpk);\r\n\r\n            // if(item && item.hasOwnProperty('children')&& item.children.length !=null){\r\n            //     className = this.props.expandedKeys.includes(item.refpk)?\"refer-tree-switch iconfont icon-wenjianjiadakai\":\"refer-tree-switch iconfont icon-wenjianjia\";\r\n            // }else{\r\n            //     className = \"refer-tree-point\";\r\n            // }\r\n            var drawTitleString = (title, icon) => {\r\n                let className = icon\r\n                    ? isLeaf\r\n                      ? 'refer-tree-point'\r\n                      : isExpand\r\n                        ? 'refer-tree-switch iconfont icon-wenjianjiadakai'\r\n                        : 'refer-tree-switch iconfont icon-wenjianjia'\r\n                    : '';\r\n                if (textValue && textValue.length > 0 && title && title.length > 0 && title.indexOf(textValue) != -1) {\r\n                    var start = title.indexOf(textValue),\r\n                        end = start + textValue.length;\r\n                    return [\r\n                        <span className={className} />,\r\n                        <span className='refer-tree-title' style={{ margin: 0, padding: 0 }}>\r\n                            <span>{title.substring(0, start)}</span>\r\n                            <span\r\n                                style={{\r\n                                    color: '#f50',\r\n                                    transition: 'all .3s?ease',\r\n                                    'font-weight': 'bold'\r\n                                }}\r\n                                className='uapbd-cashflow-treefilter-highlight'\r\n                            >\r\n                                {textValue}\r\n                            </span>\r\n                            <span>{title.substring(end, title.length)}</span>\r\n                        </span>\r\n                    ];\r\n                } else {\r\n                    return [\r\n                        <span className={className} />,\r\n                        <span className='refer-tree-title' style={{ margin: 0, padding: 0 }}>\r\n                            {title}\r\n                        </span>\r\n                    ];\r\n                }\r\n            };\r\n            var title = item.refpk == 'root' ? ' ' : item.nodeData.nodetitle;\r\n            var code = item.refpk == 'root' ? '' : item.nodeData.nodecode;\r\n\r\n            return [\r\n                drawTitleString(code, true),\r\n                <span className='refer-tree-title' style={{ margin: 0, padding: 0 }}>\r\n                    &nbsp;&nbsp;\r\n                </span>,\r\n                drawTitleString(title, false)\r\n            ];\r\n        };\r\n        const loop = (datas, pdata) => {\r\n            return datas\r\n                .filter((item) => {\r\n                    return (\r\n                        (item.needShow == undefined && item.needExpand == undefined) ||\r\n                        item.needShow ||\r\n                        item.needExpand ||\r\n                        item.key == 'root'\r\n                    );\r\n                })\r\n                .map((item) => {\r\n                    var children = item.children || [];\r\n                    return (\r\n                        <NCTree.NCTreeNode\r\n                            title={renderTreeTitle(item)}\r\n                            key={item.refpk}\r\n                            isLeaf={children.length == 0}\r\n                            treeNodeData={item.nodeData || {}}\r\n                            nodeData={item.nodeData || {}}\r\n                        >\r\n                            {children.length == 0 ? <i class='tree-dian' /> : loop(children)}\r\n                        </NCTree.NCTreeNode>\r\n                    );\r\n                });\r\n        };\r\n        return (\r\n            <div className='refer-tree-wrapper'>\r\n                <div className='refer-tree-container'>\r\n                    <NCTree {...otherProps}>{loop(this.state.datas)}</NCTree>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Ref extends PopRefer {\r\n    // 继承PopRefer类\r\n    constructor(props) {\r\n        super(props);\r\n        this.interval = 0;\r\n        this.state = {\r\n            ...this.state, // 继承state\r\n            treetype: 'type',\r\n            textValue: undefined,\r\n\r\n            subOrg: {\r\n                defaultChecked: false,\r\n                checked: false,\r\n                onChange: (val) => {\r\n                    this.state.subOrg.checked = val;\r\n                    this.state.includeChildren = val;\r\n                    this.setState(this.state, () => {});\r\n                }\r\n            },\r\n            mshowoff: {\r\n                defaultChecked: false,\r\n                checked: false,\r\n                onChange: (val) => {\r\n                    this.state.mshowoff.checked = val;\r\n                    this.setState(this.state, () => {\r\n                        this.onTreeTypeChange(this.state.treetype);\r\n                    });\r\n                }\r\n            },\r\n            refGroup: {\r\n                value: undefined,\r\n                refType: 'tree',\r\n                refName: langCheck('0000PUB-000031') /* 国际化处理： 集团(所有)*/,\r\n                placeholder: langCheck('0000PUB-000031') /* 国际化处理： 集团(所有)*/,\r\n                refCode: 'uapbd.org.GroupDefaultTreeRef',\r\n                queryTreeUrl: '/nccloud/uapbd/ref/GroupDefaultTreeRef.do',\r\n                treeConfig: {\r\n                    name: [ langCheck('0000PUB-000032'), langCheck('0000PUB-000033') ] /* 国际化处理： 编码,名称*/,\r\n                    code: [ 'refcode', 'refname' ]\r\n                },\r\n                rootNode: { refname: langCheck('0000PUB-000031'), refpk: 'root' } /* 国际化处理： 集团(所有)*/,\r\n                isMultiSelectedEnabled: false,\r\n                onChange: (val) => {\r\n                    this.state.refGroup.value = val;\r\n                    this.setState(this.state, () => {\r\n                        this.onTreeTypeChange(this.state.treetype);\r\n                    });\r\n                }\r\n            },\r\n            search: {\r\n                className: 'AccountBookTreeref-Search',\r\n                valueTemp: undefined,\r\n                value: undefined,\r\n                placeholder: langCheck('0000PUB-000034') /* 国际化处理： 账簿编码/账簿名称*/,\r\n                onChange: (value) => {\r\n                    this.interval = new Date().getTime();\r\n                    let s = setTimeout(() => {\r\n                        //停止输入0.5s后执行\r\n                        if (new Date().getTime() - this.interval >= 500) {\r\n                            this.state.search.value = this.state.search.valueTemp;\r\n                            this.setState(this.state, () => {\r\n                                this.state.search.onSearch();\r\n                            });\r\n                        }\r\n                        clearTimeout(s);\r\n                    }, 500);\r\n                    this.state.search.valueTemp = value;\r\n                    this.setState(this.state);\r\n                },\r\n                onSearch: () => {\r\n                    var textValue = this.state.search.value || '',\r\n                        expandKeys = [];\r\n                    const loopsearch = (nodes = []) => {\r\n                        var parendExpand = false;\r\n                        (nodes || []).forEach((child) => {\r\n                            var expand = loopsearch(child.children || []);\r\n                            child.needExpand = expand;\r\n                            child.needShow = expand\r\n                                ? true\r\n                                : child.nodeData.nodedata == 'nodeclass' ||\r\n                                  child.nodeData.nodecode.indexOf(textValue) != -1 ||\r\n                                  child.title.indexOf(textValue) != -1\r\n                                  ? true\r\n                                  : false;\r\n                            parendExpand = parendExpand ? parendExpand : child.needShow;\r\n                            if (expand) {\r\n                                expandKeys.push(child.key);\r\n                            }\r\n                        });\r\n                        return parendExpand;\r\n                    };\r\n                    if (textValue && textValue.length != 0) {\r\n                        var rootExpand = loopsearch(this.state.treeData || []);\r\n                        expandKeys.push('root');\r\n                        this.state.expandedKeys = expandKeys;\r\n                        this.setState(this.state);\r\n                    } else {\r\n                        this.state.expandedKeys = [];\r\n                        this.setState(this.state);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.selectRootKeys = [];\r\n        this.showGroup = props.showGroup;\r\n        this.showInCludeChildren = props.showInCludeChildren;\r\n        this.disabledDataShow = props.disabledDataShow || false;\r\n    }\r\n\r\n    onTreeTypeChange = (value) => {\r\n        this.state.treetype = value;\r\n        this.setState(this.state, () => {\r\n            this.loadTreeData(this.getParam()).then((data) => {\r\n                var rootTitle =\r\n                    value === 'type' ? langCheck('0000PUB-000035') : langCheck('0000PUB-000036'); /* 国际化处理： 账簿类型,主账簿*/\r\n                var root = {\r\n                    refname: rootTitle,\r\n                    refpk: 'root'\r\n                };\r\n                this.setTreeData('treeData', root, data);\r\n            });\r\n        });\r\n    };\r\n\r\n    show = () => {\r\n        this.setState(\r\n            {\r\n                isShow: true,\r\n                isFirstShow: false,\r\n                dropDownShow: false,\r\n                isSelectedShow: false,\r\n                searchVal: '',\r\n                treeSearchVal: '',\r\n                selectedShow: false\r\n            },\r\n            () => {\r\n                let { disabled, isTreelazyLoad, idKey } = this.props,\r\n                    { selectedValues, isFirstShow, treeData, selectedKeys, activeKey, expandedKeys } = this.state;\r\n                if (disabled) {\r\n                    return false;\r\n                }\r\n                document.body.style.overflow = 'hidden';\r\n                //缓存旧数据，做取消用\r\n                let { refType, isCacheable, queryGridUrl, queryTreeUrl, rootNode, pageSize } = this.props,\r\n                    { tableData, isSearch, searchVal, isTreeSearch, treeSearchVal } = this.state,\r\n                    param;\r\n                // if (isFirstShow) {\r\n                if (refType === 'grid') {\r\n                    param = this.__getParam({\r\n                        pageInfo: tableData[0].page\r\n                    });\r\n                    // isSearch && (param.keyword = searchVal);\r\n                    this.loadAndSetTableData(param);\r\n                } else {\r\n                    param = this.__getParam({\r\n                        pid: isTreelazyLoad ? rootNode[idKey] : '',\r\n                        pageInfo: {\r\n                            pageSize,\r\n                            pageIndex: -1\r\n                        }\r\n                    });\r\n                    // isTreeSearch && (param.keyword = treeSearchVal);\r\n                    this.loadAndSetTreeData(param, rootNode, expandedKeys);\r\n                    if (refType === 'gridTree') {\r\n                        tableData[0].rows = [];\r\n                        selectedKeys = [];\r\n                    }\r\n                    this.setState({\r\n                        tableData,\r\n                        selectedKeys: []\r\n                        // expandedKeys: [ rootNode[idKey] ]\r\n                    });\r\n                }\r\n                // }\r\n            }\r\n        );\r\n    };\r\n\r\n    getParam = (param = {}) => {\r\n        var { queryCondition } = this.props,\r\n            queryCondition = queryCondition\r\n                ? typeof queryCondition === 'function'\r\n                  ? queryCondition()\r\n                  : typeof queryCondition === 'object' ? queryCondition : {}\r\n                : {};\r\n        var groupParam = {};\r\n        if (this.showGroup) {\r\n            groupParam = {\r\n                refpkGroup:\r\n                    this.state.refGroup.value && this.state.refGroup.value.refpk\r\n                        ? this.state.refGroup.value.refpk\r\n                        : '-1',\r\n                showGroup: true\r\n            };\r\n        }\r\n        return {\r\n            queryCondition: {\r\n                ...queryCondition,\r\n                treetype: this.state.treetype,\r\n                textValue: this.state.textValue,\r\n                ...groupParam,\r\n                isshow: this.state.isShow,\r\n                disabledDataShow: this.disabledDataShow ? this.state.mshowoff.checked || false : false\r\n            },\r\n            pageInfo: { pageSize: 10, pageIndex: 1 } //放置报错\r\n        };\r\n    };\r\n\r\n    loadTreeData = async (param) => {\r\n        return await new Promise((resolve) => {\r\n            this.setState({ loading: true }, () => {\r\n                let { currentLevel, referVal } = this.state;\r\n                let { queryTreeUrl, queryCondition, isCacheable } = this.props;\r\n                //判断是否启用了集团，\r\n                ajax({\r\n                    url: queryTreeUrl,\r\n                    data: param,\r\n                    loading: false,\r\n                    success: (res) => {\r\n                        this.setState({ loading: false }, () => {\r\n                            if (!res.success) {\r\n                                throw new Error(res.error.message);\r\n                                return;\r\n                            }\r\n                            res.data.datarows.forEach((e) => {\r\n                                e.nodeData.refpk = e.nodeData.nodeid;\r\n                                e.nodeData.refname = e.nodeData.nodetitle;\r\n                                e.nodeData.refcode = e.nodeData.nodecode;\r\n                                e.refcode = e.nodeData.nodecode;\r\n                            });\r\n                            var newData = {\r\n                                //满足平台的格式\r\n                                rows: res.data.datarows\r\n                            };\r\n                            this.setCacheData(queryTreeUrl, param, newData);\r\n                            resolve(newData);\r\n                        });\r\n                    },\r\n                    error: (e) => {\r\n                        toast({ color: 'danger', content: e.message });\r\n                        this.setState({\r\n                            loading: false\r\n                        });\r\n                        throw new Error(e);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onTreeNodeSelectWapper(selectedKeys, { selected, selectedNodes, node, event }, ...rest) {\r\n        if (this.state.treetype == 'type' && node.props.treeNodeData.nodedata == 'nodeclass') {\r\n            var expandedKeys = this.state.expandedKeys,\r\n                nodeKey = node.props.eventKey;\r\n            expandedKeys =\r\n                expandedKeys.indexOf(nodeKey) == -1\r\n                    ? [ ...expandedKeys, nodeKey ]\r\n                    : expandedKeys.filter((e) => e != nodeKey);\r\n            this.state.expandedKeys = expandedKeys;\r\n            this.setState(this.state);\r\n            return;\r\n        }\r\n        this.onTreeNodeSelect(selectedKeys, { selected, selectedNodes, node, event }, ...rest);\r\n    }\r\n    onTreeNodeDoubleClickWapper(selectedKeys, { selected, selectedNodes, node, event }, ...rest) {\r\n        if (this.state.treetype == 'type' && node.props.treeNodeData.nodedata == 'nodeclass') {\r\n            return;\r\n        }\r\n        this.onTreeNodeDoubleClick(selectedKeys, { selected, selectedNodes, node, event }, ...rest);\r\n    }\r\n\r\n    onTreeNodeCheckWapper(checkedKeys, { checked, checkedNodes, node, event }) {\r\n        // if(this.state.treetype == 'type' && node.props.treeNodeData.nodedata == 'nodeclass')\r\n        // \treturn;\r\n        this.onTreeNodeCheck(checkedKeys, {\r\n            checked,\r\n            checkedNodes,\r\n            node,\r\n            event\r\n        });\r\n    }\r\n\r\n    onTreeNodeCheck = (checkedKeys, { checked, checkedNodes, node, event }) => {\r\n        // console.log(checkedKeys, { checked, checkedNodes, node, event });\r\n        const { rootNode, onlyLeafCanSelect, idKey } = this.props;\r\n        let { selectedValues, treeData } = this.state;\r\n        selectedValues = this.getSelectTreeValuesThroughIncludeChildrenforme(node, checked);\r\n        this.setState({\r\n            selectedValues\r\n        });\r\n    };\r\n\r\n    getSelectTreeValuesThroughIncludeChildrenforme = (node, checked) => {\r\n        let { selectedValues, includeChildren, treetype } = this.state,\r\n            treeNodeId = node.props.eventKey;\r\n        const { idKey } = this.props;\r\n        const isClassNode = this.state.treetype == 'type' && node.props.treeNodeData.nodedata == 'nodeclass';\r\n        includeChildren = includeChildren || isClassNode; //点击的是分类节点按照包含下级处理\r\n\r\n        if (includeChildren) {\r\n            // 包含下级\r\n            //let mapFunc = selectedValues.get(treeNodeId) ? selectedValues.delete : selectedValues.set;\r\n            let mapFunc = !checked ? selectedValues.delete : selectedValues.set;\r\n            // 选中所有下级节点\r\n            (function func(node) {\r\n                let data = node.props.treeNodeData,\r\n                    children = node.props.children;\r\n                if (treetype == 'type' && node.props.treeNodeData.nodedata == 'nodeclass') {\r\n                } else {\r\n                    mapFunc.call(selectedValues, data._path || data[idKey], data);\r\n                }\r\n                if (Array.isArray(children)) {\r\n                    children.forEach((e) => void func(e));\r\n                }\r\n            })(node);\r\n        } else {\r\n            // 选中单个节点\r\n            let data = node.props.treeNodeData;\r\n            !checked ? selectedValues.delete(treeNodeId, data) : selectedValues.set(treeNodeId, data);\r\n        }\r\n        if (isClassNode) {\r\n            this.selectRootKeys = checked\r\n                ? [ ...this.selectRootKeys, node.props.nodeData.refpk ]\r\n                : this.selectRootKeys.filter((k) => {\r\n                      return k != node.props.nodeData.refpk;\r\n                  });\r\n        }\r\n\r\n        return selectedValues;\r\n    };\r\n\r\n    setTreeData = (target, parentNode, data, cb) => {\r\n        let { expandedKeys, textValue } = this.state;\r\n        data.rows.forEach((e) => {\r\n            e._display = e.title;\r\n            e.pid = e.pid || rootNode.refpk;\r\n        });\r\n        var expandkeyAll = [];\r\n        if (textValue && textValue.length > 0) {\r\n            var loopNode = (nodes) => {\r\n                nodes.forEach((node) => {\r\n                    expandkeyAll.push(node.refpk);\r\n                    loopNode(node.children || []);\r\n                });\r\n            };\r\n            loopNode(data.rows);\r\n        }\r\n        this.setState(\r\n            {\r\n                //[target]: this.state[target],\r\n                [target]: data.rows || [],\r\n                expandedKeys: expandkeyAll,\r\n\r\n                search: {\r\n                    ...this.state.search,\r\n                    value: undefined\r\n                }\r\n            },\r\n            () => {\r\n                typeof cb === 'function' && cb();\r\n            }\r\n        );\r\n    };\r\n    // 节点展开方法\r\n    // onTreeNodeExpand = (expandedKeys)=>{\r\n    // \tconsole.log(expandedKeys);\r\n    // \tthis.state.expandedKeys = expandedKeys;\r\n    // }\r\n    // 复写原型方法：渲染顶部 集团参照\r\n    renderPopoverHeaderExtend = () => {\r\n        return (\r\n            <div style={{ width: 200, paddingLeft: 10 }}>\r\n                {this.props.showGroup ? <Refer {...this.state.refGroup} /> : ''}\r\n            </div>\r\n        );\r\n    };\r\n    // 复写原型方法：渲染弹出层左侧\r\n    renderPopoverLeft = () => {\r\n        let { isSearch, selectedKeys, expandedKeys, selectedValues, treeData } = this.state;\r\n        const {\r\n            refType,\r\n            isMultiSelectedEnabled,\r\n            isTreelazyLoad,\r\n            rootNode,\r\n            onlyLeafCanSelect,\r\n            disabledDataShow\r\n        } = this.props;\r\n\r\n        //树表state\r\n        var loopNode = (nodes, handler) => {\r\n            nodes.forEach((node) => {\r\n                handler && handler(node, node.children || []);\r\n                loopNode(node.children || [], handler);\r\n            });\r\n        };\r\n\r\n        var laybtns = [],\r\n            createNumberBtns = (nodes) => {\r\n                //获取树节点层级号数组\r\n                var maxlaynumber = 1,\r\n                    i,\r\n                    btns = [],\r\n                    hander = (node, children) => {\r\n                        var nodenumber = parseInt(node.nodeData ? node.nodeData.laynumber : 0);\r\n                        maxlaynumber = nodenumber <= maxlaynumber ? maxlaynumber : nodenumber;\r\n                    };\r\n                loopNode(nodes, hander);\r\n                for (i = 0; i <= maxlaynumber; i++) {\r\n                    laybtns.push(\r\n                        <NCMenu.Item key={i} expandLay={true}>\r\n                            {langCheck('0000PUB-000039')}\r\n                            {/* 国际化处理： 展开*/}\r\n                            {i + 1}\r\n                            {langCheck('0000PUB-000040')}\r\n                            {/* 国际化处理： 级*/}\r\n                        </NCMenu.Item>\r\n                    );\r\n                }\r\n            };\r\n        createNumberBtns(treeData || []);\r\n\r\n        var onMenuSelect = (domEvent, item, key) => {\r\n            if (domEvent.key == 'expandAll') {\r\n                var key = [],\r\n                    keyHander = (node, children) => {\r\n                        key.push(node.key);\r\n                    };\r\n                loopNode(treeData, keyHander);\r\n                this.state.expandedKeys = key;\r\n                this.setState(this.state);\r\n            }\r\n            if (domEvent.key == 'unexpandAll') {\r\n                this.state.expandedKeys = [];\r\n                this.setState(this.state);\r\n            }\r\n            if (domEvent.item.props.expandLay) {\r\n                var key = [],\r\n                    layno = domEvent.key,\r\n                    keyHander = (node, children) => {\r\n                        var nodenumber = parseInt(node.nodeData ? node.nodeData.laynumber : 0);\r\n                        if (nodenumber <= layno) {\r\n                            key.push(node.key);\r\n                        }\r\n                    };\r\n                loopNode(treeData, keyHander);\r\n                this.state.expandedKeys = key;\r\n                this.setState(this.state);\r\n            }\r\n        };\r\n\r\n        var createMore = () => {\r\n            return (\r\n                <NCMenu onSelect={onMenuSelect}>\r\n                    <NCMenu.Item key='expandAll'>{langCheck('0000PUB-000041')}</NCMenu.Item>\r\n                    {/* 国际化处理： 展开全部*/}\r\n                    <NCMenu.Item key='unexpandAll'>{langCheck('0000PUB-000042')}</NCMenu.Item>\r\n                    {/* 国际化处理： 收起全部*/}\r\n                    <NCMenu.NCSubMenu key='expandLay' title={langCheck('0000PUB-000037')}>\r\n                        {/* 国际化处理： 展开级次*/}\r\n                        {laybtns}\r\n                    </NCMenu.NCSubMenu>\r\n                </NCMenu>\r\n            );\r\n        };\r\n\r\n        var renderSearch = {\r\n            ...this.state.search,\r\n            value: this.state.search.valueTemp\r\n        };\r\n\r\n        return (\r\n            <div style={{ paddingLeft: 10 }}>\r\n                <div style={{ paddingLeft: 10 }}>\r\n                    <div\r\n                        className='accountBookGrid_wrap_neibu'\r\n                        style={{\r\n                            display: 'flex',\r\n                            marginTop: 10,\r\n                            justifyContent: 'flex-start',\r\n                            marginBottom: 10\r\n                        }}\r\n                    >\r\n                        <div style={{ position: 'relative' }} className='icon-qingkong-hover-container'>\r\n                            <NCFormControl {...renderSearch} />\r\n                            <i\r\n                                class='icon iconfont icon-sousuo syncTreeSearchIcon'\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    right: 5,\r\n                                    color: '#878b94'\r\n                                }}\r\n                            />\r\n                            {this.state.search.valueTemp && (\r\n                                <i\r\n                                    style={{\r\n                                        position: 'absolute',\r\n                                        top: 7,\r\n                                        right: 20,\r\n                                        color: '#878b94'\r\n                                    }}\r\n                                    className='refer-del-i iconfont icon-qingkong icon-qingkong-hover'\r\n                                    onClick={() => {\r\n                                        this.state.search.valueTemp = '';\r\n                                        this.setState({\r\n                                            search: this.state.search\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div style={{ marginLeft: 10, paddingTop: 2 }}>\r\n                            {isMultiSelectedEnabled && this.showInCludeChildren ? (\r\n                                <NCCheckbox className='AccountBookTreeref-Search-checkbox' {...this.state.subOrg}>\r\n                                    {langCheck('0000PUB-000043')}\r\n                                    {/* 国际化处理： 包含下级*/}\r\n                                </NCCheckbox>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                            {disabledDataShow ? (\r\n                                <NCCheckbox className='AccountBookTreeref-Search-checkbox' {...this.state.mshowoff}>\r\n                                    {langCheck('0000PUB-000044')}\r\n                                    {/* 国际化处理： 显示停用*/}\r\n                                </NCCheckbox>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </div>\r\n                        <NCDropdown trigger={[ 'click' ]} overlay={createMore()} animation='slide-up'>\r\n                            <span className='more-button' style={{ marginTop: 7 }}>\r\n                                {langCheck('0000PUB-000045')}\r\n                                {/* 国际化处理： 更多*/}\r\n                            </span>\r\n                        </NCDropdown>\r\n                    </div>\r\n                    <div>\r\n                        <RadioGroup\r\n                            name='booktype'\r\n                            selectedValue={this.state.treetype}\r\n                            onChange={this.onTreeTypeChange.bind(this)}\r\n                        >\r\n                            <Radio value='type'>{langCheck('0000PUB-000035')}</Radio>\r\n                            {/* 国际化处理： 账簿类型*/}\r\n                            <Radio value='main'>{langCheck('0000PUB-000036')}</Radio>\r\n                            {/* 国际化处理： 主账簿*/}\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: 350, overflow: 'auto', paddingLeft: 10 }}>\r\n                    <ReferTree\r\n                        checkStrictly={true}\r\n                        checkable={refType === 'tree' && isMultiSelectedEnabled}\r\n                        data={treeData}\r\n                        showLine={true}\r\n                        onSelect={this.onTreeNodeSelectWapper.bind(this)}\r\n                        onExpand={this.onTreeNodeExpand.bind(this)}\r\n                        onCheck={this.onTreeNodeCheckWapper.bind(this)}\r\n                        checkedKeys={[ ...selectedValues.keys(), ...this.selectRootKeys ]}\r\n                        selectedKeys={selectedKeys}\r\n                        expandedKeys={expandedKeys}\r\n                        autoExpandParent={false}\r\n                        isTreelazyLoad={isTreelazyLoad}\r\n                        root={rootNode}\r\n                        onlyLeafCanSelect={onlyLeafCanSelect}\r\n                        searchValue={this.state.search.value}\r\n                        onDoubleClick={this.onTreeNodeDoubleClickWapper.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refName: langCheck('0000PUB-000038') /* 国际化处理： 财务核算账簿*/,\r\n        placeholder: langCheck('0000PUB-000038') /* 国际化处理： 财务核算账簿*/,\r\n        rootNode: { refname: langCheck('0000PUB-000038'), refpk: 'root' } /* 国际化处理： 财务核算账簿*/,\r\n        refCode: 'uapbd.ref.AccountBookTreeRef',\r\n        queryTreeUrl: '/nccloud/uapbd/ref/AccountBookTreeRef.do',\r\n        isMultiSelectedEnabled: true,\r\n        refType: 'tree',\r\n        isTreelazyLoad: false,\r\n        treeConfig: {\r\n            name: [ langCheck('0000PUB-000032'), langCheck('0000PUB-000033') ],\r\n            code: [ 'refcode', 'refname' ]\r\n        } /* 国际化处理： 编码,名称*/,\r\n        showGroup: false,\r\n        //isCacheable:true,\r\n        showInCludeChildren: true,\r\n        disabledDataShow: false\r\n    };\r\n    conf.rootNode = { ...conf.rootNode, treeid: 'root' };\r\n    return <Ref {...Object.assign(conf, props)} />;\r\n}\r\n","\nvar content = require(\"!!../../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/_style-loader@0.20.3@style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/_css-loader@1.0.1@css-loader/index.js!../../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js!../../../../../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js??ref--5-3!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/_css-loader@1.0.1@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".accountBookGrid_wrap_neibu .u-form-control-wrapper,.AccountBookTreeref-Search{width:200px}.AccountBookTreeref-Search-checkbox{margin-top:5px!important;margin-left:10px}.AccountBookTreeref-Search-checkbox label{width:75px}.u-dropdown-menu-submenu-title:after{font-family:iconfont;right:9px!important}.u-dropdown-menu-submenu-title{margin:0;position:relative;display:block;white-space:nowrap;padding:0 10px 0 15px;line-height:42px;height:42px;overflow:hidden;text-overflow:ellipsis}.u-dropdown-menu-item{padding:0 28px 0 16px!important;padding:0 10px 0 15px}.uapbd-cashflow-treefilter-highlight{color:#f50;transition:all .3s ease;font-weight:700}.icon-qingkong-hover-container .icon-qingkong-hover{visibility:hidden}.icon-qingkong-hover-container:hover .icon-qingkong-hover{visibility:visible}\", \"\"]);\n\n// exports\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000058'),/* 国际化处理： 信用控制域*/\r\n        placeholder: langCheck('0000PUB-000058'),/* 国际化处理： 信用控制域*/\r\n        refCode: \"uapbd.refer.org.CreditCtlRegionGridRef\",\r\n        queryGridUrl: \"/nccloud/uapbd/org/CreditCtlRegionGridRef.do\",\r\n        isMultiSelectedEnabled: false,\r\n        columnConfig: [{ name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"refcode\", \"refname\"] }]/* 国际化处理： 编码,名称*/\r\n    };\r\n\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n\r\nexport default function(props = {}) {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000057'),/* 国际化处理： 成本域*/\r\n        placeholder: langCheck('0000PUB-000057'),/* 国际化处理： 成本域*/\r\n        refCode: \"uapbd.org.CostRegionDefaultGridRef\",\r\n        queryGridUrl: \"/nccloud/uapbd/ref/CostRegionDefaultGridRef.do\",\r\n        columnConfig: [\r\n            { name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"refcode\", \"refname\"] }/* 国际化处理： 编码,名称*/\r\n        ],\r\n        isMultiSelectedEnabled: false\r\n    };\r\n\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n}\r\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n/**\r\n * 内容语种参照\r\n * @param {*} props\r\n */\r\nexport default (props = {}) => {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000056'),/* 国际化处理： 内容语种*/\r\n        refCode: \"code\",\r\n        placeholder: langCheck('0000PUB-000056'),/* 国际化处理： 内容语种*/\r\n        queryGridUrl: \"/nccloud/platform/appregister/multilangref.do\",\r\n        columnConfig: [{ name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"refcode\", \"refname\"] }],/* 国际化处理： 编码,名称*/\r\n        isMultiSelectedEnabled: false\r\n    };\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n};\r\n","import React from \"react\";\r\nimport { high } from \"nc-lightapp-front\";\r\nimport {langCheck} from \"Pub/js/utils\";\r\nconst { Refer } = high;\r\n/**\r\n * 业务数据格式参照\r\n * @param {*} props\r\n */\r\nexport default (props = {}) => {\r\n    var conf = {\r\n        refType: \"grid\",\r\n        refName: langCheck('0000PUB-000059'),/* 国际化处理： 数据格式*/\r\n        refCode: \"code\",\r\n        placeholder: langCheck('0000PUB-000059'),/* 国际化处理： 数据格式*/\r\n        queryGridUrl: \"/nccloud/platform/appregister/dataformatref.do\",\r\n        columnConfig: [{ name: [langCheck('0000PUB-000032'), langCheck('0000PUB-000033')], code: [\"refcode\", \"refname\"] }],/* 国际化处理： 编码,名称*/\r\n        isMultiSelectedEnabled: false\r\n    };\r\n    return <Refer {...Object.assign(conf, props)} />;\r\n};\r\n","import React from \"react\";\nimport { high } from \"nc-lightapp-front\";\nimport { langCheck } from \"Pub/js/utils\";\nconst { Refer } = high;\n\nexport var conf = {\n    refType: \"tree\",\n    refName: langCheck(\"0000PUB-000277\") /* 国际化处理： 责任核算账簿*/,\n    refCode: \"uapbd.refer.org.liabilitybooktreeref\",\n    rootNode: {\n        refname: langCheck(\"0000PUB-000277\"),\n        refpk: \"root\"\n    } /* 国际化处理： 责任核算账簿*/,\n    placeholder: langCheck(\"0000PUB-000277\") /* 国际化处理： 责任核算账簿*/,\n    queryTreeUrl: \"/nccloud/uapbd/ref/LiabilityBookTreeRef.do\",\n    treeConfig: {\n        name: [langCheck(\"0000PUB-000032\"), langCheck(\"0000PUB-000033\")],\n        code: [\"refcode\", \"refname\"]\n    } /* 国际化处理： 编码,名称*/,\n    isMultiSelectedEnabled: false,\n    isShowUnit: false,\n    queryCondition: () => {\n        return {\n            TreeRefActionExt:\n                \"nccloud.web.platform.workbench.action.ResOrgSQLBuilder\"\n        };\n    }\n};\n\nexport default function(props = {}) {\n    return <Refer {...Object.assign(conf, props)} />;\n}\n","import React, { Component } from 'react';\r\n/**\r\n * 个性化设置页面布局\r\n */\r\nclass ComLayout extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={`customize-page ${this.props.className ? this.props.className : ''}`}>\r\n\t\t\t\t<div className=\"customize-content\">{this.props.children}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ComLayout;\r\n"],"sourceRoot":""}