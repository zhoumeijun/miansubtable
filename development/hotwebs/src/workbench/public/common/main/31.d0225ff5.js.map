{"version":3,"sources":["webpack:///./pages/ifr/index.js"],"names":["Ifr","props","changeUrl","urlKey","generateUrlKey","newUrl","location","hash","substr","indexOf","setUrlInSession","state","json","getMulti","moduleId","domainName","callback","setState","this","nextProps","nextState","ifrOldIfr","document","getElementById","ifr","GetQuery","search","ifrNew","split","ifrOld","src","window","origin","className","ref","allowPaint","fieldid","id","style","width","height","frameBorder","scrolling","Component","propTypes","PropTypes","object","isRequired","connect","ifrData"],"mappings":"mMAAA,O,OACA,Q,IACA,MACA,Q,IACA,QACA,S,uDAIMA,E,YACF,WAAYC,IAAO,wFACTA,IADS,SAgEnBC,UAAY,WACR,IAAMC,GAAS,IAAAC,kBACTC,EAASC,SAASC,KAAKC,OAAOF,SAASC,KAAKE,QAAQ,KAAO,IACjE,IAAAC,iBAAgBP,EAAQE,GACxBC,SAASC,KAAT,cAA8BJ,GAlE9B,EAAKQ,MAAQ,CACTC,KAAM,IAHK,E,qFAuBE,YAOjB,IAAAC,UAAS,CACLC,SAAU,MAEVC,WAAY,YACZC,SAVW,SAAAJ,GAEX,EAAKK,SAAS,CACVL,KAAMA,OAUQN,SAASC,KAAKE,QAAQ,SAAW,GACnDS,KAAKhB,c,4CAGSiB,EAAWC,GAC7B,IAAIC,EAAYC,SAASC,eAAe,cACxC,IAAKF,EAAW,OAAO,EAFiB,IAGlCG,GAAQ,IAAAC,UAASN,EAAUb,SAASoB,QAApCF,IACN,GAAIA,GAAOA,EAAIf,QAAQ,KAAM,CACzB,IAAIkB,EAASH,EAAII,MAAM,KAAK,GACxBC,EAASR,EAAUS,IAGvB,OAAIH,KADJE,GADAA,EAASA,EAAOD,MAAM,KAAK,IACXA,MAAMG,OAAOzB,SAAS0B,QAAQ,IAU9C,OAAO,I,+BAYN,IACCR,GAAQ,IAAAC,UAASP,KAAKjB,MAAMK,SAASoB,QAArCF,IACN,OACI,+BAAKS,UAAU,sBAAsBC,IAAI,uBACpChB,KAAKjB,MAAMkC,WACR,kCACIC,QAAA,cACAC,GAAG,aACHC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,YAAY,IACZC,UAAU,IACVZ,IAAKN,IAGT,wBAAC,UAAD,W,GAtFFmB,aA4FlB3C,EAAI4C,UAAY,CACZT,WAAYU,UAAUC,OAAOC,Y,WAElB,IAAAC,SACX,SAAArC,GACI,MAAO,CACHwB,WAAYxB,EAAMsC,QAAQd,aAGlC,GANW,CAObnC","file":"31.d0225ff5.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { GetQuery, generateUrlKey, setUrlInSession } from \"Pub/js/utils\";\nimport Loading from \"Components/Loading\";\nimport { getMulti } from \"Pub/js/getMulti\";\n/**\n * 工作桌面各个应用挂载页面 统一通过 iframe 方式进行加载\n */\nclass Ifr extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            json: {}\n        };\n    }\n\n    // createWidgetDom = ifrSrc => {\n    //     let { json } = this.state;\n    //     let ifr = document.createElement(\"iframe\");\n    //     ifr.setAttribute(\"field\", \"main-iframe\");\n    //     ifr.setAttribute(\"id\", \"mainiframe\");\n    //     ifr.style.width = \"100%\";\n    //     ifr.style.height = \"100%\";\n    //     ifr.frameBorder = \"0\";\n    //     ifr.scrolling = \"yes\";\n    //     this.refs[\"nc-workbench-iframe\"].appendChild(ifr);\n    //     let ifrDoc = ifr.contentWindow.document;\n    //     ifrDoc\n    //         .open()\n    //         .write(`<body onload=\"window.location.href='${ifrSrc}';\">`);\n    //     ifrDoc.close();\n    // };\n    componentWillMount() {\n        let callback = json => {\n            // console.log('json', json);\n            this.setState({\n                json: json\n            });\n        };\n        getMulti({\n            moduleId: \"ifr\",\n            // currentLocale: 'zh-CN',\n            domainName: \"workbench\",\n            callback\n        });\n        //直接用window.open()跳转过来将url放到sessionStorage\n        if (URL_IN_SESSION && location.hash.indexOf(\"?ifr=\") > 0) {\n            this.changeUrl(); \n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        let ifrOldIfr = document.getElementById(\"mainiframe\");\n        if (!ifrOldIfr) return true;\n        let { ifr } = GetQuery(nextProps.location.search);\n        if (ifr && ifr.indexOf(\"#\")) {\n            let ifrNew = ifr.split(\"#\")[0];\n            let ifrOld = ifrOldIfr.src;\n            ifrOld = ifrOld.split(\"#\")[0];\n            ifrOld = ifrOld.split(window.location.origin)[1];\n            if (ifrNew === ifrOld) {\n                // console.error(\"ifr含有#没有渲染iframe\");\n                return false;\n            } else {\n                // console.error(\"ifr含有#已经渲染iframe\");\n                return true;\n            }\n        } else {\n            // console.error(\"ifr已经渲染iframe\");\n            return true;\n        }\n    }\n\n    //从其他系统跳转过来将url放到sessionStorage\n    changeUrl = () => {\n        const urlKey = generateUrlKey();\n        const newUrl = location.hash.substr(location.hash.indexOf(\"?\") + 1);\n        setUrlInSession(urlKey, newUrl);\n        location.hash = `#/ifr?page=${urlKey}`;\n    }\n\n    render() {\n        let { ifr } = GetQuery(this.props.location.search);\n        return (\n            <div className=\"nc-workbench-iframe\" ref=\"nc-workbench-iframe\">\n                {this.props.allowPaint ? (\n                    <iframe\n                        fieldid={`main_iframe`}\n                        id=\"mainiframe\"\n                        style={{ width: \"100%\", height: \"100%\" }}\n                        frameBorder=\"0\"\n                        scrolling=\"0\"\n                        src={ifr}\n                    />\n                ) : (\n                    <Loading />\n                )}\n            </div>\n        );\n    }\n}\nIfr.propTypes = {\n    allowPaint: PropTypes.object.isRequired\n};\nexport default connect(\n    state => {\n        return {\n            allowPaint: state.ifrData.allowPaint\n        };\n    },\n    {}\n)(Ifr);\n"],"sourceRoot":""}